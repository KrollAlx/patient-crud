["^ ","~:output",["^ ","~:js","goog.provide('day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor');\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.mandatory_interceptor_keys = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"after\",\"after\",594996914),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),null], null), null);\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.interceptor_QMARK_ = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$interceptor_QMARK_(m){\nreturn ((cljs.core.map_QMARK_(m)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.mandatory_interceptor_keys,cljs.core.set(cljs.core.keys(m)))));\n});\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$__GT_interceptor(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___23227 = arguments.length;\nvar i__5770__auto___23228 = (0);\nwhile(true){\nif((i__5770__auto___23228 < len__5769__auto___23227)){\nargs__5775__auto__.push((arguments[i__5770__auto___23228]));\n\nvar G__23229 = (i__5770__auto___23228 + (1));\ni__5770__auto___23228 = G__23229;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((0) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic = (function (p__23163){\nvar map__23164 = p__23163;\nvar map__23164__$1 = cljs.core.__destructure_map(map__23164);\nvar m = map__23164__$1;\nvar id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23164__$1,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092));\nvar before = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23164__$1,new cljs.core.Keyword(null,\"before\",\"before\",-1633692388));\nvar after = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23164__$1,new cljs.core.Keyword(null,\"after\",\"after\",594996914));\nif(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interop.debug_enabled_QMARK_){\nvar temp__5802__auto___23232 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(m)),day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.mandatory_interceptor_keys));\nif(temp__5802__auto___23232){\nvar unknown_keys_23233 = temp__5802__auto___23232;\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ->interceptor\",m,\"has unknown keys:\",unknown_keys_23233], 0));\n} else {\n}\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),(function (){var or__5045__auto__ = id;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"unnamed\",\"unnamed\",-26044928);\n}\n})(),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388),before,new cljs.core.Keyword(null,\"after\",\"after\",594996914),after], null);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.__GT_interceptor.cljs$lang$applyTo = (function (seq23133){\nvar self__5755__auto__ = this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23133));\n}));\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$get_effect(var_args){\nvar G__23170 = arguments.length;\nswitch (G__23170) {\ncase 1:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1 = (function (context){\nreturn new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2 = (function (context,key){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null));\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3 = (function (context,key,not_found){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null),not_found);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_effect.cljs$lang$maxFixedArity = 3);\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_effect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$assoc_effect(context,key,value){\nreturn cljs.core.assoc_in(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null),value);\n});\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_effect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$update_effect(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___23241 = arguments.length;\nvar i__5770__auto___23242 = (0);\nwhile(true){\nif((i__5770__auto___23242 < len__5769__auto___23241)){\nargs__5775__auto__.push((arguments[i__5770__auto___23242]));\n\nvar G__23243 = (i__5770__auto___23242 + (1));\ni__5770__auto___23242 = G__23243;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((3) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((3)),(0),null)):null);\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_effect.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5776__auto__);\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_effect.cljs$core$IFn$_invoke$arity$variadic = (function (context,key,f,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.update_in,context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292),key], null),f,args);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_effect.cljs$lang$maxFixedArity = (3));\n\n/** @this {Function} */\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_effect.cljs$lang$applyTo = (function (seq23180){\nvar G__23188 = cljs.core.first(seq23180);\nvar seq23180__$1 = cljs.core.next(seq23180);\nvar G__23189 = cljs.core.first(seq23180__$1);\nvar seq23180__$2 = cljs.core.next(seq23180__$1);\nvar G__23190 = cljs.core.first(seq23180__$2);\nvar seq23180__$3 = cljs.core.next(seq23180__$2);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23188,G__23189,G__23190,seq23180__$3);\n}));\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$get_coeffect(var_args){\nvar G__23204 = arguments.length;\nswitch (G__23204) {\ncase 1:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1 = (function (context){\nreturn new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985).cljs$core$IFn$_invoke$arity$1(context);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2 = (function (context,key){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null));\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$3 = (function (context,key,not_found){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null),not_found);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.get_coeffect.cljs$lang$maxFixedArity = 3);\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$assoc_coeffect(context,key,value){\nreturn cljs.core.assoc_in(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null),value);\n});\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$update_coeffect(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___23249 = arguments.length;\nvar i__5770__auto___23250 = (0);\nwhile(true){\nif((i__5770__auto___23250 < len__5769__auto___23249)){\nargs__5775__auto__.push((arguments[i__5770__auto___23250]));\n\nvar G__23254 = (i__5770__auto___23250 + (1));\ni__5770__auto___23250 = G__23254;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((3) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((3)),(0),null)):null);\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5776__auto__);\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect.cljs$core$IFn$_invoke$arity$variadic = (function (context,key,f,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.update_in,context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"coeffects\",\"coeffects\",497912985),key], null),f,args);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect.cljs$lang$maxFixedArity = (3));\n\n/** @this {Function} */\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.update_coeffect.cljs$lang$applyTo = (function (seq23209){\nvar G__23210 = cljs.core.first(seq23209);\nvar seq23209__$1 = cljs.core.next(seq23209);\nvar G__23211 = cljs.core.first(seq23209__$1);\nvar seq23209__$2 = cljs.core.next(seq23209__$1);\nvar G__23212 = cljs.core.first(seq23209__$2);\nvar seq23209__$3 = cljs.core.next(seq23209__$2);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23210,G__23211,G__23212,seq23209__$3);\n}));\n\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.invoke_interceptor_fn = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$invoke_interceptor_fn(context,interceptor,direction){\nvar temp__5802__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(interceptor,direction);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar f = temp__5802__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(context) : f.call(null,context));\n} else {\nreturn context;\n}\n});\n/**\n * Loop over all interceptors, calling `direction` function on each,\n *   threading the value of `context` through every call.\n * \n *   `direction` is one of `:before` or `:after`.\n * \n *   Each iteration, the next interceptor to process is obtained from\n *   context's `:queue`. After they are processed, interceptors are popped\n *   from `:queue` and added to `:stack`.\n * \n *   After sufficient iteration, `:queue` will be empty, and `:stack` will\n *   contain all interceptors processed.\n * \n *   Returns updated `context`. Ie. the `context` which has been threaded\n *   through all interceptor functions.\n * \n *   Generally speaking, an interceptor's `:before` function will (if present)\n *   add to a `context's` `:coeffects`, while it's `:after` function\n *   will modify the `context`'s `:effects`.  Very approximately.\n * \n *   But because all interceptor functions are given `context`, and can\n *   return a modified version of it, the way is clear for an interceptor\n *   to introspect the stack or queue, or even modify the queue\n *   (add new interceptors via `enqueue`?). This is a very fluid arrangement.\n */\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.invoke_interceptors = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$invoke_interceptors(context,direction){\nvar context__$1 = context;\nwhile(true){\nvar queue = new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879).cljs$core$IFn$_invoke$arity$1(context__$1);\nif(cljs.core.empty_QMARK_(queue)){\nreturn context__$1;\n} else {\nvar interceptor = cljs.core.peek(queue);\nvar stack = new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930).cljs$core$IFn$_invoke$arity$1(context__$1);\nvar G__23273 = day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.invoke_interceptor_fn(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(context__$1,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),cljs.core.pop(queue),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,interceptor)], 0)),interceptor,direction);\ncontext__$1 = G__23273;\ncontinue;\n}\nbreak;\n}\n});\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.enqueue = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$enqueue(context,interceptors){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interop.empty_queue),interceptors);\n});\n/**\n * Create a fresh context\n */\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$context(var_args){\nvar G__23217 = arguments.length;\nswitch (G__23217) {\ncase 2:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2 = (function (event,interceptors){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.enqueue(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"event\",\"event\",301435442),event),new cljs.core.Keyword(null,\"original-event\",\"original-event\",2121330403),event),interceptors);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$3 = (function (event,interceptors,db){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.assoc_coeffect(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2(event,interceptors),new cljs.core.Keyword(null,\"db\",\"db\",993250759),db);\n}));\n\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$lang$maxFixedArity = 3);\n\n/**\n * Called on completion of `:before` processing, this function prepares/modifies\n * `context` for the backwards sweep of processing in which an interceptor\n * chain's `:after` fns are called.\n * \n *   At this point in processing, the `:queue` is empty and `:stack` holds all\n *   the previously run interceptors. So this function enables the backwards walk\n *   by priming `:queue` with what's currently in `:stack`\n */\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.change_direction = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$change_direction(context){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.enqueue(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\"queue\",\"queue\",1455835879)),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930).cljs$core$IFn$_invoke$arity$1(context));\n});\n/**\n * Executes the given chain (coll) of interceptors.\n * \n * Each interceptor has this form:\n *     {:before  (fn [context] ...)     ;; returns possibly modified context\n *      :after   (fn [context] ...)}    ;; `identity` would be a noop\n * \n * Walks the queue of interceptors from beginning to end, calling the\n * `:before` fn on each, then reverse direction and walk backwards,\n * calling the `:after` fn on each.\n * \n * The last interceptor in the chain presumably wraps an event\n * handler fn. So the overall goal of the process is to \"handle\n * the given event\".\n * \n * Thread a `context` through all calls. `context` has this form:\n * \n *   {:coeffects {:event [:a-query-id :some-param]\n *                :db    <original contents of app-db>}\n *    :effects   {:db    <new value for app-db>\n *                :dispatch  [:an-event-id :param1]}\n *    :queue     <a collection of further interceptors>\n *    :stack     <a collection of interceptors already walked>}\n * \n * `context` has `:coeffects` and `:effects` which, if this was a web\n * server, would be somewhat analogous to `request` and `response`\n * respectively.\n * \n * `coeffects` will contain data like `event` and the initial\n * state of `db` -  the inputs required by the event handler\n * (sitting presumably on the end of the chain), while handler-returned\n * side effects are put into `:effects` including, but not limited to,\n * new values for `db`.\n * \n * The first few interceptors in a chain will likely have `:before`\n * functions which \"prime\" the `context` by adding the event, and\n * the current state of app-db into `:coeffects`. But interceptors can\n * add whatever they want to `:coeffects` - perhaps the event handler needs\n * some information from localstore, or a random number, or access to\n * a DataScript connection.\n * \n * Equally, some interceptors in the chain will have `:after` fn\n * which can process the side effects accumulated into `:effects`\n * including but, not limited to, updates to app-db.\n * \n * Through both stages (before and after), `context` contains a `:queue`\n * of interceptors yet to be processed, and a `:stack` of interceptors\n * already done.  In advanced cases, these values can be modified by the\n * functions through which the context is threaded.\n */\nday8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.execute = (function day8$re_frame_10x$inlined_deps$re_frame$v1v1v2$re_frame$interceptor$execute(event_v,interceptors){\nif(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23074__auto___23282 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.merge,new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"interceptors\",\"interceptors\",-1546782951),interceptors], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"interceptors\",\"interceptors\",-1546782951),interceptors], null)], null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977))], 0));\n(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.trace._STAR_current_trace_STAR_ = new_trace__23074__auto___23282);\n\n} else {\n}\n\nreturn day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.invoke_interceptors(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.change_direction(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.invoke_interceptors(day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2(event_v,interceptors),new cljs.core.Keyword(null,\"before\",\"before\",-1633692388))),new cljs.core.Keyword(null,\"after\",\"after\",594996914));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","~:line",1,"~:column",33,"~:end-line",1,"~:end-column",100,"~:mranderson/inlined",true],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.tools.reader.impl.utils","~$cljs.tools.reader.impl.utils","~$cljs.loader","~$shadow.loader","~$clojure.tools.reader.impl.commons","~$cljs.tools.reader.impl.commons","~$clojure.tools.reader.impl.errors","~$cljs.tools.reader.impl.errors","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.tools.reader.edn","~$cljs.tools.reader.edn","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.loggers","^11","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop","^12","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace","^13","~$trace","^13","~$clojure.set","^15","~$set","^15","~$cljs.core","^17","~$goog","^18"],"~:seen",["^U",["~:require"]],"~:uses",["^ ","~$console","^11","~$empty-queue","^12","~$debug-enabled?","^12"],"~:require-macros",["^ ","^13","^13","^14","^13","^17","^17"],"~:form",["~#list",["~$ns","^W",["^1A",["^1:",["^11","~:refer",["^1<"]],["^12","^1C",["^1=","^1>"]],["^13","~:as","^14","~:include-macros",true],["^15","^1D","^16"]]]]],"~:flags",["^ ","^1:",["^U",[]]],"~:js-deps",["^ "],"~:deps",["^18","^17","^11","^12","^13","^15"]],"^Z","^W","~:resource-id",["~:shadow.build.classpath/resource","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc"],"~:compiled-at",1666857657192,"^X",["^ ","^11","^11","^12","^12","^13","^13","^14","^13","^15","^15","^16","^15","^17","^17","^18","^18"],"~:resource-name","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","~:warnings",[],"~:source","(ns ^{:mranderson/inlined true} day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor\n  (:require\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.loggers :refer [console]]\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop :refer [empty-queue debug-enabled?]]\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace :as trace :include-macros true]\n    [clojure.set :as set]))\n\n\n(def mandatory-interceptor-keys #{:id :after :before})\n\n(defn interceptor?\n  [m]\n  (and (map? m)\n       (= mandatory-interceptor-keys (-> m keys set))))\n\n\n(defn ->interceptor\n  [& {:as m :keys [id before after]}]\n  (when debug-enabled?\n    (if-let [unknown-keys (seq (set/difference\n                                (-> m keys set)\n                                mandatory-interceptor-keys))]\n      (console :error \"re-frame: ->interceptor\" m \"has unknown keys:\" unknown-keys)))\n  {:id     (or id :unnamed)\n   :before before\n   :after  after})\n\n;; -- Effect Helpers  -----------------------------------------------------------------------------\n\n(defn get-effect\n  ([context]\n   (:effects context))\n  ([context key]\n   (get-in context [:effects key]))\n  ([context key not-found]\n   (get-in context [:effects key] not-found)))\n\n(defn assoc-effect\n  [context key value]\n  (assoc-in context [:effects key] value))\n\n(defn update-effect\n  [context key f & args]\n  (apply update-in context [:effects key] f args))\n\n;; -- CoEffect Helpers  ---------------------------------------------------------------------------\n\n(defn get-coeffect\n  ([context]\n   (:coeffects context))\n  ([context key]\n   (get-in context [:coeffects key]))\n  ([context key not-found]\n   (get-in context [:coeffects key] not-found)))\n\n(defn assoc-coeffect\n  [context key value]\n  (assoc-in context [:coeffects key] value))\n\n(defn update-coeffect\n  [context key f & args]\n  (apply update-in context [:coeffects key] f args))\n\n;; -- Execute Interceptor Chain  ------------------------------------------------------------------\n\n\n(defn- invoke-interceptor-fn\n  [context interceptor direction]\n  (if-let [f (get interceptor direction)]\n    (f context)\n    context))\n\n\n(defn- invoke-interceptors\n  \"Loop over all interceptors, calling `direction` function on each,\n  threading the value of `context` through every call.\n\n  `direction` is one of `:before` or `:after`.\n\n  Each iteration, the next interceptor to process is obtained from\n  context's `:queue`. After they are processed, interceptors are popped\n  from `:queue` and added to `:stack`.\n\n  After sufficient iteration, `:queue` will be empty, and `:stack` will\n  contain all interceptors processed.\n\n  Returns updated `context`. Ie. the `context` which has been threaded\n  through all interceptor functions.\n\n  Generally speaking, an interceptor's `:before` function will (if present)\n  add to a `context's` `:coeffects`, while it's `:after` function\n  will modify the `context`'s `:effects`.  Very approximately.\n\n  But because all interceptor functions are given `context`, and can\n  return a modified version of it, the way is clear for an interceptor\n  to introspect the stack or queue, or even modify the queue\n  (add new interceptors via `enqueue`?). This is a very fluid arrangement.\"\n  ([context direction]\n   (loop [context context]\n     (let [queue (:queue context)]        ;; future interceptors\n       (if (empty? queue)\n         context\n         (let [interceptor (peek queue)   ;; next interceptor to call\n               stack (:stack context)]    ;; already completed interceptors\n           (recur (-> context\n                      (assoc :queue (pop queue)\n                             :stack (conj stack interceptor))\n                      (invoke-interceptor-fn interceptor direction)))))))))\n\n\n(defn enqueue\n  [context interceptors]\n  (update context :queue\n          (fnil into empty-queue)\n          interceptors))\n\n\n(defn- context\n  \"Create a fresh context\"\n  ([event interceptors]\n   (-> {}\n      (assoc-coeffect :event event)\n      ;; Some interceptors, like `trim-v` and `unwrap`, alter event so capture\n      ;; the original for use cases such as tracing.\n      (assoc-coeffect :original-event event)\n      (enqueue interceptors)))\n  ([event interceptors db]      ;; only used in tests, probably a hack, remove ?  XXX\n   (-> (context event interceptors)\n       (assoc-coeffect :db db))))\n\n\n(defn- change-direction\n  \"Called on completion of `:before` processing, this function prepares/modifies\n   `context` for the backwards sweep of processing in which an interceptor\n   chain's `:after` fns are called.\n\n  At this point in processing, the `:queue` is empty and `:stack` holds all\n  the previously run interceptors. So this function enables the backwards walk\n  by priming `:queue` with what's currently in `:stack`\"\n  [context]\n  (-> context\n      (dissoc :queue)\n      (enqueue (:stack context))))\n\n\n(defn execute\n  \"Executes the given chain (coll) of interceptors.\n\n   Each interceptor has this form:\n       {:before  (fn [context] ...)     ;; returns possibly modified context\n        :after   (fn [context] ...)}    ;; `identity` would be a noop\n\n   Walks the queue of interceptors from beginning to end, calling the\n   `:before` fn on each, then reverse direction and walk backwards,\n   calling the `:after` fn on each.\n\n   The last interceptor in the chain presumably wraps an event\n   handler fn. So the overall goal of the process is to \\\"handle\n   the given event\\\".\n\n   Thread a `context` through all calls. `context` has this form:\n\n     {:coeffects {:event [:a-query-id :some-param]\n                  :db    <original contents of app-db>}\n      :effects   {:db    <new value for app-db>\n                  :dispatch  [:an-event-id :param1]}\n      :queue     <a collection of further interceptors>\n      :stack     <a collection of interceptors already walked>}\n\n   `context` has `:coeffects` and `:effects` which, if this was a web\n   server, would be somewhat analogous to `request` and `response`\n   respectively.\n\n   `coeffects` will contain data like `event` and the initial\n   state of `db` -  the inputs required by the event handler\n   (sitting presumably on the end of the chain), while handler-returned\n   side effects are put into `:effects` including, but not limited to,\n   new values for `db`.\n\n   The first few interceptors in a chain will likely have `:before`\n   functions which \\\"prime\\\" the `context` by adding the event, and\n   the current state of app-db into `:coeffects`. But interceptors can\n   add whatever they want to `:coeffects` - perhaps the event handler needs\n   some information from localstore, or a random number, or access to\n   a DataScript connection.\n\n   Equally, some interceptors in the chain will have `:after` fn\n   which can process the side effects accumulated into `:effects`\n   including but, not limited to, updates to app-db.\n\n   Through both stages (before and after), `context` contains a `:queue`\n   of interceptors yet to be processed, and a `:stack` of interceptors\n   already done.  In advanced cases, these values can be modified by the\n   functions through which the context is threaded.\"\n  [event-v interceptors]\n  (trace/merge-trace!\n    {:tags {:interceptors interceptors}})\n  (-> (context event-v interceptors)\n      (invoke-interceptors :before)\n      change-direction\n      (invoke-interceptors :after)))\n","~:reader-features",["^U",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/mandatory-interceptor-keys","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/interceptor?","m","cljs.core/map?","cljs.core._EQ_","cljs.core/keys","cljs.core/set","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/->interceptor","p__23163","map__23164","cljs.core/--destructure-map","cljs.core.get","seq23133","self__5755__auto__","cljs.core/seq","id","before","after","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop/debug-enabled?","temp__5802__auto__","unknown-keys","clojure.set.difference","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.loggers.console","or__5045__auto__","G__23170","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/get-effect","js/Error","context","key","cljs.core.get_in","not-found","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/assoc-effect","value","cljs.core/assoc-in","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/update-effect","seq23180","G__23188","cljs.core/first","cljs.core/next","G__23189","G__23190","self__5754__auto__","f","args","cljs.core.apply","cljs.core/update-in","G__23204","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/get-coeffect","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/assoc-coeffect","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/update-coeffect","seq23209","G__23210","G__23211","G__23212","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/invoke-interceptor-fn","interceptor","direction","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/invoke-interceptors","queue","cljs.core/empty?","cljs.core/peek","stack","cljs.core.assoc","cljs.core/pop","cljs.core.conj","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/enqueue","interceptors","cljs.core.update","cljs.core.fnil","cljs.core/into","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop/empty-queue","G__23217","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/context","event","db","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.interceptor.context","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/change-direction","cljs.core.dissoc","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/execute","event-v","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/is-trace-enabled?","new-trace__23074__auto__","cljs.core.merge","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/*current-trace*","cljs.core/merge"]],"~:used-vars",["^U",["~$cljs.core/--destructure-map","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/change-direction","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/invoke-interceptor-fn","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/get-coeffect","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop/empty-queue","~$cljs.core/=","~$cljs.core/keys","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/is-trace-enabled?","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/assoc-effect","~$cljs.core/IndexedSeq","~$cljs.core/seq","~$cljs.core/apply","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interop/debug-enabled?","~$cljs.core/dissoc","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/execute","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/mandatory-interceptor-keys","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.trace/*current-trace*","~$cljs.core/pop","~$cljs.core/set","~$cljs.core/empty?","~$cljs.core/fnil","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/interceptor?","~$cljs.core/into","~$cljs.core/map?","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/update-coeffect","~$cljs.core/conj","~$cljs.core/update","~$cljs.core/peek","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/assoc-coeffect","~$cljs.core/get-in","~$cljs.core/get","~$clojure.set/difference","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.loggers/console","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/context","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/get-effect","~$cljs.core/next","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/enqueue","~$cljs.core/assoc","~$cljs.core/assoc-in","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/->interceptor","~$cljs.core/first","~$cljs.core/merge","~$cljs.core/update-in","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/invoke-interceptors","~$js/Error","~$day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.interceptor/update-effect"]]],"~:cache-keys",["~#cmap",[["^1J","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^U",[]],"~:deps-syms",["^18","~$goog.dom.HtmlElement"]]],["^1J","goog/labs/useragent/platform.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","~$goog.string.internal","~$goog.labs.userAgent.util"]]],["^1J","goog/math/math.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","~$goog.asserts"]]],["^1J","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","goog/events/eventtype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1J","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","~$goog.array","~$goog.object","^34","^33"]]],["^1J","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^35","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^33"]]],["^1J","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^35"]]],["^1J","goog/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^34","~$goog.reflect","^33"]]],["^1J","goog/events/eventlike.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","~$goog.events.Event","~$goog.events.EventId"]]],["^1J","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/ratom.cljs"],["b5acdbc79cbb677bebc2e2414632fb90de653748","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^17","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.util","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.debug","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.batching","^15","^39"]]],["^1J","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","goog/events/events.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^35","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^36","~$goog.events.Listenable","~$goog.events.ListenerMap","~$goog.debug.ErrorHandler","^3E","~$goog.events.EventLike","~$goog.events.EventWrapper","~$goog.events.ListenableKey","~$goog.events.Listener"]]],["^1J","goog/events/browserfeature.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/protocols.cljs"],["b5acdbc79cbb677bebc2e2414632fb90de653748","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^17"]]],["^1J","goog/events/eventtarget.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","~$goog.Disposable","^35","~$goog.events","^3D","^3K","^3L","^39","^3E","^3N","^3P"]]],["^1J","goog/disposable/disposable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","~$goog.disposable.IDisposable","~$goog.dispose","~$goog.disposeAll"]]],["^1J","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/input.cljs"],["b5acdbc79cbb677bebc2e2414632fb90de653748","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^17","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.component","^3H","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.protocols"]]],["^1J","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["e966149d24edb843cd9990d50bde318950295405","d65b53de796613f3fe4ae9a8b8f966e3b64b7383","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1J","shadow/js.js"],["36a58478a3b86786e2330011d1e7158269f0332a","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^35"]]],"~:SHADOW-TIMESTAMP",[1666857604000,1666857604000,1666857293000],["^3Y","node_modules/react/cjs/react.development.js"],["e966149d24edb843cd9990d50bde318950295405","d65b53de796613f3fe4ae9a8b8f966e3b64b7383","754b7a48941975257c8955f6d5e511cb3a878737","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^3Z","~$module$node_modules$object_assign$index"]]],["^1J","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^35","^3C"]]],["^1J","goog/events/listener.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^3P","^3K"]]],["^1J","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^35","~$goog.fs.blob","^3:","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3<","^3=","^3>","^3?"]]],["^1J","goog/events/listenermap.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^38","^3Q","^39","^3E","^3K","^3P"]]],["^1J","goog/events/eventid.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","goog/events/eventwrapper.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","~$goog.events.EventHandler","~$goog.events.ListenableType"]]],["^1J","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/template.cljs"],["b5acdbc79cbb677bebc2e2414632fb90de653748","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^17","^H","~$clojure.string","^3F","^3W","^3H","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.input","^3X","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.ratom","^3G","^39"]]],["^1J","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^3>","~$goog.html.SafeUrl","^3?","^35","^33"]]],["^1J","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^35","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^44","~$goog.html.SafeStyle","^4;","^3;","~$goog.html.uncheckedconversions","^3>","^33"]]],["^1J","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^17"]]],["^1J","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^3>","^3<","^3=","^44","^4?","~$goog.html.SafeStyleSheet","^4;","~$goog.dom.TagName","^3;","^3?","^35","^3@","^38","^39","^33","~$goog.dom.tags","^45"]]],["^1J","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^39"]]],["^1J","goog/math/size.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc"],["b5acdbc79cbb677bebc2e2414632fb90de653748","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^17","^11","^12","^13","^15"]]],["^1J","goog/labs/useragent/engine.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^38","^33","^34"]]],["^1J","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","goog/dom/dom.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^38","^35","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^4B","~$goog.dom.safe","^4>","^4@","~$goog.math.Coordinate","~$goog.math.Size","^39","~$goog.string","^3>","~$goog.string.Unicode","^37"]]],["^1J","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","~$goog.debug.Error","^4E"]]],["^1J","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/loggers.cljc"],["b5acdbc79cbb677bebc2e2414632fb90de653748","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^17","^15"]]],["^1J","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interop.cljs"],["b5acdbc79cbb677bebc2e2414632fb90de653748","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^17","~$goog.async.nextTick","^3S","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.core","^4:"]]],["^1J","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^38","^35","~$goog.collections.maps","^4I","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1J","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/core.cljs"],["b5acdbc79cbb677bebc2e2414632fb90de653748","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^17","^H","~$day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.impl.template","^3W","^3F","^3H","^3X","^4:","^3G"]]],["^1J","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^3Y","node_modules/object-assign/index.js"],["e966149d24edb843cd9990d50bde318950295405","d65b53de796613f3fe4ae9a8b8f966e3b64b7383","519ffd5a4c91b67302cc9947b794966d629860cd","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^3Z"]]],["^1J","goog/debug/errorhandler.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^3R","^35","~$goog.debug.EntryPointMonitor","^4K"]]],["^1J","goog/disposable/idisposable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",[]]],["^1J","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^38","^39"]]],["^1J","goog/disposable/dispose.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^17","^4I","~$goog.string.StringBuffer"]]],["^3Y","node_modules/react/cjs/react.production.min.js"],["e966149d24edb843cd9990d50bde318950295405","d65b53de796613f3fe4ae9a8b8f966e3b64b7383","0a81b45abe33f0ad39b726512604018f94261db9","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^3Z","^42"]]],["^1J","goog/debug/entrypointregistry.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^35"]]],["^1J","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^4F","^4@","^3>","^33"]]],["^1J","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","~$goog.labs.userAgent","^33"]]],["^1J","goog/debug/debug.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^38","~$goog.debug.errorcontext"]]],["^1J","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","goog/math/coordinate.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","~$goog.math"]]],["^1J","goog/debug/errorcontext.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","goog/async/nexttick.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^3I","~$goog.dom","^4B","^4=","^3@","^3A"]]],["^1J","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^35","^4>","^44","^4?","^4A","^4;","^3;","^3>","^33","^3<"]]],["^1J","goog/events/event.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^3R","^3E"]]],["^1J","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/debug.cljs"],["b5acdbc79cbb677bebc2e2414632fb90de653748","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^17"]]],["^1J","goog/events/eventhandler.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^3R","^3S","^39","^3D","^3E","~$goog.events.EventTarget","^3O"]]],["^1J","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18"]]],["^1J","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","~$goog.math.Long","~$goog.math.Integer","^4I","^39","^38","~$goog.Uri","^4U"]]],["^1J","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^3>","^3?","^45","^35"]]],["^1J","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/trace.cljc"],["b5acdbc79cbb677bebc2e2414632fb90de653748","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^17","^12","^11","^4="]]],["^1J","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/component.cljs"],["b5acdbc79cbb677bebc2e2414632fb90de653748","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^17","^39","^H","^3F","^3H","^3X","^4:","^3G"]]],["^1J","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^3>","^4?","^3?","^39","^35","^33"]]],["^1J","goog/events/browserevent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","~$goog.debug","^3D","~$goog.events.EventType","^3C","^37"]]],["^1J","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^3C"]]],["^1J","goog/dom/browserfeature.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^37"]]],["^1J","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/batching.cljs"],["b5acdbc79cbb677bebc2e2414632fb90de653748","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^17","^3G","^3F"]]],["^1J","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^17"]]],["^1J","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^35","^4I"]]],["^1J","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^35","^3?"]]],["^1J","goog/disposable/disposeall.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^3U"]]],["^1J","day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/impl/util.cljs"],["b5acdbc79cbb677bebc2e2414632fb90de653748","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^17","^48","~$clojure.walk","^39","^3G"]]],["^1J","goog/events/listenable.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^3E","^3N","^3P"]]],["^1J","goog/events/listenablekey.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Z",["^ ","^2[",null,"^30",["^U",[]],"^31",["^18","^3K"]]]]],"~:clj-info",["^ ","jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/day8/re-frame/re-frame-10x/1.5.0/re-frame-10x-1.5.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/core.clj",1666857314000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1666857314000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/day8/re-frame/re-frame-10x/1.5.0/re-frame-10x-1.5.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/interop.clj",1666857314000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1666857314000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/day8/re-frame/re-frame-10x/1.5.0/re-frame-10x-1.5.0.jar!/day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interop.clj",1666857314000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/day8/re-frame/re-frame-10x/1.5.0/re-frame-10x-1.5.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/debug.clj",1666857314000,"jar:file:/Users/aleksey/.m2/repository/day8/re-frame/re-frame-10x/1.5.0/re-frame-10x-1.5.0.jar!/day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/trace.cljc",1666857314000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/day8/re-frame/re-frame-10x/1.5.0/re-frame-10x-1.5.0.jar!/day8/re_frame_10x/inlined_deps/reagent/v1v0v0/reagent/ratom.clj",1666857314000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1666857293000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",1,"^8",33,"^9",1,"^:",100,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^O","^P","^Q","^R"],"^S",null,"^T",["^U",[]],"^V","^W","^X",["^ "],"^[",null,"^10",["^ ","^11","^11","^12","^12","^13","^13","^14","^13","^15","^15","^16","^15","^17","^17","^18","^18"],"^19",["^U",["^1:"]],"~:shadow/js-access-global",["^U",["Error"]],"^1;",["^ ","^1<","^11","^1=","^12","^1>","^12"],"~:defs",["^ ","~$update-effect",["^ ","~:protocol-inline",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",42,"^8",7,"^9",42,"^:",20,"~:arglists",["^1A",["~$quote",["^1A",[["~$context","~$key","~$f","~$&","~$args"]]]]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",3,"~:max-fixed-arity",3,"~:method-params",[["^1A",["^66","^67","~$f","^68"]]],"^64",["^1A",[["^66","^67","~$f","~$&","^68"]]],"~:arglists-meta",["^1A",[null]]]],"^V","^2W","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",20,"^69",["^ ","^6:",true,"^6;",3,"^6<",3,"^6=",[["^1A",["^66","^67","~$f","^68"]]],"^64",["^1A",[["^66","^67","~$f","~$&","^68"]]],"^6>",["^1A",[null]]],"^6=",[["^1A",["^66","^67","~$f","^68"]]],"~:protocol-impl",null,"^6;",3,"^6>",["^1A",[null]],"^8",1,"^6:",true,"~:methods",[["^ ","^6;",3,"^6:",true,"~:tag","~$any"]],"^7",42,"~:ret-tag","^6B","^9",42,"^6<",3,"~:fn-var",true,"^64",["^1A",[["^66","^67","~$f","~$&","^68"]]]],"~$invoke-interceptors",["^ ","^63",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",74,"^8",8,"^9",74,"^:",27,"~:private",true,"^64",["^1A",["^65",["^1A",[["^66","~$direction"]]]]],"~:doc","Loop over all interceptors, calling `direction` function on each,\n  threading the value of `context` through every call.\n\n  `direction` is one of `:before` or `:after`.\n\n  Each iteration, the next interceptor to process is obtained from\n  context's `:queue`. After they are processed, interceptors are popped\n  from `:queue` and added to `:stack`.\n\n  After sufficient iteration, `:queue` will be empty, and `:stack` will\n  contain all interceptors processed.\n\n  Returns updated `context`. Ie. the `context` which has been threaded\n  through all interceptor functions.\n\n  Generally speaking, an interceptor's `:before` function will (if present)\n  add to a `context's` `:coeffects`, while it's `:after` function\n  will modify the `context`'s `:effects`.  Very approximately.\n\n  But because all interceptor functions are given `context`, and can\n  return a modified version of it, the way is clear for an interceptor\n  to introspect the stack or queue, or even modify the queue\n  (add new interceptors via `enqueue`?). This is a very fluid arrangement."],"^6F",true,"^V","^2U","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",27,"^6=",["^1A",[["^66","^6G"]]],"^6?",null,"^6>",["^1A",[null,null]],"^8",1,"^6:",false,"^7",74,"^9",74,"^6<",2,"^6D",true,"^64",["^1A",["^65",["^1A",[["^66","^6G"]]]]],"^6H","Loop over all interceptors, calling `direction` function on each,\n  threading the value of `context` through every call.\n\n  `direction` is one of `:before` or `:after`.\n\n  Each iteration, the next interceptor to process is obtained from\n  context's `:queue`. After they are processed, interceptors are popped\n  from `:queue` and added to `:stack`.\n\n  After sufficient iteration, `:queue` will be empty, and `:stack` will\n  contain all interceptors processed.\n\n  Returns updated `context`. Ie. the `context` which has been threaded\n  through all interceptor functions.\n\n  Generally speaking, an interceptor's `:before` function will (if present)\n  add to a `context's` `:coeffects`, while it's `:after` function\n  will modify the `context`'s `:effects`.  Very approximately.\n\n  But because all interceptor functions are given `context`, and can\n  return a modified version of it, the way is clear for an interceptor\n  to introspect the stack or queue, or even modify the queue\n  (add new interceptors via `enqueue`?). This is a very fluid arrangement."],"~$assoc-coeffect",["^ ","^63",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",56,"^8",7,"^9",56,"^:",21,"^64",["^1A",["^65",["^1A",[["^66","^67","~$value"]]]]]],"^V","^2F","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",21,"^6=",["^1A",[["^66","^67","^6J"]]],"^6?",null,"^6>",["^1A",[null,null]],"^8",1,"^6:",false,"^7",56,"^6C",["^U",["~$clj","^6B"]],"^9",56,"^6<",3,"^6D",true,"^64",["^1A",["^65",["^1A",[["^66","^67","^6J"]]]]]],"~$update-coeffect",["^ ","^63",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",60,"^8",7,"^9",60,"^:",22,"^64",["^1A",["^65",["^1A",[["^66","^67","~$f","~$&","^68"]]]]],"^69",["^ ","^6:",true,"^6;",3,"^6<",3,"^6=",[["^1A",["^66","^67","~$f","^68"]]],"^64",["^1A",[["^66","^67","~$f","~$&","^68"]]],"^6>",["^1A",[null]]]],"^V","^2B","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",22,"^69",["^ ","^6:",true,"^6;",3,"^6<",3,"^6=",[["^1A",["^66","^67","~$f","^68"]]],"^64",["^1A",[["^66","^67","~$f","~$&","^68"]]],"^6>",["^1A",[null]]],"^6=",[["^1A",["^66","^67","~$f","^68"]]],"^6?",null,"^6;",3,"^6>",["^1A",[null]],"^8",1,"^6:",true,"^6@",[["^ ","^6;",3,"^6:",true,"^6A","^6B"]],"^7",60,"^6C","^6B","^9",60,"^6<",3,"^6D",true,"^64",["^1A",[["^66","^67","~$f","~$&","^68"]]]],"~$invoke-interceptor-fn",["^ ","^63",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",67,"^8",8,"^9",67,"^:",29,"^6F",true,"^64",["^1A",["^65",["^1A",[["^66","~$interceptor","^6G"]]]]]],"^6F",true,"^V","^1X","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",29,"^6=",["^1A",[["^66","^6N","^6G"]]],"^6?",null,"^6>",["^1A",[null,null]],"^8",1,"^6:",false,"^7",67,"^6C",["^U",[null,"^6B"]],"^9",67,"^6<",3,"^6D",true,"^64",["^1A",["^65",["^1A",[["^66","^6N","^6G"]]]]]],"~$get-effect",["^ ","^63",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",30,"^8",7,"^9",30,"^:",17,"^64",["^1A",["^65",["^1A",[["^66"],["^66","^67"],["^66","^67","~$not-found"]]]]],"^69",["^ ","^6:",false,"^6;",3,"^6<",3,"^6=",[["^66"],["^66","^67"],["^66","^67","^6P"]],"^64",["^1A",[["^66"],["^66","^67"],["^66","^67","^6P"]]],"^6>",["^1A",[null,null,null]]]],"^V","^2L","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",17,"^69",["^ ","^6:",false,"^6;",3,"^6<",3,"^6=",[["^66"],["^66","^67"],["^66","^67","^6P"]],"^64",["^1A",[["^66"],["^66","^67"],["^66","^67","^6P"]]],"^6>",["^1A",[null,null,null]]],"^6=",[["^66"],["^66","^67"],["^66","^67","^6P"]],"^6?",null,"^6;",3,"^6>",["^1A",[null,null,null]],"^8",1,"^6:",false,"^6@",[["^ ","^6;",1,"^6:",false,"^6A","^6B"],["^ ","^6;",2,"^6:",false,"^6A",["^U",[null,"^6B"]]],["^ ","^6;",3,"^6:",false,"^6A",["^U",[null,"^6B"]]]],"^7",30,"^9",30,"^6<",3,"^6D",true,"^64",["^1A",[["^66"],["^66","^67"],["^66","^67","^6P"]]]],"~$->interceptor",["^ ","^63",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",17,"^8",7,"^9",17,"^:",20,"^64",["^1A",["^65",["^1A",[["~$&",["^ ","^1D","~$m","~:keys",["~$id","~$before","~$after"]]]]]]],"^69",["^ ","^6:",true,"^6;",0,"^6<",0,"^6=",[["^1A",[["^ ","^1D","~$m","^6R",["^6S","^6T","^6U"]]]]],"^64",["^1A",[["~$&",["^ ","^1D","~$m","^6R",["^6S","^6T","^6U"]]]]],"^6>",["^1A",[null]]]],"^V","^2Q","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",20,"^69",["^ ","^6:",true,"^6;",0,"^6<",0,"^6=",[["^1A",[["^ ","^1D","~$m","^6R",["^6S","^6T","^6U"]]]]],"^64",["^1A",[["~$&",["^ ","^1D","~$m","^6R",["^6S","^6T","^6U"]]]]],"^6>",["^1A",[null]]],"^6=",[["^1A",[["^ ","^1D","~$m","^6R",["^6S","^6T","^6U"]]]]],"^6?",null,"^6;",0,"^6>",["^1A",[null]],"^8",1,"^6:",true,"^6@",[["^ ","^6;",0,"^6:",true,"^6A","~$cljs.core/IMap"]],"^7",17,"^6C","^6B","^9",17,"^6<",0,"^6D",true,"^64",["^1A",[["~$&",["^ ","^1D","~$m","^6R",["^6S","^6T","^6U"]]]]]],"~$get-coeffect",["^ ","^63",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",48,"^8",7,"^9",48,"^:",19,"^64",["^1A",["^65",["^1A",[["^66"],["^66","^67"],["^66","^67","^6P"]]]]],"^69",["^ ","^6:",false,"^6;",3,"^6<",3,"^6=",[["^66"],["^66","^67"],["^66","^67","^6P"]],"^64",["^1A",[["^66"],["^66","^67"],["^66","^67","^6P"]]],"^6>",["^1A",[null,null,null]]]],"^V","^1Y","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",19,"^69",["^ ","^6:",false,"^6;",3,"^6<",3,"^6=",[["^66"],["^66","^67"],["^66","^67","^6P"]],"^64",["^1A",[["^66"],["^66","^67"],["^66","^67","^6P"]]],"^6>",["^1A",[null,null,null]]],"^6=",[["^66"],["^66","^67"],["^66","^67","^6P"]],"^6?",null,"^6;",3,"^6>",["^1A",[null,null,null]],"^8",1,"^6:",false,"^6@",[["^ ","^6;",1,"^6:",false,"^6A","^6B"],["^ ","^6;",2,"^6:",false,"^6A",["^U",[null,"^6B"]]],["^ ","^6;",3,"^6:",false,"^6A",["^U",[null,"^6B"]]]],"^7",48,"^9",48,"^6<",3,"^6D",true,"^64",["^1A",[["^66"],["^66","^67"],["^66","^67","^6P"]]]],"~$execute",["^ ","^63",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",146,"^8",7,"^9",146,"^:",14,"^64",["^1A",["^65",["^1A",[["~$event-v","~$interceptors"]]]]],"^6H","Executes the given chain (coll) of interceptors.\n\n   Each interceptor has this form:\n       {:before  (fn [context] ...)     ;; returns possibly modified context\n        :after   (fn [context] ...)}    ;; `identity` would be a noop\n\n   Walks the queue of interceptors from beginning to end, calling the\n   `:before` fn on each, then reverse direction and walk backwards,\n   calling the `:after` fn on each.\n\n   The last interceptor in the chain presumably wraps an event\n   handler fn. So the overall goal of the process is to \"handle\n   the given event\".\n\n   Thread a `context` through all calls. `context` has this form:\n\n     {:coeffects {:event [:a-query-id :some-param]\n                  :db    <original contents of app-db>}\n      :effects   {:db    <new value for app-db>\n                  :dispatch  [:an-event-id :param1]}\n      :queue     <a collection of further interceptors>\n      :stack     <a collection of interceptors already walked>}\n\n   `context` has `:coeffects` and `:effects` which, if this was a web\n   server, would be somewhat analogous to `request` and `response`\n   respectively.\n\n   `coeffects` will contain data like `event` and the initial\n   state of `db` -  the inputs required by the event handler\n   (sitting presumably on the end of the chain), while handler-returned\n   side effects are put into `:effects` including, but not limited to,\n   new values for `db`.\n\n   The first few interceptors in a chain will likely have `:before`\n   functions which \"prime\" the `context` by adding the event, and\n   the current state of app-db into `:coeffects`. But interceptors can\n   add whatever they want to `:coeffects` - perhaps the event handler needs\n   some information from localstore, or a random number, or access to\n   a DataScript connection.\n\n   Equally, some interceptors in the chain will have `:after` fn\n   which can process the side effects accumulated into `:effects`\n   including but, not limited to, updates to app-db.\n\n   Through both stages (before and after), `context` contains a `:queue`\n   of interceptors yet to be processed, and a `:stack` of interceptors\n   already done.  In advanced cases, these values can be modified by the\n   functions through which the context is threaded."],"^V","^28","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",14,"^6=",["^1A",[["^6Y","^6Z"]]],"^6?",null,"^6>",["^1A",[null,null]],"^8",1,"^6:",false,"^7",146,"^6C","^6B","^9",146,"^6<",2,"^6D",true,"^64",["^1A",["^65",["^1A",[["^6Y","^6Z"]]]]],"^6H","Executes the given chain (coll) of interceptors.\n\n   Each interceptor has this form:\n       {:before  (fn [context] ...)     ;; returns possibly modified context\n        :after   (fn [context] ...)}    ;; `identity` would be a noop\n\n   Walks the queue of interceptors from beginning to end, calling the\n   `:before` fn on each, then reverse direction and walk backwards,\n   calling the `:after` fn on each.\n\n   The last interceptor in the chain presumably wraps an event\n   handler fn. So the overall goal of the process is to \"handle\n   the given event\".\n\n   Thread a `context` through all calls. `context` has this form:\n\n     {:coeffects {:event [:a-query-id :some-param]\n                  :db    <original contents of app-db>}\n      :effects   {:db    <new value for app-db>\n                  :dispatch  [:an-event-id :param1]}\n      :queue     <a collection of further interceptors>\n      :stack     <a collection of interceptors already walked>}\n\n   `context` has `:coeffects` and `:effects` which, if this was a web\n   server, would be somewhat analogous to `request` and `response`\n   respectively.\n\n   `coeffects` will contain data like `event` and the initial\n   state of `db` -  the inputs required by the event handler\n   (sitting presumably on the end of the chain), while handler-returned\n   side effects are put into `:effects` including, but not limited to,\n   new values for `db`.\n\n   The first few interceptors in a chain will likely have `:before`\n   functions which \"prime\" the `context` by adding the event, and\n   the current state of app-db into `:coeffects`. But interceptors can\n   add whatever they want to `:coeffects` - perhaps the event handler needs\n   some information from localstore, or a random number, or access to\n   a DataScript connection.\n\n   Equally, some interceptors in the chain will have `:after` fn\n   which can process the side effects accumulated into `:effects`\n   including but, not limited to, updates to app-db.\n\n   Through both stages (before and after), `context` contains a `:queue`\n   of interceptors yet to be processed, and a `:stack` of interceptors\n   already done.  In advanced cases, these values can be modified by the\n   functions through which the context is threaded."],"~$assoc-effect",["^ ","^63",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",38,"^8",7,"^9",38,"^:",19,"^64",["^1A",["^65",["^1A",[["^66","^67","^6J"]]]]]],"^V","^22","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",19,"^6=",["^1A",[["^66","^67","^6J"]]],"^6?",null,"^6>",["^1A",[null,null]],"^8",1,"^6:",false,"^7",38,"^6C",["^U",["^6K","^6B"]],"^9",38,"^6<",3,"^6D",true,"^64",["^1A",["^65",["^1A",[["^66","^67","^6J"]]]]]],"~$enqueue",["^ ","^63",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",111,"^8",7,"^9",111,"^:",14,"^64",["^1A",["^65",["^1A",[["^66","^6Z"]]]]]],"^V","^2N","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",14,"^6=",["^1A",[["^66","^6Z"]]],"^6?",null,"^6>",["^1A",[null,null]],"^8",1,"^6:",false,"^7",111,"^6C",["^U",["^6K","^6B"]],"^9",111,"^6<",2,"^6D",true,"^64",["^1A",["^65",["^1A",[["^66","^6Z"]]]]]],"~$mandatory-interceptor-keys",["^ ","^V","^29","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",9,"^8",1,"^9",9,"^:",32,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",9,"^8",6,"^9",9,"^:",32],"^6A","~$cljs.core/ISet"],"~$interceptor?",["^ ","^63",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",11,"^8",7,"^9",11,"^:",19,"^64",["^1A",["^65",["^1A",[["~$m"]]]]]],"^V","^2?","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",19,"^6=",["^1A",[["~$m"]]],"^6?",null,"^6>",["^1A",[null,null]],"^8",1,"^6:",false,"^7",11,"^6C","~$boolean","^9",11,"^6<",1,"^6D",true,"^64",["^1A",["^65",["^1A",[["~$m"]]]]]],"~$change-direction",["^ ","^63",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^7",132,"^8",8,"^9",132,"^:",24,"^6F",true,"^64",["^1A",["^65",["^1A",[["^66"]]]]],"^6H","Called on completion of `:before` processing, this function prepares/modifies\n   `context` for the backwards sweep of processing in which an interceptor\n   chain's `:after` fns are called.\n\n  At this point in processing, the `:queue` is empty and `:stack` holds all\n  the previously run interceptors. So this function enables the backwards walk\n  by priming `:queue` with what's currently in `:stack`"],"^6F",true,"^V","^1W","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",24,"^6=",["^1A",[["^66"]]],"^6?",null,"^6>",["^1A",[null,null]],"^8",1,"^6:",false,"^7",132,"^6C",["^U",["^6K","^6B"]],"^9",132,"^6<",1,"^6D",true,"^64",["^1A",["^65",["^1A",[["^66"]]]]],"^6H","Called on completion of `:before` processing, this function prepares/modifies\n   `context` for the backwards sweep of processing in which an interceptor\n   chain's `:after` fns are called.\n\n  At this point in processing, the `:queue` is empty and `:stack` holds all\n  the previously run interceptors. So this function enables the backwards walk\n  by priming `:queue` with what's currently in `:stack`"],"^66",["^ ","^63",null,"^5",["^ ","^6F",true,"^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",15,"^69",["^ ","^6:",false,"^6;",3,"^6<",3,"^6=",[["~$event","^6Z"],["^76","^6Z","~$db"]],"^64",["^1A",[["^76","^6Z"],["^76","^6Z","^77"]]],"^6>",["^1A",[null,null]]],"^8",8,"^7",118,"^9",118,"^64",["^1A",["^65",["^1A",[["^76","^6Z"],["^76","^6Z","^77"]]]]],"^6H","Create a fresh context"],"^6F",true,"^V","^2K","^6","day8/re_frame_10x/inlined_deps/re_frame/v1v1v2/re_frame/interceptor.cljc","^:",15,"^69",["^ ","^6:",false,"^6;",3,"^6<",3,"^6=",[["^76","^6Z"],["^76","^6Z","^77"]],"^64",["^1A",[["^76","^6Z"],["^76","^6Z","^77"]]],"^6>",["^1A",[null,null]]],"^6=",[["^76","^6Z"],["^76","^6Z","^77"]],"^6?",null,"^6;",3,"^6>",["^1A",[null,null]],"^8",1,"^6:",false,"^6@",[["^ ","^6;",2,"^6:",false,"^6A",["^U",["^6K","^6B"]]],["^ ","^6;",3,"^6:",false,"^6A",["^U",["^6K","^6B"]]]],"^7",118,"^9",118,"^6<",3,"^6D",true,"^64",["^1A",[["^76","^6Z"],["^76","^6Z","^77"]]],"^6H","Create a fresh context"]],"^1?",["^ ","^13","^13","^14","^13","^17","^17"],"~:cljs.analyzer/constants",["^ ","^19",["^U",["~:unnamed","~:tags","~:original-event","~:db","~:queue","~:event","~:after","~:id","~:effects","~:stack","~:error","~:coeffects","~:interceptors","~:before"]],"~:order",["^7?","^7@","^7F","^7C","^79","^7A","^7D","^7=","^7B","^7>","^7;","^7<","^7:","^7E"]],"^1F",["^ ","^1:",["^U",[]]],"^1G",["^ "],"^1H",["^18","^17","^11","^12","^13","^15"]],"^Z","^W","~:ns-specs",["^ "],"~:ns-spec-vars",["^U",[]],"~:compiler-options",["^2Y",[["^7J","~:static-fns"],true,["^7J","~:shadow-tweaks"],null,["^7J","~:source-map-inline"],null,["^7J","~:elide-asserts"],false,["^7J","~:optimize-constants"],null,["^7J","^1M"],null,["^7J","~:external-config"],null,["^7J","~:tooling-config"],null,["^7J","~:emit-constants"],null,["^7J","~:load-tests"],null,["^7J","~:form-size-threshold"],null,["^7J","~:global-goog-object&array"],null,["^7J","~:data-readers"],null,["^7J","~:infer-externs"],"~:auto",["^7J","^1O"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7J","~:fn-invoke-direct"],null,["^7J","~:source-map"],"/dev/null"]]]