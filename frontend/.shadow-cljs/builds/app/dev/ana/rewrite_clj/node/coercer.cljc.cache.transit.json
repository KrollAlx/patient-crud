["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.node.coercer');\n(rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.regex.RegexNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.regex.RegexNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.namespaced_map.MapQualifierNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.namespaced_map.MapQualifierNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.integer.IntNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.integer.IntNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.whitespace.CommaNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.whitespace.CommaNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.token.SymbolNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.token.SymbolNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.namespaced_map.NamespacedMapNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.namespaced_map.NamespacedMapNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn v__$1;\n}));\n/**\n * Slightly different than string/split-lines in that:\n * - includes all lines even if empty\n * - behaves the same on clj and cljs\n */\nrewrite_clj.node.coercer.split_to_lines = (function rewrite_clj$node$coercer$split_to_lines(s){\nvar s__$1 = s;\nvar lines = cljs.core.PersistentVector.EMPTY;\nwhile(true){\nvar temp__5802__auto__ = cljs.core.first(cljs.core.re_find(/(\\r\\n|\\r|\\n)/,s__$1));\nif(cljs.core.truth_(temp__5802__auto__)){\nvar m = temp__5802__auto__;\nvar eol_ndx = clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(s__$1,m);\nvar G__32399 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s__$1,(eol_ndx + cljs.core.count(m)));\nvar G__32400 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s__$1,(0),eol_ndx));\ns__$1 = G__32399;\nlines = G__32400;\ncontinue;\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,s__$1);\n}\nbreak;\n}\n});\nrewrite_clj.node.coercer.node_with_meta = (function rewrite_clj$node$coercer$node_with_meta(n,value){\nif((((!((value == null))))?(((((value.cljs$lang$protocol_mask$partition0$ & (262144))) || ((cljs.core.PROTOCOL_SENTINEL === value.cljs$core$IWithMeta$))))?true:(((!value.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,value):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,value))){\nvar mta = rewrite_clj.node.protocols.meta_elided(value);\nif(cljs.core.empty_QMARK_(mta)){\nreturn n;\n} else {\nreturn rewrite_clj.node.meta.meta_node.cljs$core$IFn$_invoke$arity$2(rewrite_clj.node.protocols.coerce(mta),n);\n}\n} else {\nreturn n;\n}\n});\nvar comma_32403 = rewrite_clj.node.whitespace.whitespace_nodes(\", \");\nvar space_32404 = rewrite_clj.node.whitespace.whitespace_node(\" \");\nrewrite_clj.node.coercer.map__GT_children = (function rewrite_clj$node$coercer$map__GT_children(m){\nreturn cljs.core.vec(cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(cljs.core.count(comma_32403),cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (p__32348){\nvar vec__32349 = p__32348;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32349,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32349,(1),null);\nreturn cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(rewrite_clj.node.protocols.coerce(k),space_32404,rewrite_clj.node.protocols.coerce(v),comma_32403);\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([m], 0))));\n});\nrewrite_clj.node.coercer.record_node = (function rewrite_clj$node$coercer$record_node(m){\nreturn rewrite_clj.node.reader_macro.reader_macro_node.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rewrite_clj.node.token.token_node.cljs$core$IFn$_invoke$arity$1((function (){var s = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([m], 0));\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(1),clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(s,\"{\")));\n})()),rewrite_clj.node.seq.map_node(rewrite_clj.node.coercer.map__GT_children(m))], null));\n});\nrewrite_clj.node.coercer.create_map_node = (function rewrite_clj$node$coercer$create_map_node(children){\nreturn rewrite_clj.node.coercer.node_with_meta(rewrite_clj.node.seq.map_node(rewrite_clj.node.coercer.map__GT_children(children)),children);\n});\n(cljs.core.Keyword.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Keyword.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn rewrite_clj.node.keyword.keyword_node.cljs$core$IFn$_invoke$arity$1(v__$1);\n}));\n(rewrite_clj.node.protocols.NodeCoerceable[\"string\"] = true);\n\n(rewrite_clj.node.protocols.coerce[\"string\"] = (function (v){\nreturn rewrite_clj.node.stringz.string_node(rewrite_clj.node.coercer.split_to_lines(v));\n}));\n(rewrite_clj.node.protocols.NodeCoerceable[\"_\"] = true);\n\n(rewrite_clj.node.protocols.coerce[\"_\"] = (function (v){\nreturn rewrite_clj.node.coercer.node_with_meta(((cljs.core.record_QMARK_(v))?rewrite_clj.node.coercer.record_node(v):rewrite_clj.node.token.token_node.cljs$core$IFn$_invoke$arity$1(v)),v);\n}));\n(rewrite_clj.node.protocols.NodeCoerceable[\"null\"] = true);\n\n(rewrite_clj.node.protocols.coerce[\"null\"] = (function (v){\nreturn rewrite_clj.node.token.token_node.cljs$core$IFn$_invoke$arity$1(null);\n}));\n(RegExp.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(RegExp.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn rewrite_clj.node.regex.regex_node(rewrite_clj.node.regex.pattern_string_for_regex(v__$1));\n}));\nrewrite_clj.node.coercer.seq_node = (function rewrite_clj$node$coercer$seq_node(f,sq){\nreturn rewrite_clj.node.coercer.node_with_meta((function (){var G__32357 = cljs.core.vec(rewrite_clj.node.whitespace.space_separated(cljs.core.map.cljs$core$IFn$_invoke$arity$2(rewrite_clj.node.protocols.coerce,sq)));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32357) : f.call(null,G__32357));\n})(),sq);\n});\n(cljs.core.PersistentVector.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentVector.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (sq){\nvar sq__$1 = this;\nreturn rewrite_clj.node.coercer.seq_node(rewrite_clj.node.seq.vector_node,sq__$1);\n}));\n\n(cljs.core.List.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.List.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (sq){\nvar sq__$1 = this;\nreturn rewrite_clj.node.coercer.seq_node(rewrite_clj.node.seq.list_node,sq__$1);\n}));\n\n(cljs.core.Cons.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Cons.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (sq){\nvar sq__$1 = this;\nreturn rewrite_clj.node.coercer.seq_node(rewrite_clj.node.seq.list_node,sq__$1);\n}));\n\n(cljs.core.PersistentHashSet.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentHashSet.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (sq){\nvar sq__$1 = this;\nreturn rewrite_clj.node.coercer.seq_node(rewrite_clj.node.seq.set_node,sq__$1);\n}));\n(cljs.core.EmptyList.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.EmptyList.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (sq){\nvar sq__$1 = this;\nreturn rewrite_clj.node.coercer.seq_node(rewrite_clj.node.seq.list_node,sq__$1);\n}));\n(cljs.core.PersistentHashMap.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentHashMap.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (m){\nvar m__$1 = this;\nreturn rewrite_clj.node.coercer.create_map_node(m__$1);\n}));\n\n(cljs.core.PersistentArrayMap.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentArrayMap.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (m){\nvar m__$1 = this;\nreturn rewrite_clj.node.coercer.create_map_node(m__$1);\n}));\n(cljs.core.Var.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Var.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){\nvar v__$1 = this;\nreturn rewrite_clj.node.reader_macro.var_node((new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[rewrite_clj.node.token.token_node.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(v__$1),(2))))],null)));\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Notes:\n   - Coercion of records handled specially due different behaviors on different JVMs.\n     Must be in equality of specificity of in our protocol extensions.\n\n     From https://clojure.org/reference/protocols:\n     \n       if one interface is derived from the other, the more derived is used, \n       else which one is used is unspecified","~:file","rewrite_clj/node/coercer.cljc","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",38,"~:no-doc",true],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.tools.reader.impl.utils","~$cljs.tools.reader.impl.utils","~$cljs.loader","~$shadow.loader","~$clojure.tools.reader.impl.commons","~$cljs.tools.reader.impl.commons","~$clojure.tools.reader.impl.errors","~$cljs.tools.reader.impl.errors","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.tools.reader.edn","~$cljs.tools.reader.edn","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.node.coercer","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node.stringz","^12","~$rewrite-clj.node.meta","^13","~$rewrite-clj.node.integer","^14","~$rewrite-clj.node.token","^15","~$rewrite-clj.node.seq","^16","~$cljs.core","^17","~$ws","~$rewrite-clj.node.whitespace","~$goog","^1:","~$rewrite-clj.node.fn","^1;","~$rewrite-clj.node.reader-macro","^1<","~$rewrite-clj.node.keyword","^1=","~$rewrite-clj.node.comment","^1>","~$rewrite-clj.node.quote","^1?","~$string","~$clojure.string","~$node","~$rewrite-clj.node.protocols","^1C","^1C","^1A","^1A","~$rewrite-clj.node.uneval","^1D","~$rewrite-clj.node.regex","^1E","^19","^19","~$rewrite-clj.node.namespaced-map","^1F","~$rewrite-clj.node.forms","^1G"],"~:seen",["^V",["~:require"]],"~:uses",["^ ","~$WhitespaceNode","^19","~$TokenNode","^15","~$RegexNode","^1E","~$MapQualifierNode","^1F","~$MetaNode","^13","~$var-node","^1<","~$vector-node","^16","~$pattern-string-for-regex","^1E","~$DerefNode","^1<","~$IntNode","^14","~$StringNode","^12","~$KeywordNode","^1=","~$CommaNode","^19","~$string-node","^12","~$meta-node","^13","~$NewlineNode","^19","~$UnevalNode","^1D","~$regex-node","^1E","~$ReaderMacroNode","^1<","~$list-node","^16","~$FormsNode","^1G","~$SymbolNode","^15","~$map-node","^16","~$NamespacedMapNode","^1F","~$reader-macro-node","^1<","~$set-node","^16","~$keyword-node","^1=","~$CommentNode","^1>","~$SeqNode","^16","~$QuoteNode","^1?","~$NodeCoerceable","^1C","~$ReaderNode","^1<","~$FnNode","^1;","~$token-node","^15","~$coerce","^1C"],"~:require-macros",["^ ","^17","^17","^18","^19","^19","^19"],"~:form",["~#list",["~$ns","^X","Notes:\n   - Coercion of records handled specially due different behaviors on different JVMs.\n     Must be in equality of specificity of in our protocol extensions.\n\n     From https://clojure.org/reference/protocols:\n     \n       if one interface is derived from the other, the more derived is used, \n       else which one is used is unspecified",["^2D",["^1I",["^1A","~:as","^1@"],["^1>","~:refer",["^2:"]],["^1;","^2G",["^2?"]],["^1G","^2G",["^23"]],["^14","^2G",["^1T"]],["^1=","^2G",["^1V","^29"]],["^13","^2G",["^1O","^1Y"]],["^1F","^2G",["^26","^1N"]],["^1C","^2F","^1B","^2G",["^2=","^2A"]],["^1?","^2G",["^2<"]],["^1<","^2G",["^2>","^21","^1S","^27","^1P"]],["^1E","^2G",["^1M","^20","^1R"]],["^16","^2G",["^2;","^1Q","^22","^28","^25"]],["^12","^2G",["^1U","^1X"]],["^15","^2G",["^1L","^24","^2@"]],["^1D","^2G",["^1["]],["^19","^2G",["^1K","^1W","^1Z"],"^2F","^18"]]]]],"~:flags",["^ ","^1I",["^V",[]]],"~:js-deps",["^ "],"~:deps",["^1:","^17","^1A","^1>","^1;","^1G","^14","^1=","^13","^1F","^1C","^1?","^1<","^1E","^16","^12","^15","^1D","^19"]],"^[","^X","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/node/coercer.cljc"],"~:compiled-at",1666857663892,"^Y",["^ ","^12","^12","^13","^13","^14","^14","^15","^15","^16","^16","^17","^17","^18","^19","^1:","^1:","^1;","^1;","^1<","^1<","^1=","^1=","^1>","^1>","^1?","^1?","^1@","^1A","^1B","^1C","^1C","^1C","^1A","^1A","^1D","^1D","^1E","^1E","^19","^19","^1F","^1F","^1G","^1G"],"~:resource-name","rewrite_clj/node/coercer.cljc","~:warnings",[],"~:source","(ns ^:no-doc rewrite-clj.node.coercer\n  \"Notes:\n   - Coercion of records handled specially due different behaviors on different JVMs.\n     Must be in equality of specificity of in our protocol extensions.\n\n     From https://clojure.org/reference/protocols:\n     \n       if one interface is derived from the other, the more derived is used, \n       else which one is used is unspecified\" \n  (:require\n   [clojure.string :as string]\n   #?@(:clj\n       [[rewrite-clj.node.comment]\n        [rewrite-clj.node.fn]\n        [rewrite-clj.node.forms]\n        [rewrite-clj.node.integer]\n        [rewrite-clj.node.keyword :refer [keyword-node]]\n        [rewrite-clj.node.meta :refer [meta-node]]\n        [rewrite-clj.node.namespaced-map]\n        [rewrite-clj.node.protocols :as node :refer [NodeCoerceable coerce]]\n        [rewrite-clj.node.quote]\n        [rewrite-clj.node.reader-macro :refer [reader-macro-node var-node]]\n        [rewrite-clj.node.regex :refer [regex-node pattern-string-for-regex]]\n        [rewrite-clj.node.seq :refer [vector-node list-node set-node map-node]]\n        [rewrite-clj.node.stringz :refer [string-node]]\n        [rewrite-clj.node.token :refer [token-node]]\n        [rewrite-clj.node.uneval]\n        [rewrite-clj.node.whitespace :as ws]]\n       :cljs\n       [[rewrite-clj.node.comment :refer [CommentNode]]\n        [rewrite-clj.node.fn :refer [FnNode]]\n        [rewrite-clj.node.forms :refer [FormsNode]]\n        [rewrite-clj.node.integer :refer [IntNode]]\n        [rewrite-clj.node.keyword :refer [KeywordNode keyword-node]]\n        [rewrite-clj.node.meta :refer [MetaNode meta-node]]\n        [rewrite-clj.node.namespaced-map :refer [NamespacedMapNode MapQualifierNode]]\n        [rewrite-clj.node.protocols :as node :refer [NodeCoerceable coerce]]\n        [rewrite-clj.node.quote :refer [QuoteNode]]\n        [rewrite-clj.node.reader-macro :refer [ReaderNode ReaderMacroNode DerefNode reader-macro-node var-node]]\n        [rewrite-clj.node.regex :refer [RegexNode regex-node pattern-string-for-regex]]\n        [rewrite-clj.node.seq :refer [SeqNode vector-node list-node set-node map-node]]\n        [rewrite-clj.node.stringz :refer [StringNode string-node]]\n        [rewrite-clj.node.token :refer [TokenNode SymbolNode token-node]]\n        [rewrite-clj.node.uneval :refer [UnevalNode]]\n        [rewrite-clj.node.whitespace :refer [WhitespaceNode CommaNode NewlineNode] :as ws]]))\n  #?(:clj\n     (:import [rewrite_clj.node.comment CommentNode]\n              [rewrite_clj.node.fn FnNode]\n              [rewrite_clj.node.forms FormsNode]\n              [rewrite_clj.node.integer IntNode]\n              [rewrite_clj.node.keyword KeywordNode]\n              [rewrite_clj.node.meta MetaNode]\n              [rewrite_clj.node.namespaced_map NamespacedMapNode MapQualifierNode]\n              [rewrite_clj.node.quote QuoteNode]\n              [rewrite_clj.node.reader_macro ReaderNode ReaderMacroNode DerefNode]\n              [rewrite_clj.node.regex RegexNode]\n              [rewrite_clj.node.seq SeqNode]\n              [rewrite_clj.node.stringz StringNode]\n              [rewrite_clj.node.token TokenNode SymbolNode]\n              [rewrite_clj.node.uneval UnevalNode]\n              [rewrite_clj.node.whitespace WhitespaceNode CommaNode NewlineNode])))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n\n;; ## Rewrite-clj nodes coerce to themselves\n;; It is important that all rewrite-clj nodes be specified, else we'll coerce them to records\n(extend-protocol NodeCoerceable\n  CommaNode          (coerce [v] v)\n  CommentNode        (coerce [v] v)\n  DerefNode          (coerce [v] v)\n  FnNode             (coerce [v] v)\n  FormsNode          (coerce [v] v)\n  IntNode            (coerce [v] v)\n  KeywordNode        (coerce [v] v)\n  MapQualifierNode   (coerce [v] v)\n  MetaNode           (coerce [v] v)\n  NamespacedMapNode  (coerce [v] v)\n  NewlineNode        (coerce [v] v)\n  QuoteNode          (coerce [v] v)\n  ReaderMacroNode    (coerce [v] v)\n  ReaderNode         (coerce [v] v)\n  RegexNode          (coerce [v] v)\n  SeqNode            (coerce [v] v)\n  StringNode         (coerce [v] v)\n  SymbolNode         (coerce [v] v)\n  TokenNode          (coerce [v] v)\n  UnevalNode         (coerce [v] v)\n  WhitespaceNode     (coerce [v] v))\n\n;; ## Helpers\n\n(defn- split-to-lines\n  \"Slightly different than string/split-lines in that:\n   - includes all lines even if empty\n   - behaves the same on clj and cljs\"\n  [s]\n  (loop [s s\n         lines []]\n    (if-let [m (first (re-find #\"(\\r\\n|\\r|\\n)\" s))]\n      (let [eol-ndx (string/index-of s m)]\n        (recur (subs s (+ eol-ndx (count m)))\n               (conj lines (subs s 0 eol-ndx))))\n      (conj lines s))))\n\n(defn node-with-meta\n  [n value]\n  (if #?(:clj (instance? clojure.lang.IMeta value)\n         :cljs (satisfies? IWithMeta value))\n    (let [mta (node/meta-elided value)]\n      (if (empty? mta)\n        n\n        (meta-node (coerce mta) n)))\n    n))\n\n(let [comma (ws/whitespace-nodes \", \")\n      space (ws/whitespace-node \" \")]\n  (defn- map->children\n    [m]\n    (->> (mapcat\n          (fn [[k v]]\n            (list* (coerce k) space (coerce v) comma))\n          m)\n         (drop-last (count comma))\n         (vec))))\n\n(defn- record-node\n  [m]\n  (reader-macro-node\n   [(token-node #?(:clj (symbol (.getName ^Class (class m)))\n                   :cljs ;; this is a bit hacky, but is one way of preserving original name\n                   ;; under advanced cljs optimizations\n                   (let [s (pr-str m)]\n                     (symbol (subs s 1 (string/index-of s \"{\"))))))\n    (map-node (map->children m))]))\n\n(defn- create-map-node [children]\n  (node-with-meta\n   (map-node (map->children children))\n   children))\n\n;; ## Tokens (and special case for record for cljs)\n\n(extend-protocol NodeCoerceable\n  #?(:clj clojure.lang.Keyword :cljs Keyword)\n  (coerce [v]\n    (keyword-node v)))\n\n(extend-protocol NodeCoerceable\n  #?(:clj java.lang.String :cljs string)\n  (coerce [v]\n    (string-node (split-to-lines v))))\n\n#?(:clj\n   (extend-protocol NodeCoerceable\n     Object \n     (coerce [v]\n       (node-with-meta\n        (token-node v)\n        v)))\n   :cljs\n   (extend-protocol NodeCoerceable\n     default\n     (coerce [v]\n       (node-with-meta\n        ;; in cljs, this is where we check for a record, in clj it happens under map handling\n        (if (record? v)\n          (record-node v)\n          (token-node v))\n        v))))\n\n(extend-protocol NodeCoerceable\n  nil\n  (coerce [v]\n    (token-node nil)))\n\n;; ## Regex\n\n(extend-protocol NodeCoerceable\n  #?(:clj java.util.regex.Pattern :cljs js/RegExp)\n  (coerce [v]\n    (regex-node (pattern-string-for-regex v))))\n\n;; ## Seqs\n\n(defn- seq-node\n  [f sq]\n  (node-with-meta\n    (->> (map coerce sq)\n         (ws/space-separated)\n         (vec)\n         (f))\n    sq))\n\n(extend-protocol NodeCoerceable\n  #?(:clj clojure.lang.IPersistentVector :cljs PersistentVector)\n  (coerce [sq]\n    (seq-node vector-node sq))\n  #?(:clj clojure.lang.IPersistentList :cljs List)\n  (coerce [sq]\n    (seq-node list-node sq))\n  #?(:clj clojure.lang.Cons :cljs Cons)\n  (coerce [sq]\n    (seq-node list-node sq))\n  #?(:clj clojure.lang.IPersistentSet :cljs PersistentHashSet)\n  (coerce [sq]\n    (seq-node set-node sq)))\n\n#?(:cljs\n   ;; cljs empty list is special\n   (extend-protocol NodeCoerceable\n     EmptyList\n     (coerce [sq]\n       (seq-node list-node sq))))\n\n;; ## Maps\n\n#?(:clj\n   (extend-protocol NodeCoerceable\n     clojure.lang.IPersistentMap\n     (coerce [m]\n       (if (record? m)\n         (node-with-meta (record-node m) m)\n         (create-map-node m))))\n   :cljs\n   (do\n     (extend-protocol NodeCoerceable\n       PersistentHashMap\n       (coerce [m] (create-map-node m)))\n     (extend-protocol NodeCoerceable\n       PersistentArrayMap\n       (coerce [m] (create-map-node m)))))\n\n;; ## Vars\n\n(extend-protocol NodeCoerceable\n  #?(:clj clojure.lang.Var :cljs Var)\n  (coerce [v]\n    (-> (str v)\n        (subs 2)\n        (symbol)\n        (token-node)\n        (vector)\n        (var-node))))\n","~:reader-features",["^V",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.core/PROTOCOL_SENTINEL","rewrite-clj.node.whitespace/CommaNode","v","rewrite-clj.node.comment/CommentNode","rewrite-clj.node.reader-macro/DerefNode","rewrite-clj.node.fn/FnNode","rewrite-clj.node.forms/FormsNode","rewrite-clj.node.integer/IntNode","rewrite-clj.node.keyword/KeywordNode","rewrite-clj.node.namespaced-map/MapQualifierNode","rewrite-clj.node.meta/MetaNode","rewrite-clj.node.namespaced-map/NamespacedMapNode","rewrite-clj.node.whitespace/NewlineNode","rewrite-clj.node.quote/QuoteNode","rewrite-clj.node.reader-macro/ReaderMacroNode","rewrite-clj.node.reader-macro/ReaderNode","rewrite-clj.node.regex/RegexNode","rewrite-clj.node.seq/SeqNode","rewrite-clj.node.stringz/StringNode","rewrite-clj.node.token/SymbolNode","rewrite-clj.node.token/TokenNode","rewrite-clj.node.uneval/UnevalNode","rewrite-clj.node.whitespace/WhitespaceNode","rewrite-clj.node.coercer/split-to-lines","s","lines","temp__5802__auto__","m","cljs.core/first","cljs.core/re-find","eol-ndx","clojure.string.index_of","cljs.core.subs","cljs.core/count","cljs.core.conj","rewrite-clj.node.coercer/node-with-meta","n","value","cljs.core/native-satisfies?","cljs.core/IWithMeta","mta","rewrite-clj.node.protocols/meta-elided","cljs.core/empty?","rewrite_clj.node.meta.meta_node","rewrite-clj.node.protocols/coerce","comma","rewrite-clj.node.whitespace/whitespace-nodes","space","rewrite-clj.node.whitespace/whitespace-node","rewrite-clj.node.coercer/map->children","cljs.core.mapcat","p__32348","vec__32349","cljs.core.nth","k","cljs.core.list_STAR_","cljs.core.drop_last","cljs.core/vec","rewrite-clj.node.coercer/record-node","rewrite_clj.node.reader_macro.reader_macro_node","rewrite_clj.node.token.token_node","cljs.core.pr_str","cljs.core.symbol","rewrite-clj.node.seq/map-node","rewrite-clj.node.coercer/create-map-node","children","cljs.core/Keyword","rewrite_clj.node.keyword.keyword_node","rewrite-clj.node.protocols/NodeCoerceable","rewrite-clj.node.stringz/string-node","cljs.core/record?","js/RegExp","rewrite-clj.node.regex/regex-node","rewrite-clj.node.regex/pattern-string-for-regex","rewrite-clj.node.coercer/seq-node","f","sq","cljs.core.map","rewrite-clj.node.whitespace/space-separated","G__32357","cljs.core/PersistentVector","rewrite-clj.node.seq/vector-node","cljs.core/List","rewrite-clj.node.seq/list-node","cljs.core/Cons","cljs.core/PersistentHashSet","rewrite-clj.node.seq/set-node","cljs.core/EmptyList","cljs.core/PersistentHashMap","cljs.core/PersistentArrayMap","cljs.core/Var","rewrite-clj.node.reader-macro/var-node"]],"~:used-vars",["^V",["~$cljs.core/mapcat","~$rewrite-clj.node.fn/FnNode","~$rewrite-clj.node.seq/list-node","~$cljs.core/PROTOCOL_SENTINEL","~$rewrite-clj.node.forms/FormsNode","~$cljs.core/PersistentHashMap","~$rewrite-clj.node.stringz/StringNode","~$rewrite-clj.node.keyword/KeywordNode","~$cljs.core/Cons","~$rewrite-clj.node.coercer/split-to-lines","~$js/RegExp","~$cljs.core/PersistentArrayMap","~$rewrite-clj.node.seq/vector-node","~$rewrite-clj.node.reader-macro/var-node","~$clojure.string/index-of","~$cljs.core/count","~$cljs.core/Keyword","~$rewrite-clj.node.reader-macro/DerefNode","~$rewrite-clj.node.integer/IntNode","~$cljs.core/EmptyList","~$rewrite-clj.node.whitespace/NewlineNode","~$rewrite-clj.node.regex/RegexNode","~$rewrite-clj.node.token/TokenNode","~$rewrite-clj.node.coercer/record-node","~$cljs.core/pr-str","~$rewrite-clj.node.whitespace/WhitespaceNode","~$cljs.core/Var","~$cljs.core/native-satisfies?","~$cljs.core/empty?","~$rewrite-clj.node.whitespace/CommaNode","~$cljs.core/conj","~$rewrite-clj.node.whitespace/space-separated","~$rewrite-clj.node.meta/meta-node","~$rewrite-clj.node.protocols/meta-elided","~$cljs.core/map","~$rewrite-clj.node.reader-macro/ReaderMacroNode","~$cljs.core/PersistentVector","~$rewrite-clj.node.regex/pattern-string-for-regex","~$cljs.core/List","~$rewrite-clj.node.coercer/node-with-meta","~$rewrite-clj.node.seq/SeqNode","~$rewrite-clj.node.uneval/UnevalNode","~$cljs.core/drop-last","~$rewrite-clj.node.protocols/NodeCoerceable","~$cljs.core/symbol","~$rewrite-clj.node.seq/map-node","~$cljs.core/record?","~$cljs.core/re-find","~$rewrite-clj.node.token/SymbolNode","~$cljs.core/nth","~$cljs.core/PersistentHashSet","~$rewrite-clj.node.whitespace/whitespace-nodes","~$rewrite-clj.node.coercer/create-map-node","~$cljs.core/vec","~$rewrite-clj.node.keyword/keyword-node","~$rewrite-clj.node.protocols/coerce","~$rewrite-clj.node.meta/MetaNode","~$rewrite-clj.node.reader-macro/reader-macro-node","~$cljs.core/not","~$rewrite-clj.node.coercer/map->children","~$rewrite-clj.node.regex/regex-node","~$rewrite-clj.node.namespaced-map/MapQualifierNode","~$rewrite-clj.node.token/token-node","~$rewrite-clj.node.coercer/seq-node","~$rewrite-clj.node.seq/set-node","~$cljs.core/first","~$rewrite-clj.node.namespaced-map/NamespacedMapNode","~$rewrite-clj.node.quote/QuoteNode","~$cljs.core/IWithMeta","~$rewrite-clj.node.stringz/string-node","~$rewrite-clj.node.comment/CommentNode","~$cljs.core/subs","~$rewrite-clj.node.reader-macro/ReaderNode","~$cljs.core/list*","~$rewrite-clj.node.whitespace/whitespace-node"]]],"~:cache-keys",["~#cmap",[["^2L","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^V",[]],"~:deps-syms",["^1:","~$goog.dom.HtmlElement"]]],["^2L","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^1A","~$goog.string"]]],["^2L","rewrite_clj/node/reader_macro.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^1C","^19"]]],["^2L","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:"]]],["^2L","goog/string/stringformat.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^4R"]]],["^2L","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^2L","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4V"]]],["^2L","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^4W"]]],["^2L","rewrite_clj/node/regex.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^1C"]]],["^2L","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:"]]],["^2L","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^G","^K","^A","^E","~$cljs.tools.reader","^4R","~$goog.string.StringBuffer"]]],["^2L","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:"]]],["^2L","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17"]]],["^2L","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^K","^A","^E","^G","^4S","^4R","^53"]]],["^2L","rewrite_clj/node/uneval.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^1C"]]],["^2L","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:"]]],["^2L","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:"]]],["^2L","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^4W"]]],"~:SHADOW-TIMESTAMP",[1666857604000,1666857604000,1666857293000],["^2L","rewrite_clj/node/keyword.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^1C"]]],["^2L","rewrite_clj/node/token.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^1C"]]],["^2L","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^4W","~$goog.reflect"]]],["^2L","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^4W","~$goog.fs.blob","^4X","~$goog.html.SafeScript","~$goog.html.trustedtypes","^4Z","^4[","^50","^51"]]],["^2L","rewrite_clj/node/comment.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^1C"]]],["^2L","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:"]]],["^2L","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:"]]],["^2L","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^50","~$goog.html.SafeUrl","^51","^4W","^4V"]]],["^2L","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^4W","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^57","~$goog.html.SafeStyle","^59","^4Y","~$goog.html.uncheckedconversions","^50","^4V"]]],["^2L","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17"]]],["^2L","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^50","^4Z","^4[","^57","^5=","~$goog.html.SafeStyleSheet","^59","~$goog.dom.TagName","^4Y","^51","^4W","~$goog.labs.userAgent.browser","^4S","^4T","^4V","~$goog.dom.tags","^58"]]],["^2L","rewrite_clj/node/forms.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^1C"]]],["^2L","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^4T"]]],["^2L","rewrite_clj/node/integer.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","~$rewrite-clj.interop","^1C"]]],["^2L","rewrite_clj/node/fn.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^1A","~$clojure.walk","^5C","^1C"]]],["^2L","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:"]]],["^2L","rewrite_clj/node/protocols.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^1A","^5C"]]],["^2L","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^2L","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^4S","^4W","~$goog.collections.maps","^4R","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^2L","rewrite_clj/node/meta.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^5C","^1C","^19"]]],["^2L","rewrite_clj/node/stringz.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^1A","^M","^1C"]]],["^2L","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:"]]],["^2L","rewrite_clj/node/whitespace.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^1C","~$rewrite-clj.reader"]]],["^2L","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:"]]],["^2L","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:"]]],["^2L","rewrite_clj/node/quote.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^1C"]]],["^2L","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",[]]],["^2L","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^4S","^4T"]]],["^2L","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^K","^1A","~$cljs.tools.reader.impl.inspect"]]],["^2L","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^4R","^53"]]],["^2L","rewrite_clj/node/namespaced_map.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^1C"]]],["^2L","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","~$goog.dom.safe","^5>","^50","^4V"]]],["^2L","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:"]]],["^2L","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","~$goog.labs.userAgent","^4V"]]],["^2L","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:"]]],["^2L","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^A","^4R","^53"]]],["^2L","rewrite_clj/reader.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^M","^E","^G","^A","^K","^5C","^53"]]],["^2L","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:"]]],["^2L","rewrite_clj/node/coercer.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^1A","^1>","^1;","^1G","^14","^1=","^13","^1F","^1C","^1?","^1<","^1E","^16","^12","^15","^1D","^19"]]],["^2L","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^4W","^5<","^57","^5=","^5?","^59","^4Y","^50","^4V","^4Z"]]],["^2L","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^G","^K","^A"]]],["^2L","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:"]]],["^2L","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","~$goog.math.Long","~$goog.math.Integer","^4R","^4T","^4S","~$goog.Uri","^53"]]],["^2L","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^50","^51","^58","^4W"]]],["^2L","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^50","^5=","^51","^4T","^4W","^4V"]]],["^2L","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^55"]]],["^2L","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^4W","^4R"]]],["^2L","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^4W","^51"]]],["^2L","rewrite_clj/interop.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^4R","~$goog.string.format"]]],["^2L","rewrite_clj/node/seq.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^4M",["^ ","^4N",null,"^4O",["^V",[]],"^4P",["^1:","^17","^5C","^1C"]]]]],"~:clj-info",["^ ","jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/rewrite-clj/rewrite-clj/1.0.699-alpha/rewrite-clj-1.0.699-alpha.jar!/rewrite_clj/reader.cljc",1666857316000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/edn.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/rewrite-clj/rewrite-clj/1.0.699-alpha/rewrite-clj-1.0.699-alpha.jar!/rewrite_clj/node/protocols.cljc",1666857316000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/rewrite-clj/rewrite-clj/1.0.699-alpha/rewrite-clj-1.0.699-alpha.jar!/rewrite_clj/interop.cljc",1666857316000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/utils.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/commons.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1666857314000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/rewrite-clj/rewrite-clj/1.0.699-alpha/rewrite-clj-1.0.699-alpha.jar!/rewrite_clj/node/whitespace.cljc",1666857316000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1666857280000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Notes:\n   - Coercion of records handled specially due different behaviors on different JVMs.\n     Must be in equality of specificity of in our protocol extensions.\n\n     From https://clojure.org/reference/protocols:\n     \n       if one interface is derived from the other, the more derived is used, \n       else which one is used is unspecified","^7","rewrite_clj/node/coercer.cljc","^8",1,"^9",14,"^:",1,"^;",38,"^<",true],"^=",["^ ","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^O","^P","^Q","^R","^S"],"^T",null,"^U",["^V",[]],"^W","^X","^Y",["^ "],"^10",null,"^11",["^ ","^12","^12","^13","^13","^14","^14","^15","^15","^16","^16","^17","^17","^18","^19","^1:","^1:","^1;","^1;","^1<","^1<","^1=","^1=","^1>","^1>","^1?","^1?","^1@","^1A","^1B","^1C","^1C","^1C","^1A","^1A","^1D","^1D","^1E","^1E","^19","^19","^1F","^1F","^1G","^1G"],"^1H",["^V",["^1I"]],"~:shadow/js-access-global",["^V",["RegExp"]],"^1J",["^ ","^1K","^19","^1L","^15","^1M","^1E","^1N","^1F","^1O","^13","^1P","^1<","^1Q","^16","^1R","^1E","^1S","^1<","^1T","^14","^1U","^12","^1V","^1=","^1W","^19","^1X","^12","^1Y","^13","^1Z","^19","^1[","^1D","^20","^1E","^21","^1<","^22","^16","^23","^1G","^24","^15","^25","^16","^26","^1F","^27","^1<","^28","^16","^29","^1=","^2:","^1>","^2;","^16","^2<","^1?","^2=","^1C","^2>","^1<","^2?","^1;","^2@","^15","^2A","^1C"],"~:defs",["^ ","~$split-to-lines",["^ ","~:protocol-inline",null,"^5",["^ ","^7","rewrite_clj/node/coercer.cljc","^8",93,"^9",8,"^:",93,"^;",22,"~:private",true,"~:arglists",["^2D",["~$quote",["^2D",[["~$s"]]]]],"^6","Slightly different than string/split-lines in that:\n   - includes all lines even if empty\n   - behaves the same on clj and cljs"],"^6W",true,"^W","^35","^7","rewrite_clj/node/coercer.cljc","^;",22,"~:method-params",["^2D",[["~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^2D",[null,null]],"^9",1,"~:variadic?",false,"^8",93,"~:ret-tag","~$clj","^:",93,"~:max-fixed-arity",1,"~:fn-var",true,"^6X",["^2D",["^6Y",["^2D",[["~$s"]]]]],"^6","Slightly different than string/split-lines in that:\n   - includes all lines even if empty\n   - behaves the same on clj and cljs"],"~$node-with-meta",["^ ","^6V",null,"^5",["^ ","^7","rewrite_clj/node/coercer.cljc","^8",106,"^9",7,"^:",106,"^;",21,"^6X",["^2D",["^6Y",["^2D",[["~$n","~$value"]]]]]],"^W","^3S","^7","rewrite_clj/node/coercer.cljc","^;",21,"^6Z",["^2D",[["~$n","^77"]]],"^6[",null,"^70",["^2D",[null,null]],"^9",1,"^71",false,"^8",106,"^72",["^V",[null,"^48"]],"^:",106,"^74",2,"^75",true,"^6X",["^2D",["^6Y",["^2D",[["~$n","^77"]]]]]],"~$map->children",["^ ","^6V",null,"^5",["^ ","^7","rewrite_clj/node/coercer.cljc","^8",118,"^9",10,"^:",118,"^;",23,"^6W",true,"^6X",["^2D",["^6Y",["^2D",[["~$m"]]]]]],"^6W",true,"^W","^4;","^7","rewrite_clj/node/coercer.cljc","^;",23,"^6Z",["^2D",[["~$m"]]],"^6[",null,"^70",["^2D",[null,null]],"^9",3,"^71",false,"^8",118,"^72",["^V",["^73","~$cljs.core/IVector","~$any","~$cljs.core/MetaFn","~$clj-nil"]],"^:",118,"^74",1,"^75",true,"^6X",["^2D",["^6Y",["^2D",[["~$m"]]]]]],"~$record-node",["^ ","^6V",null,"^5",["^ ","^7","rewrite_clj/node/coercer.cljc","^8",127,"^9",8,"^:",127,"^;",19,"^6W",true,"^6X",["^2D",["^6Y",["^2D",[["~$m"]]]]]],"^6W",true,"^W","^3C","^7","rewrite_clj/node/coercer.cljc","^;",19,"^6Z",["^2D",[["~$m"]]],"^6[",null,"^70",["^2D",[null,null]],"^9",1,"^71",false,"^8",127,"^72","^3O","^:",127,"^74",1,"^75",true,"^6X",["^2D",["^6Y",["^2D",[["~$m"]]]]]],"~$create-map-node",["^ ","^6V",null,"^5",["^ ","^7","rewrite_clj/node/coercer.cljc","^8",137,"^9",8,"^:",137,"^;",23,"^6W",true,"^6X",["^2D",["^6Y",["^2D",[["~$children"]]]]]],"^6W",true,"^W","^44","^7","rewrite_clj/node/coercer.cljc","^;",23,"^6Z",["^2D",[["^7?"]]],"^6[",null,"^70",["^2D",[null,null]],"^9",1,"^71",false,"^8",137,"^72",["^V",[null,"^48"]],"^:",137,"^74",1,"^75",true,"^6X",["^2D",["^6Y",["^2D",[["^7?"]]]]]],"~$seq-node",["^ ","^6V",null,"^5",["^ ","^7","rewrite_clj/node/coercer.cljc","^8",186,"^9",8,"^:",186,"^;",16,"^6W",true,"^6X",["^2D",["^6Y",["^2D",[["~$f","~$sq"]]]]]],"^6W",true,"^W","^4?","^7","rewrite_clj/node/coercer.cljc","^;",16,"^6Z",["^2D",[["~$f","^7A"]]],"^6[",null,"^70",["^2D",[null,null]],"^9",1,"^71",false,"^8",186,"^72",["^V",[null,"^48"]],"^:",186,"^74",2,"^75",true,"^6X",["^2D",["^6Y",["^2D",[["~$f","^7A"]]]]]]],"^2B",["^ ","^17","^17","^18","^19","^19","^19"],"^2H",["^ ","^1I",["^V",[]]],"^2I",["^ "],"^2J",["^1:","^17","^1A","^1>","^1;","^1G","^14","^1=","^13","^1F","^1C","^1?","^1<","^1E","^16","^12","^15","^1D","^19"]],"^[","^X","~:ns-specs",["^ "],"~:ns-spec-vars",["^V",[]],"~:compiler-options",["^4L",[["^7D","~:static-fns"],true,["^7D","~:shadow-tweaks"],null,["^7D","~:source-map-inline"],null,["^7D","~:elide-asserts"],false,["^7D","~:optimize-constants"],null,["^7D","^2O"],null,["^7D","~:external-config"],null,["^7D","~:tooling-config"],null,["^7D","~:emit-constants"],null,["^7D","~:load-tests"],null,["^7D","~:form-size-threshold"],null,["^7D","~:global-goog-object&array"],null,["^7D","~:data-readers"],null,["^7D","~:infer-externs"],"~:auto",["^7D","^2Q"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7D","~:fn-invoke-direct"],null,["^7D","~:source-map"],"/dev/null"]]]