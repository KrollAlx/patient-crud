["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.node.comment');\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {rewrite_clj.node.protocols.Node}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\nrewrite_clj.node.comment.CommentNode = (function (prefix,s,__meta,__extmap,__hash){\nthis.prefix = prefix;\nthis.s = s;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(rewrite_clj.node.comment.CommentNode.prototype.toString = (function (){\nvar self__ = this;\nvar node = this;\nreturn node.rewrite_clj$node$protocols$Node$string$arity$1(null);\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__5343__auto__,k__5344__auto__){\nvar self__ = this;\nvar this__5343__auto____$1 = this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__5345__auto__,k31091,else__5346__auto__){\nvar self__ = this;\nvar this__5345__auto____$1 = this;\nvar G__31121 = k31091;\nvar G__31121__$1 = (((G__31121 instanceof cljs.core.Keyword))?G__31121.fqn:null);\nswitch (G__31121__$1) {\ncase \"prefix\":\nreturn self__.prefix;\n\nbreak;\ncase \"s\":\nreturn self__.s;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k31091,else__5346__auto__);\n\n}\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ = this;\nvar this__5363__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__31127){\nvar vec__31129 = p__31127;\nvar k__5367__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31129,(0),null);\nvar v__5368__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31129,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ = this;\nvar this__5358__auto____$1 = this;\nvar pr_pair__5361__auto__ = (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\"#rewrite-clj.node.comment.CommentNode{\",\", \",\"}\",opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),self__.prefix],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"s\",\"s\",1705939918),self__.s],null))], null),self__.__extmap));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__31090){\nvar self__ = this;\nvar G__31090__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__31090__$1,2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),new cljs.core.Keyword(null,\"s\",\"s\",1705939918)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__5341__auto__){\nvar self__ = this;\nvar this__5341__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__5338__auto__){\nvar self__ = this;\nvar this__5338__auto____$1 = this;\nreturn (new rewrite_clj.node.comment.CommentNode(self__.prefix,self__.s,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__5347__auto__){\nvar self__ = this;\nvar this__5347__auto____$1 = this;\nreturn (2 + cljs.core.count(self__.__extmap));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__5339__auto__){\nvar self__ = this;\nvar this__5339__auto____$1 = this;\nvar h__5154__auto__ = self__.__hash;\nif((!((h__5154__auto__ == null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 = (function (coll__5340__auto__){\nreturn (495469178 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash = h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this31092,other31093){\nvar self__ = this;\nvar this31092__$1 = this;\nreturn (((!((other31093 == null)))) && ((((this31092__$1.constructor === other31093.constructor)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this31092__$1.prefix,other31093.prefix)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this31092__$1.s,other31093.s)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this31092__$1.__extmap,other31093.__extmap)))))))));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn new cljs.core.Keyword(null,\"comment\",\"comment\",532206069);\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$node_type$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn new cljs.core.Keyword(null,\"comment\",\"comment\",532206069);\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn true;\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$sexpr_STAR_$arity$2 = (function (_node,_opts){\nvar self__ = this;\nvar _node__$1 = this;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"unsupported operation\",cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn (cljs.core.count(self__.prefix) + cljs.core.count(self__.s));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.prefix),cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.s)].join('');\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__5353__auto__,k__5354__auto__){\nvar self__ = this;\nvar this__5353__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"s\",\"s\",1705939918),null,new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new rewrite_clj.node.comment.CommentNode(self__.prefix,self__.s,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (this__5350__auto__,k31091){\nvar self__ = this;\nvar this__5350__auto____$1 = this;\nvar G__31143 = k31091;\nvar G__31143__$1 = (((G__31143 instanceof cljs.core.Keyword))?G__31143.fqn:null);\nswitch (G__31143__$1) {\ncase \"prefix\":\ncase \"s\":\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k31091);\n\n}\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__5351__auto__,k__5352__auto__,G__31090){\nvar self__ = this;\nvar this__5351__auto____$1 = this;\nvar pred__31145 = cljs.core.keyword_identical_QMARK_;\nvar expr__31146 = k__5352__auto__;\nif(cljs.core.truth_((pred__31145.cljs$core$IFn$_invoke$arity$2 ? pred__31145.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),expr__31146) : pred__31145.call(null,new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),expr__31146)))){\nreturn (new rewrite_clj.node.comment.CommentNode(G__31090,self__.s,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__31145.cljs$core$IFn$_invoke$arity$2 ? pred__31145.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"s\",\"s\",1705939918),expr__31146) : pred__31145.call(null,new cljs.core.Keyword(null,\"s\",\"s\",1705939918),expr__31146)))){\nreturn (new rewrite_clj.node.comment.CommentNode(self__.prefix,G__31090,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new rewrite_clj.node.comment.CommentNode(self__.prefix,self__.s,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__31090),null));\n}\n}\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__5356__auto__){\nvar self__ = this;\nvar this__5356__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),self__.prefix,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"s\",\"s\",1705939918),self__.s,null))], null),self__.__extmap));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__5342__auto__,G__31090){\nvar self__ = this;\nvar this__5342__auto____$1 = this;\nreturn (new rewrite_clj.node.comment.CommentNode(self__.prefix,self__.s,G__31090,self__.__extmap,self__.__hash));\n}));\n\n(rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__5348__auto__,entry__5349__auto__){\nvar self__ = this;\nvar this__5348__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(rewrite_clj.node.comment.CommentNode.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"prefix\",\"prefix\",1374623062,null),new cljs.core.Symbol(null,\"s\",\"s\",-948495851,null)], null);\n}));\n\n(rewrite_clj.node.comment.CommentNode.cljs$lang$type = true);\n\n(rewrite_clj.node.comment.CommentNode.cljs$lang$ctorPrSeq = (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\"rewrite-clj.node.comment/CommentNode\",null,(1),null));\n}));\n\n(rewrite_clj.node.comment.CommentNode.cljs$lang$ctorPrWriter = (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\"rewrite-clj.node.comment/CommentNode\");\n}));\n\n/**\n * Positional factory function for rewrite-clj.node.comment/CommentNode.\n */\nrewrite_clj.node.comment.__GT_CommentNode = (function rewrite_clj$node$comment$__GT_CommentNode(prefix,s){\nreturn (new rewrite_clj.node.comment.CommentNode(prefix,s,null,null,null));\n});\n\n/**\n * Factory function for rewrite-clj.node.comment/CommentNode, taking a map of keywords to field values.\n */\nrewrite_clj.node.comment.map__GT_CommentNode = (function rewrite_clj$node$comment$map__GT_CommentNode(G__31112){\nvar extmap__5385__auto__ = (function (){var G__31162 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__31112,new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"s\",\"s\",1705939918)], 0));\nif(cljs.core.record_QMARK_(G__31112)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__31162);\n} else {\nreturn G__31162;\n}\n})();\nreturn (new rewrite_clj.node.comment.CommentNode(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(G__31112),new cljs.core.Keyword(null,\"s\",\"s\",1705939918).cljs$core$IFn$_invoke$arity$1(G__31112),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\nrewrite_clj.node.protocols.make_printable_BANG_(rewrite_clj.node.comment.CommentNode);\n/**\n * Create node representing a comment with text `s`.\n * \n * You may optionally specify a `prefix` of `\";\"` or `\"#!\"`, defaults is `\";\"`.\n * \n * Argument `s`:\n * - must not include the `prefix`\n * - usually includes the trailing newline character, otherwise subsequent nodes will be on the comment line\n * \n * ```Clojure\n * (require '[rewrite-clj.node :as n])\n * \n * (-> (n/comment-node \"; my comment\\n\")\n *     n/string)\n * ;; => \";; my comment\\n\"\n * \n * (-> (n/comment-node \"#!\" \"/usr/bin/env bb\\n\")\n *     n/string)\n * ;; => \"#!/usr/bin/env bb\\n\"\n * ```\n */\nrewrite_clj.node.comment.comment_node = (function rewrite_clj$node$comment$comment_node(var_args){\nvar G__31170 = arguments.length;\nswitch (G__31170) {\ncase 1:\nreturn rewrite_clj.node.comment.comment_node.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.node.comment.comment_node.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.node.comment.comment_node.cljs$core$IFn$_invoke$arity$1 = (function (s){\nreturn rewrite_clj.node.comment.comment_node.cljs$core$IFn$_invoke$arity$2(\";\",s);\n}));\n\n(rewrite_clj.node.comment.comment_node.cljs$core$IFn$_invoke$arity$2 = (function (prefix,s){\nif(cljs.core.truth_((function (){var and__5043__auto__ = cljs.core.re_matches(/[^\\r\\n]*[\\r\\n]?/,s);\nif(cljs.core.truth_(and__5043__auto__)){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prefix,\";\")) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prefix,\"#!\")));\n} else {\nreturn and__5043__auto__;\n}\n})())){\n} else {\nthrow (new Error(\"Assert failed: (and (re-matches #\\\"[^\\\\r\\\\n]*[\\\\r\\\\n]?\\\" s) (or (= prefix \\\";\\\") (= prefix \\\"#!\\\")))\"));\n}\n\nreturn rewrite_clj.node.comment.__GT_CommentNode(prefix,s);\n}));\n\n(rewrite_clj.node.comment.comment_node.cljs$lang$maxFixedArity = 2);\n\n/**\n * Returns true if `node` is a comment.\n */\nrewrite_clj.node.comment.comment_QMARK_ = (function rewrite_clj$node$comment$comment_QMARK_(node){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(rewrite_clj.node.protocols.tag(node),new cljs.core.Keyword(null,\"comment\",\"comment\",532206069));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/node/comment.cljc","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",38,"~:no-doc",true],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.tools.reader.impl.utils","~$cljs.tools.reader.impl.utils","~$cljs.loader","~$shadow.loader","~$clojure.tools.reader.impl.commons","~$cljs.tools.reader.impl.commons","~$clojure.tools.reader.impl.errors","~$cljs.tools.reader.impl.errors","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.tools.reader.edn","~$cljs.tools.reader.edn","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.node.comment","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node.protocols","^11","~$node","^11","~$cljs.core","^13","~$goog","^14"],"~:seen",["^U",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^13","^13"],"~:form",["~#list",["~$ns","^W",["^1:",["^16",["^11","~:as","^12"]]]]],"~:flags",["^ ","^16",["^U",[]]],"~:js-deps",["^ "],"~:deps",["^14","^13","^11"]],"^Z","^W","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/node/comment.cljc"],"~:compiled-at",1666857663139,"^X",["^ ","^11","^11","^12","^11","^13","^13","^14","^14"],"~:resource-name","rewrite_clj/node/comment.cljc","~:warnings",[],"~:source","(ns ^:no-doc rewrite-clj.node.comment\n  (:require [rewrite-clj.node.protocols :as node]))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n;; ## Node\n\n(defrecord CommentNode [prefix s]\n  node/Node\n  (tag [_node] :comment)\n  (node-type [_node] :comment)\n  (printable-only? [_node] true)\n  (sexpr* [_node _opts]\n    (throw (ex-info \"unsupported operation\" {})))\n  (length [_node]\n    (+ (count prefix) (count s)))\n  (string [_node]\n    (str prefix s))\n\n  Object\n  (toString [node]\n    (node/string node)))\n\n(node/make-printable! CommentNode)\n\n;; ## Constructor\n\n(defn comment-node\n  \"Create node representing a comment with text `s`.\n\n   You may optionally specify a `prefix` of `\\\";\\\"` or `\\\"#!\\\"`, defaults is `\\\";\\\"`.\n\n   Argument `s`:\n   - must not include the `prefix`\n   - usually includes the trailing newline character, otherwise subsequent nodes will be on the comment line\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-> (n/comment-node \\\"; my comment\\\\n\\\")\n       n/string)\n   ;; => \\\";; my comment\\\\n\\\"\n\n   (-> (n/comment-node \\\"#!\\\" \\\"/usr/bin/env bb\\\\n\\\")\n       n/string)\n   ;; => \\\"#!/usr/bin/env bb\\\\n\\\"\n   ```\"\n  ([s]\n   (comment-node \";\" s))\n  ([prefix s]\n   {:pre [(and (re-matches #\"[^\\r\\n]*[\\r\\n]?\" s)\n               (or (= prefix \";\") (= prefix \"#!\")))]}\n   (->CommentNode prefix s)))\n\n(defn comment?\n  \"Returns true if `node` is a comment.\"\n  [node]\n  (= (node/tag node) :comment))\n","~:reader-features",["^U",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["this__5343__auto__","k__5344__auto__","this__5345__auto__","k31091","else__5346__auto__","G__31121","cljs.core/Keyword","prefix","s","cljs.core.get","__extmap","this__5363__auto__","f__5364__auto__","init__5365__auto__","cljs.core.reduce","ret__5366__auto__","p__31127","vec__31129","k__5367__auto__","cljs.core.nth","v__5368__auto__","this__5358__auto__","writer__5359__auto__","opts__5360__auto__","pr-pair__5361__auto__","keyval__5362__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__31090","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__5341__auto__","__meta","this__5338__auto__","__hash","this__5347__auto__","cljs.core/count","this__5339__auto__","h__5154__auto__","coll__5340__auto__","cljs.core/hash-unordered-coll","this31092","other31093","cljs.core._EQ_","cljs.core/PROTOCOL_SENTINEL","this__5353__auto__","k__5354__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__5350__auto__","G__31143","this__5351__auto__","k__5352__auto__","pred__31145","cljs.core/keyword-identical?","expr__31146","cljs.core.assoc","this__5356__auto__","cljs.core/seq","cljs.core/MapEntry","this__5342__auto__","this__5348__auto__","entry__5349__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","rewrite-clj.node.comment/CommentNode","this__5389__auto__","cljs.core/List","writer__5390__auto__","cljs.core/-write","G__31112","extmap__5385__auto__","G__31162","cljs.core/record?","rewrite-clj.node.comment/->CommentNode","rewrite-clj.node.comment/map->CommentNode","_node","_opts","cljs.core.ex_info","node","rewrite-clj.node.protocols/make-printable!","var_args","G__31170","rewrite-clj.node.comment/comment-node","js/Error","rewrite_clj.node.comment.comment_node","and__5043__auto__","cljs.core/re-matches","rewrite-clj.node.comment/comment?","rewrite-clj.node.protocols/tag"]],"~:used-vars",["^U",["~$cljs.core/PROTOCOL_SENTINEL","~$rewrite-clj.node.protocols/make-printable!","~$cljs.core/pr-sequential-writer","~$cljs.core/vector?","~$cljs.core/=","~$cljs.core/-assoc","~$cljs.core/re-matches","~$rewrite-clj.node.protocols/tag","~$cljs.core/-write","~$cljs.core/-iterator","~$cljs.core/count","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/Keyword","~$cljs.core/MapEntry","~$cljs.core/dissoc","~$cljs.core/keyword-identical?","~$cljs.core/-with-meta","~$cljs.core/concat","~$cljs.core/contains?","~$rewrite-clj.node.comment/->CommentNode","~$cljs.core/into","~$cljs.core/-conj","~$cljs.core/PersistentVector","~$cljs.core/List","~$cljs.core/get","~$cljs.core/-nth","~$cljs.core/not-empty","~$cljs.core/record?","~$cljs.core/-lookup","~$cljs.core/nth","~$cljs.core/ex-info","~$cljs.core/nil-iter","~$cljs.core/RecordIter","~$rewrite-clj.node.protocols/string","~$cljs.core/not","~$cljs.core/assoc","~$rewrite-clj.node.comment/comment-node","~$cljs.core/hash-unordered-coll","~$rewrite-clj.node.comment/CommentNode","~$js/Error","~$rewrite-clj.node.comment/comment?","~$rewrite-clj.node.comment/map->CommentNode"]]],"~:cache-keys",["~#cmap",[["^1A","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^U",[]],"~:deps-syms",["^14","~$goog.dom.HtmlElement"]]],["^1A","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14"]]],["^1A","goog/string/stringformat.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","~$goog.string"]]],["^1A","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^1A","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2W"]]],["^1A","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^2X"]]],["^1A","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14"]]],["^1A","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14"]]],["^1A","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14"]]],["^1A","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14"]]],["^1A","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^2X"]]],"~:SHADOW-TIMESTAMP",[1666857604000,1666857604000,1666857293000],["^1A","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^2X","~$goog.reflect"]]],["^1A","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^2X","~$goog.fs.blob","^2Y","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2[","^30","^31","^32"]]],["^1A","rewrite_clj/node/comment.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^13","^11"]]],["^1A","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14"]]],["^1A","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14"]]],["^1A","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^31","~$goog.html.SafeUrl","^32","^2X","^2W"]]],["^1A","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^2X","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^36","~$goog.html.SafeStyle","^38","^2Z","~$goog.html.uncheckedconversions","^31","^2W"]]],["^1A","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^31","^2[","^30","^36","^3<","~$goog.html.SafeStyleSheet","^38","~$goog.dom.TagName","^2Z","^32","^2X","~$goog.labs.userAgent.browser","^2T","^2U","^2W","~$goog.dom.tags","^37"]]],["^1A","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^2U"]]],["^1A","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14"]]],["^1A","rewrite_clj/node/protocols.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^13","~$clojure.string","~$rewrite-clj.interop"]]],["^1A","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1A","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^2T","^2X","~$goog.collections.maps","^2S","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1A","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14"]]],["^1A","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14"]]],["^1A","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14"]]],["^1A","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",[]]],["^1A","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^2T","^2U"]]],["^1A","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^13","^2S","~$goog.string.StringBuffer"]]],["^1A","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","~$goog.dom.safe","^3=","^31","^2W"]]],["^1A","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14"]]],["^1A","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","~$goog.labs.userAgent","^2W"]]],["^1A","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14"]]],["^1A","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14"]]],["^1A","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^2X","^3;","^36","^3<","^3>","^38","^2Z","^31","^2W","^2["]]],["^1A","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14"]]],["^1A","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","~$goog.math.Long","~$goog.math.Integer","^2S","^2U","^2T","~$goog.Uri","^3K"]]],["^1A","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^31","^32","^37","^2X"]]],["^1A","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^31","^3<","^32","^2U","^2X","^2W"]]],["^1A","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^34"]]],["^1A","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^2X","^2S"]]],["^1A","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^2X","^32"]]],["^1A","rewrite_clj/interop.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2N",["^ ","^2O",null,"^2P",["^U",[]],"^2Q",["^14","^13","^2S","~$goog.string.format"]]]]],"~:clj-info",["^ ","jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1666857314000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1666857293000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/node/comment.cljc","^7",1,"^8",14,"^9",1,"^:",38,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^O","^P","^Q","^R"],"^S",null,"^T",["^U",[]],"^V","^W","^X",["^ "],"^[",null,"^10",["^ ","^11","^11","^12","^11","^13","^13","^14","^14"],"^15",["^U",["^16"]],"~:shadow/js-access-global",["^U",["Error"]],"^17",null,"~:defs",["^ ","~$CommentNode",["^ ","~:num-fields",2,"~:protocols",["^U",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/Object","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$rewrite-clj.node.protocols/Node","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^V","^2H","^6","rewrite_clj/node/comment.cljc","^:",23,"~:type",true,"^8",12,"~:internal-ctor",true,"^7",8,"~:record",true,"^9",8,"~:tag","~$function","~:skip-protocol-flag",["^U",["^4K","^4L","^4M","^4N","^4O","^4Q","^4R","^4S","^4T","^4U","^4V","^4X","^4Y","^4Z","^4["]]],"~$->CommentNode",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/node/comment.cljc","^:",23,"^8",12,"^51",true,"~:factory","~:positional","^7",8,"^9",8,"~:arglists",["^1:",["~$quote",["^1:",[["~$prefix","~$s"]]]]],"~:doc","Positional factory function for rewrite-clj.node.comment/CommentNode."],"^V","^25","^6","rewrite_clj/node/comment.cljc","^:",23,"~:method-params",["^1:",[["^5<","~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^1:",[null,null]],"^8",1,"^51",true,"~:variadic?",false,"^58","^59","^7",8,"~:ret-tag","^2H","^9",8,"~:max-fixed-arity",2,"~:fn-var",true,"^5:",["^1:",["^5;",["^1:",[["^5<","~$s"]]]]],"^5=","Positional factory function for rewrite-clj.node.comment/CommentNode."],"~$map->CommentNode",["^ ","^57",null,"^5",["^ ","^6","rewrite_clj/node/comment.cljc","^:",23,"^8",12,"^51",true,"^58","~:map","^7",8,"^9",8,"^5:",["^1:",["^5;",["^1:",[["~$G__31112"]]]]],"^5=","Factory function for rewrite-clj.node.comment/CommentNode, taking a map of keywords to field values."],"^V","^2K","^6","rewrite_clj/node/comment.cljc","^:",23,"^5>",["^1:",[["^5G"]]],"^5?",null,"^5@",["^1:",[null,null]],"^8",1,"^51",true,"^5A",false,"^58","^5F","^7",8,"^5B","^2H","^9",8,"^5C",1,"^5D",true,"^5:",["^1:",["^5;",["^1:",[["^5G"]]]]],"^5=","Factory function for rewrite-clj.node.comment/CommentNode, taking a map of keywords to field values."],"~$comment-node",["^ ","^57",null,"^5",["^ ","^6","rewrite_clj/node/comment.cljc","^7",28,"^8",7,"^9",28,"^:",19,"^5:",["^1:",["^5;",["^1:",[["~$s"],["^5<","~$s"]]]]],"^5=","Create node representing a comment with text `s`.\n\n   You may optionally specify a `prefix` of `\";\"` or `\"#!\"`, defaults is `\";\"`.\n\n   Argument `s`:\n   - must not include the `prefix`\n   - usually includes the trailing newline character, otherwise subsequent nodes will be on the comment line\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-> (n/comment-node \"; my comment\\n\")\n       n/string)\n   ;; => \";; my comment\\n\"\n\n   (-> (n/comment-node \"#!\" \"/usr/bin/env bb\\n\")\n       n/string)\n   ;; => \"#!/usr/bin/env bb\\n\"\n   ```","~:top-fn",["^ ","^5A",false,"~:fixed-arity",2,"^5C",2,"^5>",[["~$s"],["^5<","~$s"]],"^5:",["^1:",[["~$s"],["^5<","~$s"]]],"^5@",["^1:",[null,null]]]],"^V","^2F","^6","rewrite_clj/node/comment.cljc","^:",19,"^5I",["^ ","^5A",false,"^5J",2,"^5C",2,"^5>",[["~$s"],["^5<","~$s"]],"^5:",["^1:",[["~$s"],["^5<","~$s"]]],"^5@",["^1:",[null,null]]],"^5>",[["~$s"],["^5<","~$s"]],"^5?",null,"^5J",2,"^5@",["^1:",[null,null]],"^8",1,"^5A",false,"~:methods",[["^ ","^5J",1,"^5A",false,"^53","~$any"],["^ ","^5J",2,"^5A",false,"^53","^2H"]],"^7",28,"^9",28,"^5C",2,"^5D",true,"^5:",["^1:",[["~$s"],["^5<","~$s"]]],"^5=","Create node representing a comment with text `s`.\n\n   You may optionally specify a `prefix` of `\";\"` or `\"#!\"`, defaults is `\";\"`.\n\n   Argument `s`:\n   - must not include the `prefix`\n   - usually includes the trailing newline character, otherwise subsequent nodes will be on the comment line\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-> (n/comment-node \"; my comment\\n\")\n       n/string)\n   ;; => \";; my comment\\n\"\n\n   (-> (n/comment-node \"#!\" \"/usr/bin/env bb\\n\")\n       n/string)\n   ;; => \"#!/usr/bin/env bb\\n\"\n   ```"],"~$comment?",["^ ","^57",null,"^5",["^ ","^6","rewrite_clj/node/comment.cljc","^7",55,"^8",7,"^9",55,"^:",15,"^5:",["^1:",["^5;",["^1:",[["^12"]]]]],"^5=","Returns true if `node` is a comment."],"^V","^2J","^6","rewrite_clj/node/comment.cljc","^:",15,"^5>",["^1:",[["^12"]]],"^5?",null,"^5@",["^1:",[null,null]],"^8",1,"^5A",false,"^7",55,"^5B","~$boolean","^9",55,"^5C",1,"^5D",true,"^5:",["^1:",["^5;",["^1:",[["^12"]]]]],"^5=","Returns true if `node` is a comment."]],"^18",["^ ","^13","^13"],"~:cljs.analyzer/constants",["^ ","^15",["^U",["~:s","~:prefix","~:comment","~$s","^5<"]],"~:order",["^5P","~:s","^5Q","^5<","~$s"]],"^1=",["^ ","^16",["^U",[]]],"^1>",["^ "],"^1?",["^14","^13","^11"]],"^Z","^W","~:ns-specs",["^ "],"~:ns-spec-vars",["^U",[]],"~:compiler-options",["^2M",[["^5U","~:static-fns"],true,["^5U","~:shadow-tweaks"],null,["^5U","~:source-map-inline"],null,["^5U","~:elide-asserts"],false,["^5U","~:optimize-constants"],null,["^5U","^1D"],null,["^5U","~:external-config"],null,["^5U","~:tooling-config"],null,["^5U","~:emit-constants"],null,["^5U","~:load-tests"],null,["^5U","~:form-size-threshold"],null,["^5U","~:global-goog-object&array"],null,["^5U","~:data-readers"],null,["^5U","~:infer-externs"],"~:auto",["^5U","^1F"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5U","~:fn-invoke-direct"],null,["^5U","~:source-map"],"/dev/null"]]]