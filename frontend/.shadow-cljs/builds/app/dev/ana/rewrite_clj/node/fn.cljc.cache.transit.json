["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.node.fn');\n/**\n * Construct function form.\n */\nrewrite_clj.node.fn.construct_fn = (function rewrite_clj$node$fn$construct_fn(fixed_arg_syms,vararg_sym,body){\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),(new cljs.core.List(null,cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fixed_arg_syms,(cljs.core.truth_(vararg_sym)?(new cljs.core.List(null,new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),(new cljs.core.List(null,vararg_sym,null,(1),null)),(2),null)):null))),(new cljs.core.List(null,body,null,(1),null)),(2),null)),(3),null));\n});\n/**\n * Get index based on the substring following the arg's `%`.\n * Zero means vararg.\n */\nrewrite_clj.node.fn.arg_index = (function rewrite_clj$node$fn$arg_index(n){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(n,\"&\")){\nreturn (0);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(n,\"\")){\nreturn (1);\n} else {\nif(cljs.core.truth_(cljs.core.re_matches(/\\d+/,n))){\nreturn rewrite_clj.interop.str__GT_int(n);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"arg literal must be %, %& or %integer.\",cljs.core.PersistentArrayMap.EMPTY);\n\n}\n}\n}\n});\n/**\n * If symbol starting with `%`, convert to respective gensym.\n */\nrewrite_clj.node.fn.arg_symbol__GT_gensym = (function rewrite_clj$node$fn$arg_symbol__GT_gensym(gensym_seq,vararg_QMARK_,max_fixed_arg_ndx,sym){\nif((sym instanceof cljs.core.Symbol)){\nvar nm = cljs.core.name(sym);\nif(clojure.string.starts_with_QMARK_(nm,\"%\")){\nvar param_ndx = rewrite_clj.node.fn.arg_index(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(nm,(1)));\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_ndx,(0))) && (cljs.core.not(cljs.core.deref(vararg_QMARK_))))){\ncljs.core.reset_BANG_(vararg_QMARK_,true);\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(max_fixed_arg_ndx,cljs.core.max,param_ndx);\n\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(gensym_seq,param_ndx);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Walk the form and create an expand function form.\n */\nrewrite_clj.node.fn.fn_walk = (function rewrite_clj$node$fn$fn_walk(form){\nvar sym_seq = (function (){var iter__5523__auto__ = (function rewrite_clj$node$fn$fn_walk_$_iter__31107(s__31108){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__31108__$1 = s__31108;\nwhile(true){\nvar temp__5804__auto__ = cljs.core.seq(s__31108__$1);\nif(temp__5804__auto__){\nvar s__31108__$2 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__31108__$2)){\nvar c__5521__auto__ = cljs.core.chunk_first(s__31108__$2);\nvar size__5522__auto__ = cljs.core.count(c__5521__auto__);\nvar b__31110 = cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__31109 = (0);\nwhile(true){\nif((i__31109 < size__5522__auto__)){\nvar i = cljs.core._nth(c__5521__auto__,i__31109);\nvar base = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(i,(0)))?\"rest__\":[\"p\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(i),\"__\"].join(''));\nvar s = cljs.core.name(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(base));\ncljs.core.chunk_append(b__31110,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([s,\"#\"].join('')));\n\nvar G__31196 = (i__31109 + (1));\ni__31109 = G__31196;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__31110),rewrite_clj$node$fn$fn_walk_$_iter__31107(cljs.core.chunk_rest(s__31108__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__31110),null);\n}\n} else {\nvar i = cljs.core.first(s__31108__$2);\nvar base = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(i,(0)))?\"rest__\":[\"p\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(i),\"__\"].join(''));\nvar s = cljs.core.name(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(base));\nreturn cljs.core.cons(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([s,\"#\"].join('')),rewrite_clj$node$fn$fn_walk_$_iter__31107(cljs.core.rest(s__31108__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$0());\n})();\nvar max_fixed_arg_ndx = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\nvar vararg_QMARK_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\nvar body = clojure.walk.prewalk((function (p1__31106_SHARP_){\nvar or__5045__auto__ = rewrite_clj.node.fn.arg_symbol__GT_gensym(sym_seq,vararg_QMARK_,max_fixed_arg_ndx,p1__31106_SHARP_);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn p1__31106_SHARP_;\n}\n}),form);\nreturn rewrite_clj.node.fn.construct_fn(cljs.core.take.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(max_fixed_arg_ndx),cljs.core.rest(sym_seq)),(cljs.core.truth_(cljs.core.deref(vararg_QMARK_))?cljs.core.first(sym_seq):null),body);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {rewrite_clj.node.protocols.InnerNode}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {rewrite_clj.node.protocols.Node}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\nrewrite_clj.node.fn.FnNode = (function (children,__meta,__extmap,__hash){\nthis.children = children;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(rewrite_clj.node.fn.FnNode.prototype.toString = (function (){\nvar self__ = this;\nvar node = this;\nreturn node.rewrite_clj$node$protocols$Node$string$arity$1(null);\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__5343__auto__,k__5344__auto__){\nvar self__ = this;\nvar this__5343__auto____$1 = this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__5345__auto__,k31115,else__5346__auto__){\nvar self__ = this;\nvar this__5345__auto____$1 = this;\nvar G__31154 = k31115;\nvar G__31154__$1 = (((G__31154 instanceof cljs.core.Keyword))?G__31154.fqn:null);\nswitch (G__31154__$1) {\ncase \"children\":\nreturn self__.children;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k31115,else__5346__auto__);\n\n}\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ = this;\nvar this__5363__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__31156){\nvar vec__31157 = p__31156;\nvar k__5367__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31157,(0),null);\nvar v__5368__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31157,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ = this;\nvar this__5358__auto____$1 = this;\nvar pr_pair__5361__auto__ = (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\"#rewrite-clj.node.fn.FnNode{\",\", \",\"}\",opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"children\",\"children\",-940561982),self__.children],null))], null),self__.__extmap));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__31114){\nvar self__ = this;\nvar G__31114__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__31114__$1,1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__5341__auto__){\nvar self__ = this;\nvar this__5341__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__5338__auto__){\nvar self__ = this;\nvar this__5338__auto____$1 = this;\nreturn (new rewrite_clj.node.fn.FnNode(self__.children,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__5347__auto__){\nvar self__ = this;\nvar this__5347__auto____$1 = this;\nreturn (1 + cljs.core.count(self__.__extmap));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__5339__auto__){\nvar self__ = this;\nvar this__5339__auto____$1 = this;\nvar h__5154__auto__ = self__.__hash;\nif((!((h__5154__auto__ == null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 = (function (coll__5340__auto__){\nreturn (-1740346885 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash = h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this31116,other31117){\nvar self__ = this;\nvar this31116__$1 = this;\nreturn (((!((other31117 == null)))) && ((((this31116__$1.constructor === other31117.constructor)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this31116__$1.children,other31117.children)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this31116__$1.__extmap,other31117.__extmap)))))));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204);\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$node_type$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204);\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn false;\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$sexpr_STAR_$arity$2 = (function (_node,opts){\nvar self__ = this;\nvar _node__$1 = this;\nreturn rewrite_clj.node.fn.fn_walk(rewrite_clj.node.protocols.sexprs.cljs$core$IFn$_invoke$arity$2(self__.children,opts));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn ((3) + rewrite_clj.node.protocols.sum_lengths(self__.children));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn [\"#(\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(rewrite_clj.node.protocols.concat_strings(self__.children)),\")\"].join('');\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__5353__auto__,k__5354__auto__){\nvar self__ = this;\nvar this__5353__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new rewrite_clj.node.fn.FnNode(self__.children,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn true;\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn self__.children;\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = (function (node,children_SINGLEQUOTE_){\nvar self__ = this;\nvar node__$1 = this;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(node__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children_SINGLEQUOTE_);\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$leader_length$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn (2);\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (this__5350__auto__,k31115){\nvar self__ = this;\nvar this__5350__auto____$1 = this;\nvar G__31175 = k31115;\nvar G__31175__$1 = (((G__31175 instanceof cljs.core.Keyword))?G__31175.fqn:null);\nswitch (G__31175__$1) {\ncase \"children\":\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k31115);\n\n}\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__5351__auto__,k__5352__auto__,G__31114){\nvar self__ = this;\nvar this__5351__auto____$1 = this;\nvar pred__31177 = cljs.core.keyword_identical_QMARK_;\nvar expr__31178 = k__5352__auto__;\nif(cljs.core.truth_((pred__31177.cljs$core$IFn$_invoke$arity$2 ? pred__31177.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),expr__31178) : pred__31177.call(null,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),expr__31178)))){\nreturn (new rewrite_clj.node.fn.FnNode(G__31114,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new rewrite_clj.node.fn.FnNode(self__.children,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__31114),null));\n}\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__5356__auto__){\nvar self__ = this;\nvar this__5356__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),self__.children,null))], null),self__.__extmap));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__5342__auto__,G__31114){\nvar self__ = this;\nvar this__5342__auto____$1 = this;\nreturn (new rewrite_clj.node.fn.FnNode(self__.children,G__31114,self__.__extmap,self__.__hash));\n}));\n\n(rewrite_clj.node.fn.FnNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__5348__auto__,entry__5349__auto__){\nvar self__ = this;\nvar this__5348__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(rewrite_clj.node.fn.FnNode.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"children\",\"children\",699969545,null)], null);\n}));\n\n(rewrite_clj.node.fn.FnNode.cljs$lang$type = true);\n\n(rewrite_clj.node.fn.FnNode.cljs$lang$ctorPrSeq = (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\"rewrite-clj.node.fn/FnNode\",null,(1),null));\n}));\n\n(rewrite_clj.node.fn.FnNode.cljs$lang$ctorPrWriter = (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\"rewrite-clj.node.fn/FnNode\");\n}));\n\n/**\n * Positional factory function for rewrite-clj.node.fn/FnNode.\n */\nrewrite_clj.node.fn.__GT_FnNode = (function rewrite_clj$node$fn$__GT_FnNode(children){\nreturn (new rewrite_clj.node.fn.FnNode(children,null,null,null));\n});\n\n/**\n * Factory function for rewrite-clj.node.fn/FnNode, taking a map of keywords to field values.\n */\nrewrite_clj.node.fn.map__GT_FnNode = (function rewrite_clj$node$fn$map__GT_FnNode(G__31118){\nvar extmap__5385__auto__ = (function (){var G__31190 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(G__31118,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\nif(cljs.core.record_QMARK_(G__31118)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__31190);\n} else {\nreturn G__31190;\n}\n})();\nreturn (new rewrite_clj.node.fn.FnNode(new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(G__31118),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\nrewrite_clj.node.protocols.make_printable_BANG_(rewrite_clj.node.fn.FnNode);\n/**\n * Create node representing an anonymous function with `children`.\n * \n * ```Clojure\n * (require '[rewrite-clj.node :as n])\n * \n * (-> (n/fn-node [(n/token-node '+)\n *                 (n/spaces 1)\n *                 (n/token-node 1)\n *                 (n/spaces 1)\n *                 (n/token-node '%1)])\n *     n/string)\n * ;; => \"#(+ 1 %1)\"\n * ```\n */\nrewrite_clj.node.fn.fn_node = (function rewrite_clj$node$fn$fn_node(children){\nreturn rewrite_clj.node.fn.__GT_FnNode(children);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/node/fn.cljc","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",33,"~:no-doc",true],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.tools.reader.impl.utils","~$cljs.tools.reader.impl.utils","~$cljs.loader","~$shadow.loader","~$clojure.tools.reader.impl.commons","~$cljs.tools.reader.impl.commons","~$clojure.tools.reader.impl.errors","~$cljs.tools.reader.impl.errors","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.tools.reader.edn","~$cljs.tools.reader.edn","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.node.fn","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^11","~$goog","^12","~$w","~$clojure.walk","~$rewrite-clj.interop","^14","~$string","~$clojure.string","~$node","~$rewrite-clj.node.protocols","^18","^18","~$interop","^14","^16","^16","^13","^13"],"~:seen",["^U",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^11","^11"],"~:form",["~#list",["~$ns","^W",["^1?",["^1;",["^16","~:as","^15"],["^13","^1A","~$w"],["^14","^1A","^19"],["^18","^1A","^17"]]]]],"~:flags",["^ ","^1;",["^U",[]]],"~:js-deps",["^ "],"~:deps",["^12","^11","^16","^13","^14","^18"]],"^Z","^W","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/node/fn.cljc"],"~:compiled-at",1666857663151,"^X",["^ ","^11","^11","^12","^12","~$w","^13","^14","^14","^15","^16","^17","^18","^18","^18","^19","^14","^16","^16","^13","^13"],"~:resource-name","rewrite_clj/node/fn.cljc","~:warnings",[],"~:source","(ns ^:no-doc rewrite-clj.node.fn\n  (:require [clojure.string :as string]\n            [clojure.walk :as w]\n            [rewrite-clj.interop :as interop]\n            [rewrite-clj.node.protocols :as node]))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n;; ## Conversion\n\n(defn- construct-fn\n  \"Construct function form.\"\n  [fixed-arg-syms vararg-sym body]\n  (list\n    'fn*\n    (vec\n      (concat\n        fixed-arg-syms\n        (when vararg-sym\n          (list '& vararg-sym))))\n    body))\n\n(defn- arg-index\n  \"Get index based on the substring following the arg's `%`.\n   Zero means vararg.\"\n  [n]\n  (cond (= n \"&\") 0\n        (= n \"\") 1\n        (re-matches #\"\\d+\" n) (interop/str->int n)\n        :else (throw (ex-info \"arg literal must be %, %& or %integer.\" {}))))\n\n(defn- arg-symbol->gensym\n  \"If symbol starting with `%`, convert to respective gensym.\"\n  [gensym-seq vararg? max-fixed-arg-ndx sym]\n  (when (symbol? sym)\n    (let [nm (name sym)]\n      (when (string/starts-with? nm \"%\")\n        (let [param-ndx (arg-index (subs nm 1))]\n          (when (and (= param-ndx 0) (not @vararg?))\n            (reset! vararg? true))\n          (swap! max-fixed-arg-ndx max param-ndx)\n          (nth gensym-seq param-ndx))))))\n\n(defn- fn-walk\n  \"Walk the form and create an expand function form.\"\n  [form]\n  (let [sym-seq (for [i (range)\n                      :let [base (if (= i 0)\n                                   \"rest__\"\n                                   (str \"p\" i \"__\"))\n                            s (name (gensym base))]]\n                  (symbol (str s \"#\")))\n        max-fixed-arg-ndx (atom 0)\n        vararg? (atom false)\n        body (w/prewalk\n              #(or (arg-symbol->gensym sym-seq vararg? max-fixed-arg-ndx %) %)\n              form)]\n    (construct-fn\n     (take @max-fixed-arg-ndx (rest sym-seq))\n     (when @vararg?\n       (first sym-seq))\n     body)))\n\n;; ## Node\n\n(defrecord FnNode [children]\n  node/Node\n  (tag [_node] :fn)\n  (node-type [_node] :fn)\n  (printable-only? [_node] false)\n  (sexpr* [_node opts]\n    (fn-walk (node/sexprs children opts)))\n  (length [_node]\n    (+ 3 (node/sum-lengths children)))\n  (string [_node]\n    (str \"#(\" (node/concat-strings children) \")\"))\n\n  node/InnerNode\n  (inner? [_node] true)\n  (children [_node] children)\n  (replace-children [node children']\n    (assoc node :children children'))\n  (leader-length [_node] 2)\n\n  Object\n  (toString [node]\n    (node/string node)))\n\n(node/make-printable! FnNode)\n\n;; ## Constructor\n\n(defn fn-node\n  \"Create node representing an anonymous function with `children`.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-> (n/fn-node [(n/token-node '+)\n                   (n/spaces 1)\n                   (n/token-node 1)\n                   (n/spaces 1)\n                   (n/token-node '%1)])\n       n/string)\n   ;; => \\\"#(+ 1 %1)\\\"\n   ```\"\n  [children]\n  (->FnNode children))\n","~:reader-features",["^U",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["rewrite-clj.node.fn/construct-fn","fixed-arg-syms","vararg-sym","body","cljs.core/List","cljs.core/vec","cljs.core.concat","rewrite-clj.node.fn/arg-index","n","cljs.core._EQ_","cljs.core/re-matches","rewrite-clj.interop/str->int","cljs.core.ex_info","rewrite-clj.node.fn/arg-symbol->gensym","gensym-seq","vararg?","max-fixed-arg-ndx","sym","cljs.core/Symbol","nm","cljs.core/name","clojure.string/starts-with?","param-ndx","cljs.core.subs","cljs.core/deref","cljs.core/not","cljs.core/reset!","cljs.core.swap_BANG_","cljs.core/max","cljs.core.nth","rewrite-clj.node.fn/fn-walk","form","sym-seq","iter__5523__auto__","s__31108","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__31110","cljs.core/chunk-buffer","i__31109","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__31107","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","i","cljs.core.range","base","s","cljs.core.gensym","cljs.core.symbol","cljs.core.atom","p1__31106#","clojure.walk/prewalk","or__5045__auto__","cljs.core.take","this__5343__auto__","k__5344__auto__","this__5345__auto__","k31115","else__5346__auto__","G__31154","cljs.core/Keyword","children","cljs.core.get","__extmap","this__5363__auto__","f__5364__auto__","init__5365__auto__","cljs.core.reduce","ret__5366__auto__","p__31156","vec__31157","k__5367__auto__","v__5368__auto__","this__5358__auto__","writer__5359__auto__","opts__5360__auto__","pr-pair__5361__auto__","keyval__5362__auto__","cljs.core/pr-sequential-writer","cljs.core/PersistentVector","G__31114","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__5341__auto__","__meta","this__5338__auto__","__hash","this__5347__auto__","this__5339__auto__","h__5154__auto__","coll__5340__auto__","cljs.core/hash-unordered-coll","this31116","other31117","cljs.core/PROTOCOL_SENTINEL","this__5353__auto__","k__5354__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__5350__auto__","G__31175","this__5351__auto__","k__5352__auto__","pred__31177","cljs.core/keyword-identical?","expr__31178","cljs.core.assoc","this__5356__auto__","cljs.core/MapEntry","this__5342__auto__","this__5348__auto__","entry__5349__auto__","cljs.core/vector?","cljs.core/-conj","rewrite-clj.node.fn/FnNode","this__5389__auto__","writer__5390__auto__","cljs.core/-write","G__31118","extmap__5385__auto__","G__31190","cljs.core/record?","rewrite-clj.node.fn/->FnNode","rewrite-clj.node.fn/map->FnNode","_node","opts","rewrite_clj.node.protocols.sexprs","rewrite-clj.node.protocols/sum-lengths","rewrite-clj.node.protocols/concat-strings","node","children'","rewrite-clj.node.protocols/make-printable!","rewrite-clj.node.fn/fn-node","cljs.core/chunk-first"]],"~:used-vars",["^U",["~$rewrite-clj.node.fn/FnNode","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/rest","~$rewrite-clj.node.fn/arg-index","~$clojure.string/starts-with?","~$rewrite-clj.node.protocols/make-printable!","~$cljs.core/pr-sequential-writer","~$cljs.core/vector?","~$cljs.core/=","~$rewrite-clj.node.fn/->FnNode","~$cljs.core/-assoc","~$cljs.core/re-matches","~$clojure.walk/prewalk","~$cljs.core/-write","~$cljs.core/-iterator","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/Keyword","~$cljs.core/take","~$cljs.core/chunk","~$rewrite-clj.node.protocols/concat-strings","~$cljs.core/MapEntry","~$cljs.core/dissoc","~$cljs.core/keyword-identical?","~$rewrite-clj.node.fn/fn-node","~$cljs.core/LazySeq","~$cljs.core/chunk-rest","~$cljs.core/atom","~$cljs.core/-with-meta","~$cljs.core/concat","~$rewrite-clj.node.protocols/sexprs","~$rewrite-clj.node.fn/map->FnNode","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/reset!","~$cljs.core/-conj","~$cljs.core/PersistentVector","~$cljs.core/List","~$cljs.core/swap!","~$cljs.core/get","~$rewrite-clj.interop/str->int","~$cljs.core/chunk-append","~$cljs.core/-nth","~$cljs.core/not-empty","~$rewrite-clj.node.fn/fn-walk","~$cljs.core/symbol","~$cljs.core/record?","~$cljs.core/-lookup","~$cljs.core/nth","~$cljs.core/ex-info","~$cljs.core/max","~$cljs.core/nil-iter","~$rewrite-clj.node.fn/construct-fn","~$cljs.core/vec","~$cljs.core/RecordIter","~$rewrite-clj.node.protocols/string","~$cljs.core/chunk-cons","~$cljs.core/not","~$cljs.core/cons","~$cljs.core/assoc","~$cljs.core/chunk-buffer","~$cljs.core/Symbol","~$cljs.core/range","~$rewrite-clj.node.protocols/sum-lengths","~$cljs.core/hash-unordered-coll","~$rewrite-clj.node.fn/arg-symbol->gensym","~$cljs.core/gensym","~$cljs.core/first","~$cljs.core/name","~$cljs.core/subs","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1F","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^U",[]],"~:deps-syms",["^12","~$goog.dom.HtmlElement"]]],["^1F","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12"]]],["^1F","goog/string/stringformat.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","~$goog.string"]]],["^1F","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^1F","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3O"]]],["^1F","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^3P"]]],["^1F","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12"]]],["^1F","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12"]]],["^1F","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12"]]],["^1F","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12"]]],["^1F","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^3P"]]],"~:SHADOW-TIMESTAMP",[1666857604000,1666857604000,1666857293000],["^1F","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^3P","~$goog.reflect"]]],["^1F","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^3P","~$goog.fs.blob","^3Q","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3S","^3T","^3U","^3V"]]],["^1F","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12"]]],["^1F","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12"]]],["^1F","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^3U","~$goog.html.SafeUrl","^3V","^3P","^3O"]]],["^1F","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^3P","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^3Z","~$goog.html.SafeStyle","^40","^3R","~$goog.html.uncheckedconversions","^3U","^3O"]]],["^1F","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^11"]]],["^1F","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^3U","^3S","^3T","^3Z","^44","~$goog.html.SafeStyleSheet","^40","~$goog.dom.TagName","^3R","^3V","^3P","~$goog.labs.userAgent.browser","^3L","^3M","^3O","~$goog.dom.tags","^3["]]],["^1F","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^3M"]]],["^1F","rewrite_clj/node/fn.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^11","^16","^13","^14","^18"]]],["^1F","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12"]]],["^1F","rewrite_clj/node/protocols.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^11","^16","^14"]]],["^1F","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1F","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^3L","^3P","~$goog.collections.maps","^3K","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1F","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12"]]],["^1F","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12"]]],["^1F","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12"]]],["^1F","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",[]]],["^1F","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^3L","^3M"]]],["^1F","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^11","^3K","~$goog.string.StringBuffer"]]],["^1F","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","~$goog.dom.safe","^45","^3U","^3O"]]],["^1F","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12"]]],["^1F","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","~$goog.labs.userAgent","^3O"]]],["^1F","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12"]]],["^1F","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12"]]],["^1F","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^3P","^43","^3Z","^44","^46","^40","^3R","^3U","^3O","^3S"]]],["^1F","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12"]]],["^1F","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","~$goog.math.Long","~$goog.math.Integer","^3K","^3M","^3L","~$goog.Uri","^4A"]]],["^1F","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^3U","^3V","^3[","^3P"]]],["^1F","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^3U","^44","^3V","^3M","^3P","^3O"]]],["^1F","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^3X"]]],["^1F","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^3P","^3K"]]],["^1F","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^3P","^3V"]]],["^1F","rewrite_clj/interop.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^3F",["^ ","^3G",null,"^3H",["^U",[]],"^3I",["^12","^11","^3K","~$goog.string.format"]]]]],"~:clj-info",["^ ","jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1666857314000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1666857293000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/node/fn.cljc","^7",1,"^8",14,"^9",1,"^:",33,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^O","^P","^Q","^R"],"^S",null,"^T",["^U",[]],"^V","^W","^X",["^ "],"^[",null,"^10",["^ ","^11","^11","^12","^12","~$w","^13","^14","^14","^15","^16","^17","^18","^18","^18","^19","^14","^16","^16","^13","^13"],"^1:",["^U",["^1;"]],"^1<",null,"~:defs",["^ ","~$construct-fn",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljc","^7",11,"^8",8,"^9",11,"^:",20,"~:private",true,"~:arglists",["^1?",["~$quote",["^1?",[["~$fixed-arg-syms","~$vararg-sym","~$body"]]]]],"~:doc","Construct function form."],"^5?",true,"^V","^31","^6","rewrite_clj/node/fn.cljc","^:",20,"~:method-params",["^1?",[["^5B","^5C","^5D"]]],"~:protocol-impl",null,"~:arglists-meta",["^1?",[null,null]],"^8",1,"~:variadic?",false,"^7",11,"~:ret-tag","^2N","^9",11,"~:max-fixed-arity",3,"~:fn-var",true,"^5@",["^1?",["^5A",["^1?",[["^5B","^5C","^5D"]]]]],"^5E","Construct function form."],"~$arg-index",["^ ","^5>",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljc","^7",23,"^8",8,"^9",23,"^:",17,"^5?",true,"^5@",["^1?",["^5A",["^1?",[["~$n"]]]]],"^5E","Get index based on the substring following the arg's `%`.\n   Zero means vararg."],"^5?",true,"^V","^1U","^6","rewrite_clj/node/fn.cljc","^:",17,"^5F",["^1?",[["~$n"]]],"^5G",null,"^5H",["^1?",[null,null]],"^8",1,"^5I",false,"^7",23,"^5J",["^U",["~$js","~$number"]],"^9",23,"^5K",1,"^5L",true,"^5@",["^1?",["^5A",["^1?",[["~$n"]]]]],"^5E","Get index based on the substring following the arg's `%`.\n   Zero means vararg."],"~$arg-symbol->gensym",["^ ","^5>",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljc","^7",32,"^8",8,"^9",32,"^:",26,"^5?",true,"^5@",["^1?",["^5A",["^1?",[["~$gensym-seq","~$vararg?","~$max-fixed-arg-ndx","~$sym"]]]]],"^5E","If symbol starting with `%`, convert to respective gensym."],"^5?",true,"^V","^3>","^6","rewrite_clj/node/fn.cljc","^:",26,"^5F",["^1?",[["^5Q","^5R","^5S","^5T"]]],"^5G",null,"^5H",["^1?",[null,null]],"^8",1,"^5I",false,"^7",32,"^5J",["^U",["~$any","~$clj-nil"]],"^9",32,"^5K",4,"^5L",true,"^5@",["^1?",["^5A",["^1?",[["^5Q","^5R","^5S","^5T"]]]]],"^5E","If symbol starting with `%`, convert to respective gensym."],"~$fn-walk",["^ ","^5>",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljc","^7",44,"^8",8,"^9",44,"^:",15,"^5?",true,"^5@",["^1?",["^5A",["^1?",[["~$form"]]]]],"^5E","Walk the form and create an expand function form."],"^5?",true,"^V","^2U","^6","rewrite_clj/node/fn.cljc","^:",15,"^5F",["^1?",[["^5X"]]],"^5G",null,"^5H",["^1?",[null,null]],"^8",1,"^5I",false,"^7",44,"^5J","^2N","^9",44,"^5K",1,"^5L",true,"^5@",["^1?",["^5A",["^1?",[["^5X"]]]]],"^5E","Walk the form and create an expand function form."],"~$FnNode",["^ ","~:num-fields",1,"~:protocols",["^U",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/Object","~$cljs.core/ICounted","~$rewrite-clj.node.protocols/InnerNode","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$rewrite-clj.node.protocols/Node","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^V","^1R","^6","rewrite_clj/node/fn.cljc","^:",18,"~:type",true,"^8",12,"~:internal-ctor",true,"^7",66,"~:record",true,"^9",66,"~:tag","~$function","~:skip-protocol-flag",["^U",["^60","^61","^62","^63","^64","^66","^68","^69","^6:","^6;","^6<","^6>","^6?","^6@","^6A"]]],"~$->FnNode",["^ ","^5>",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljc","^:",18,"^8",12,"^6C",true,"~:factory","~:positional","^7",66,"^9",66,"^5@",["^1?",["^5A",["^1?",[["~$children"]]]]],"^5E","Positional factory function for rewrite-clj.node.fn/FnNode."],"^V","^1[","^6","rewrite_clj/node/fn.cljc","^:",18,"^5F",["^1?",[["^6K"]]],"^5G",null,"^5H",["^1?",[null,null]],"^8",1,"^6C",true,"^5I",false,"^6I","^6J","^7",66,"^5J","^1R","^9",66,"^5K",1,"^5L",true,"^5@",["^1?",["^5A",["^1?",[["^6K"]]]]],"^5E","Positional factory function for rewrite-clj.node.fn/FnNode."],"~$map->FnNode",["^ ","^5>",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljc","^:",18,"^8",12,"^6C",true,"^6I","~:map","^7",66,"^9",66,"^5@",["^1?",["^5A",["^1?",[["~$G__31118"]]]]],"^5E","Factory function for rewrite-clj.node.fn/FnNode, taking a map of keywords to field values."],"^V","^2H","^6","rewrite_clj/node/fn.cljc","^:",18,"^5F",["^1?",[["^6N"]]],"^5G",null,"^5H",["^1?",[null,null]],"^8",1,"^6C",true,"^5I",false,"^6I","^6M","^7",66,"^5J","^1R","^9",66,"^5K",1,"^5L",true,"^5@",["^1?",["^5A",["^1?",[["^6N"]]]]],"^5E","Factory function for rewrite-clj.node.fn/FnNode, taking a map of keywords to field values."],"~$fn-node",["^ ","^5>",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljc","^7",93,"^8",7,"^9",93,"^:",14,"^5@",["^1?",["^5A",["^1?",[["^6K"]]]]],"^5E","Create node representing an anonymous function with `children`.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-> (n/fn-node [(n/token-node '+)\n                   (n/spaces 1)\n                   (n/token-node 1)\n                   (n/spaces 1)\n                   (n/token-node '%1)])\n       n/string)\n   ;; => \"#(+ 1 %1)\"\n   ```"],"^V","^2A","^6","rewrite_clj/node/fn.cljc","^:",14,"^5F",["^1?",[["^6K"]]],"^5G",null,"^5H",["^1?",[null,null]],"^8",1,"^5I",false,"^7",93,"^5J","^1R","^9",93,"^5K",1,"^5L",true,"^5@",["^1?",["^5A",["^1?",[["^6K"]]]]],"^5E","Create node representing an anonymous function with `children`.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-> (n/fn-node [(n/token-node '+)\n                   (n/spaces 1)\n                   (n/token-node 1)\n                   (n/spaces 1)\n                   (n/token-node '%1)])\n       n/string)\n   ;; => \"#(+ 1 %1)\"\n   ```"]],"^1=",["^ ","^11","^11"],"~:cljs.analyzer/constants",["^ ","^1:",["^U",["~$&","~:children","~:fn","~:else","^6K","~$fn*"]],"~:order",["^6T","~$&","^6S","^6Q","^6R","^6K"]],"^1B",["^ ","^1;",["^U",[]]],"^1C",["^ "],"^1D",["^12","^11","^16","^13","^14","^18"]],"^Z","^W","~:ns-specs",["^ "],"~:ns-spec-vars",["^U",[]],"~:compiler-options",["^3E",[["^6X","~:static-fns"],true,["^6X","~:shadow-tweaks"],null,["^6X","~:source-map-inline"],null,["^6X","~:elide-asserts"],false,["^6X","~:optimize-constants"],null,["^6X","^1I"],null,["^6X","~:external-config"],null,["^6X","~:tooling-config"],null,["^6X","~:emit-constants"],null,["^6X","~:load-tests"],null,["^6X","~:form-size-threshold"],null,["^6X","~:global-goog-object&array"],null,["^6X","~:data-readers"],null,["^6X","~:infer-externs"],"~:auto",["^6X","^1K"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6X","~:fn-invoke-direct"],null,["^6X","~:source-map"],"/dev/null"]]]