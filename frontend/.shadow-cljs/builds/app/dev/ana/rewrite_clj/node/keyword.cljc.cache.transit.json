["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.node.keyword');\nrewrite_clj.node.keyword.choose_qualifier = (function rewrite_clj$node$keyword$choose_qualifier(map_qualifier,kw_qualifier){\nif(cljs.core.not((function (){var and__5043__auto__ = map_qualifier;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"_\",new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(kw_qualifier));\n} else {\nreturn and__5043__auto__;\n}\n})())){\nvar or__5045__auto__ = kw_qualifier;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn map_qualifier;\n}\n} else {\nreturn null;\n}\n});\nrewrite_clj.node.keyword.kw_qualifier = (function rewrite_clj$node$keyword$kw_qualifier(k,auto_resolved_QMARK_){\nif(cljs.core.truth_((function (){var or__5045__auto__ = auto_resolved_QMARK_;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.namespace(k);\n}\n})())){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"auto-resolved?\",\"auto-resolved?\",-1944476351),auto_resolved_QMARK_,new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),cljs.core.namespace(k)], null);\n} else {\nreturn null;\n}\n});\nrewrite_clj.node.keyword.keyword_sexpr = (function rewrite_clj$node$keyword$keyword_sexpr(kw,kw_auto_resolved_QMARK_,map_qualifier,p__31194){\nvar map__31195 = p__31194;\nvar map__31195__$1 = cljs.core.__destructure_map(map__31195);\nvar auto_resolve = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31195__$1,new cljs.core.Keyword(null,\"auto-resolve\",\"auto-resolve\",1851201983));\nvar q = rewrite_clj.node.keyword.choose_qualifier(map_qualifier,rewrite_clj.node.keyword.kw_qualifier(kw,kw_auto_resolved_QMARK_));\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$2((function (){var G__31197 = (cljs.core.truth_(new cljs.core.Keyword(null,\"auto-resolved?\",\"auto-resolved?\",-1944476351).cljs$core$IFn$_invoke$arity$1(q))?(function (){var G__31199 = (function (){var or__5045__auto__ = (function (){var G__31200 = new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(q);\nif((G__31200 == null)){\nreturn null;\n} else {\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(G__31200);\n}\n})();\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"current\",\"current\",-1088038603);\n}\n})();\nvar fexpr__31198 = (function (){var or__5045__auto__ = auto_resolve;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn rewrite_clj.node.protocols.default_auto_resolve;\n}\n})();\nreturn (fexpr__31198.cljs$core$IFn$_invoke$arity$1 ? fexpr__31198.cljs$core$IFn$_invoke$arity$1(G__31199) : fexpr__31198.call(null,G__31199));\n})():new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(q));\nif((G__31197 == null)){\nreturn null;\n} else {\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__31197);\n}\n})(),cljs.core.name(kw));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {rewrite_clj.node.protocols.MapQualifiable}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {rewrite_clj.node.protocols.Node}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\nrewrite_clj.node.keyword.KeywordNode = (function (k,auto_resolved_QMARK_,map_qualifier,__meta,__extmap,__hash){\nthis.k = k;\nthis.auto_resolved_QMARK_ = auto_resolved_QMARK_;\nthis.map_qualifier = map_qualifier;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(rewrite_clj.node.keyword.KeywordNode.prototype.toString = (function (){\nvar self__ = this;\nvar node = this;\nreturn node.rewrite_clj$node$protocols$Node$string$arity$1(null);\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__5343__auto__,k__5344__auto__){\nvar self__ = this;\nvar this__5343__auto____$1 = this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__5345__auto__,k31208,else__5346__auto__){\nvar self__ = this;\nvar this__5345__auto____$1 = this;\nvar G__31218 = k31208;\nvar G__31218__$1 = (((G__31218 instanceof cljs.core.Keyword))?G__31218.fqn:null);\nswitch (G__31218__$1) {\ncase \"k\":\nreturn self__.k;\n\nbreak;\ncase \"auto-resolved?\":\nreturn self__.auto_resolved_QMARK_;\n\nbreak;\ncase \"map-qualifier\":\nreturn self__.map_qualifier;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k31208,else__5346__auto__);\n\n}\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ = this;\nvar this__5363__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__31219){\nvar vec__31220 = p__31219;\nvar k__5367__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31220,(0),null);\nvar v__5368__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31220,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$MapQualifiable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$MapQualifiable$map_context_apply$arity$2 = (function (node,map_qualifier__$1){\nvar self__ = this;\nvar node__$1 = this;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(node__$1,new cljs.core.Keyword(null,\"map-qualifier\",\"map-qualifier\",-1248117720),map_qualifier__$1);\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$MapQualifiable$map_context_clear$arity$1 = (function (node){\nvar self__ = this;\nvar node__$1 = this;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(node__$1,new cljs.core.Keyword(null,\"map-qualifier\",\"map-qualifier\",-1248117720),null);\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ = this;\nvar this__5358__auto____$1 = this;\nvar pr_pair__5361__auto__ = (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\"#rewrite-clj.node.keyword.KeywordNode{\",\", \",\"}\",opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"k\",\"k\",-2146297393),self__.k],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"auto-resolved?\",\"auto-resolved?\",-1944476351),self__.auto_resolved_QMARK_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"map-qualifier\",\"map-qualifier\",-1248117720),self__.map_qualifier],null))], null),self__.__extmap));\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__31207){\nvar self__ = this;\nvar G__31207__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__31207__$1,3,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"k\",\"k\",-2146297393),new cljs.core.Keyword(null,\"auto-resolved?\",\"auto-resolved?\",-1944476351),new cljs.core.Keyword(null,\"map-qualifier\",\"map-qualifier\",-1248117720)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__5341__auto__){\nvar self__ = this;\nvar this__5341__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__5338__auto__){\nvar self__ = this;\nvar this__5338__auto____$1 = this;\nreturn (new rewrite_clj.node.keyword.KeywordNode(self__.k,self__.auto_resolved_QMARK_,self__.map_qualifier,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__5347__auto__){\nvar self__ = this;\nvar this__5347__auto____$1 = this;\nreturn (3 + cljs.core.count(self__.__extmap));\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__5339__auto__){\nvar self__ = this;\nvar this__5339__auto____$1 = this;\nvar h__5154__auto__ = self__.__hash;\nif((!((h__5154__auto__ == null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 = (function (coll__5340__auto__){\nreturn (-1681863292 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash = h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this31209,other31210){\nvar self__ = this;\nvar this31209__$1 = this;\nreturn (((!((other31210 == null)))) && ((((this31209__$1.constructor === other31210.constructor)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this31209__$1.k,other31210.k)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this31209__$1.auto_resolved_QMARK_,other31210.auto_resolved_QMARK_)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this31209__$1.map_qualifier,other31210.map_qualifier)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this31209__$1.__extmap,other31210.__extmap)))))))))));\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn new cljs.core.Keyword(null,\"token\",\"token\",-1211463215);\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$node_type$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747);\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn false;\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$sexpr_STAR_$arity$2 = (function (_node,opts){\nvar self__ = this;\nvar _node__$1 = this;\nreturn rewrite_clj.node.keyword.keyword_sexpr(self__.k,self__.auto_resolved_QMARK_,self__.map_qualifier,opts);\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nvar c = (((cljs.core.name(self__.k)).length) + (1));\nif(cljs.core.truth_(self__.auto_resolved_QMARK_)){\nreturn (c + (1));\n} else {\nvar temp__5802__auto__ = cljs.core.namespace(self__.k);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar nspace = temp__5802__auto__;\nreturn (((1) + c) + ((nspace).length));\n} else {\nreturn c;\n}\n}\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn [(cljs.core.truth_(self__.auto_resolved_QMARK_)?\":\":null),cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.k], 0))].join('');\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__5353__auto__,k__5354__auto__){\nvar self__ = this;\nvar this__5353__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"auto-resolved?\",\"auto-resolved?\",-1944476351),null,new cljs.core.Keyword(null,\"map-qualifier\",\"map-qualifier\",-1248117720),null,new cljs.core.Keyword(null,\"k\",\"k\",-2146297393),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new rewrite_clj.node.keyword.KeywordNode(self__.k,self__.auto_resolved_QMARK_,self__.map_qualifier,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (this__5350__auto__,k31208){\nvar self__ = this;\nvar this__5350__auto____$1 = this;\nvar G__31235 = k31208;\nvar G__31235__$1 = (((G__31235 instanceof cljs.core.Keyword))?G__31235.fqn:null);\nswitch (G__31235__$1) {\ncase \"k\":\ncase \"auto-resolved?\":\ncase \"map-qualifier\":\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k31208);\n\n}\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__5351__auto__,k__5352__auto__,G__31207){\nvar self__ = this;\nvar this__5351__auto____$1 = this;\nvar pred__31239 = cljs.core.keyword_identical_QMARK_;\nvar expr__31240 = k__5352__auto__;\nif(cljs.core.truth_((pred__31239.cljs$core$IFn$_invoke$arity$2 ? pred__31239.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"k\",\"k\",-2146297393),expr__31240) : pred__31239.call(null,new cljs.core.Keyword(null,\"k\",\"k\",-2146297393),expr__31240)))){\nreturn (new rewrite_clj.node.keyword.KeywordNode(G__31207,self__.auto_resolved_QMARK_,self__.map_qualifier,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__31239.cljs$core$IFn$_invoke$arity$2 ? pred__31239.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"auto-resolved?\",\"auto-resolved?\",-1944476351),expr__31240) : pred__31239.call(null,new cljs.core.Keyword(null,\"auto-resolved?\",\"auto-resolved?\",-1944476351),expr__31240)))){\nreturn (new rewrite_clj.node.keyword.KeywordNode(self__.k,G__31207,self__.map_qualifier,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__31239.cljs$core$IFn$_invoke$arity$2 ? pred__31239.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"map-qualifier\",\"map-qualifier\",-1248117720),expr__31240) : pred__31239.call(null,new cljs.core.Keyword(null,\"map-qualifier\",\"map-qualifier\",-1248117720),expr__31240)))){\nreturn (new rewrite_clj.node.keyword.KeywordNode(self__.k,self__.auto_resolved_QMARK_,G__31207,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new rewrite_clj.node.keyword.KeywordNode(self__.k,self__.auto_resolved_QMARK_,self__.map_qualifier,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__31207),null));\n}\n}\n}\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__5356__auto__){\nvar self__ = this;\nvar this__5356__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"k\",\"k\",-2146297393),self__.k,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"auto-resolved?\",\"auto-resolved?\",-1944476351),self__.auto_resolved_QMARK_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"map-qualifier\",\"map-qualifier\",-1248117720),self__.map_qualifier,null))], null),self__.__extmap));\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__5342__auto__,G__31207){\nvar self__ = this;\nvar this__5342__auto____$1 = this;\nreturn (new rewrite_clj.node.keyword.KeywordNode(self__.k,self__.auto_resolved_QMARK_,self__.map_qualifier,G__31207,self__.__extmap,self__.__hash));\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__5348__auto__,entry__5349__auto__){\nvar self__ = this;\nvar this__5348__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"k\",\"k\",-505765866,null),new cljs.core.Symbol(null,\"auto-resolved?\",\"auto-resolved?\",-303944824,null),new cljs.core.Symbol(null,\"map-qualifier\",\"map-qualifier\",392413807,null)], null);\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.cljs$lang$type = true);\n\n(rewrite_clj.node.keyword.KeywordNode.cljs$lang$ctorPrSeq = (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\"rewrite-clj.node.keyword/KeywordNode\",null,(1),null));\n}));\n\n(rewrite_clj.node.keyword.KeywordNode.cljs$lang$ctorPrWriter = (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\"rewrite-clj.node.keyword/KeywordNode\");\n}));\n\n/**\n * Positional factory function for rewrite-clj.node.keyword/KeywordNode.\n */\nrewrite_clj.node.keyword.__GT_KeywordNode = (function rewrite_clj$node$keyword$__GT_KeywordNode(k,auto_resolved_QMARK_,map_qualifier){\nreturn (new rewrite_clj.node.keyword.KeywordNode(k,auto_resolved_QMARK_,map_qualifier,null,null,null));\n});\n\n/**\n * Factory function for rewrite-clj.node.keyword/KeywordNode, taking a map of keywords to field values.\n */\nrewrite_clj.node.keyword.map__GT_KeywordNode = (function rewrite_clj$node$keyword$map__GT_KeywordNode(G__31212){\nvar extmap__5385__auto__ = (function (){var G__31247 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__31212,new cljs.core.Keyword(null,\"k\",\"k\",-2146297393),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"auto-resolved?\",\"auto-resolved?\",-1944476351),new cljs.core.Keyword(null,\"map-qualifier\",\"map-qualifier\",-1248117720)], 0));\nif(cljs.core.record_QMARK_(G__31212)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__31247);\n} else {\nreturn G__31247;\n}\n})();\nreturn (new rewrite_clj.node.keyword.KeywordNode(new cljs.core.Keyword(null,\"k\",\"k\",-2146297393).cljs$core$IFn$_invoke$arity$1(G__31212),new cljs.core.Keyword(null,\"auto-resolved?\",\"auto-resolved?\",-1944476351).cljs$core$IFn$_invoke$arity$1(G__31212),new cljs.core.Keyword(null,\"map-qualifier\",\"map-qualifier\",-1248117720).cljs$core$IFn$_invoke$arity$1(G__31212),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\nrewrite_clj.node.protocols.make_printable_BANG_(rewrite_clj.node.keyword.KeywordNode);\n/**\n * Returns true if `n` is a node representing a keyword.\n */\nrewrite_clj.node.keyword.keyword_node_QMARK_ = (function rewrite_clj$node$keyword$keyword_node_QMARK_(n){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),rewrite_clj.node.protocols.node_type(n));\n});\n/**\n * Create a node representing a keyword `k`. \n * \n * Optionally include `auto-resolved?`, which defaults to `false`.\n * \n * ```Clojure\n * (require '[rewrite-clj.node :as n]) \n * \n * ;; unqualified keyword\n * (-> (n/keyword-node :kw)\n *     n/string)\n * ;; => \":kw\"\n * \n * ;; qualified keyword\n * (-> (n/keyword-node :my-prefix/kw)\n *     n/string)\n * ;; => \":my-prefix/kw\"\n * \n * ;; keyword auto-resolved to current ns\n * (-> (n/keyword-node :kw true)\n *     n/string)\n * ;; => \"::kw\"\n * \n * ;; keyword auto-resolved to a namespace with given alias\n * (-> (n/keyword-node :ns-alias/kw true)\n *     n/string)\n * ;; => \"::ns-alias/kw\"\n * ```\n */\nrewrite_clj.node.keyword.keyword_node = (function rewrite_clj$node$keyword$keyword_node(var_args){\nvar G__31262 = arguments.length;\nswitch (G__31262) {\ncase 2:\nreturn rewrite_clj.node.keyword.keyword_node.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 1:\nreturn rewrite_clj.node.keyword.keyword_node.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.node.keyword.keyword_node.cljs$core$IFn$_invoke$arity$2 = (function (k,auto_resolved_QMARK_){\nif((k instanceof cljs.core.Keyword)){\n} else {\nthrow (new Error(\"Assert failed: (keyword? k)\"));\n}\n\nreturn rewrite_clj.node.keyword.__GT_KeywordNode(k,auto_resolved_QMARK_,null);\n}));\n\n(rewrite_clj.node.keyword.keyword_node.cljs$core$IFn$_invoke$arity$1 = (function (k){\nreturn rewrite_clj.node.keyword.keyword_node.cljs$core$IFn$_invoke$arity$2(k,false);\n}));\n\n(rewrite_clj.node.keyword.keyword_node.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/node/keyword.cljc","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",38,"~:no-doc",true],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.tools.reader.impl.utils","~$cljs.tools.reader.impl.utils","~$cljs.loader","~$shadow.loader","~$clojure.tools.reader.impl.commons","~$cljs.tools.reader.impl.commons","~$clojure.tools.reader.impl.errors","~$cljs.tools.reader.impl.errors","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.tools.reader.edn","~$cljs.tools.reader.edn","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.node.keyword","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node.protocols","^11","~$node","^11","~$cljs.core","^13","~$goog","^14"],"~:seen",["^U",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^13","^13"],"~:form",["~#list",["~$ns","^W",["^1:",["^16",["^11","~:as","^12"]]]]],"~:flags",["^ ","^16",["^U",[]]],"~:js-deps",["^ "],"~:deps",["^14","^13","^11"]],"^Z","^W","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/node/keyword.cljc"],"~:compiled-at",1666857663208,"^X",["^ ","^11","^11","^12","^11","^13","^13","^14","^14"],"~:resource-name","rewrite_clj/node/keyword.cljc","~:warnings",[],"~:source","(ns ^:no-doc rewrite-clj.node.keyword\n  (:require [rewrite-clj.node.protocols :as node]))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n;; ## Node\n\n(defn- choose-qualifier [map-qualifier kw-qualifier]\n  (when (not (and map-qualifier (= \"_\" (:prefix kw-qualifier))))\n    (or kw-qualifier map-qualifier)))\n\n(defn kw-qualifier [k auto-resolved?]\n  (when (or auto-resolved? (namespace k))\n    {:auto-resolved? auto-resolved?\n     :prefix (namespace k)}))\n\n(defn keyword-sexpr [kw kw-auto-resolved? map-qualifier {:keys [auto-resolve]}]\n  (let [q (choose-qualifier map-qualifier (kw-qualifier kw kw-auto-resolved?))]\n    (keyword (some-> (if (:auto-resolved? q)\n                       ((or auto-resolve node/default-auto-resolve)\n                        (or (some-> (:prefix q) symbol)\n                            :current))\n                       (:prefix q))\n                     str)\n             (name kw))))\n\n(defrecord KeywordNode [k auto-resolved? map-qualifier]\n  node/Node\n  (tag [_node] :token)\n  (node-type [_node] :keyword)\n  (printable-only? [_node] false)\n  (sexpr* [_node opts]\n    (keyword-sexpr k auto-resolved? map-qualifier opts))\n  (length [_node]\n    (let [c (inc (count (name k)))]\n      (if auto-resolved?\n        (inc c)\n        (if-let [nspace (namespace k)]\n          (+ 1 c (count nspace))\n          c))))\n  (string [_node]\n    (str (when auto-resolved? \":\")\n         (pr-str k)))\n\n  node/MapQualifiable\n  (map-context-apply [node map-qualifier]\n    (assoc node :map-qualifier map-qualifier))\n  (map-context-clear [node]\n    (assoc node :map-qualifier nil))\n\n  Object\n  (toString [node]\n    (node/string node)))\n\n(node/make-printable! KeywordNode)\n\n(defn keyword-node? \n  \"Returns true if `n` is a node representing a keyword.\"\n  [n]\n  (= :keyword (node/node-type n)))\n\n;; ## Constructor\n\n(defn keyword-node\n  \"Create a node representing a keyword `k`. \n\n   Optionally include `auto-resolved?`, which defaults to `false`.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n]) \n\n   ;; unqualified keyword\n   (-> (n/keyword-node :kw)\n       n/string)\n   ;; => \\\":kw\\\"\n\n   ;; qualified keyword\n   (-> (n/keyword-node :my-prefix/kw)\n       n/string)\n   ;; => \\\":my-prefix/kw\\\"\n\n   ;; keyword auto-resolved to current ns\n   (-> (n/keyword-node :kw true)\n       n/string)\n   ;; => \\\"::kw\\\"\n\n   ;; keyword auto-resolved to a namespace with given alias\n   (-> (n/keyword-node :ns-alias/kw true)\n       n/string)\n   ;; => \\\"::ns-alias/kw\\\"\n   ```\"\n  ([k auto-resolved?]\n   {:pre [(keyword? k)]}\n   (->KeywordNode k auto-resolved? nil))\n  ([k] (keyword-node k false)))\n","~:reader-features",["^U",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["rewrite-clj.node.keyword/choose-qualifier","map-qualifier","kw-qualifier","cljs.core/not","and__5043__auto__","cljs.core._EQ_","or__5045__auto__","rewrite-clj.node.keyword/kw-qualifier","k","auto-resolved?","cljs.core/namespace","p__31194","map__31195","cljs.core/--destructure-map","cljs.core.get","rewrite-clj.node.keyword/keyword-sexpr","kw","kw-auto-resolved?","auto-resolve","q","cljs.core.keyword","G__31197","G__31199","fexpr__31198","rewrite-clj.node.protocols/default-auto-resolve","G__31200","cljs.core.symbol","cljs.core/name","this__5343__auto__","k__5344__auto__","this__5345__auto__","k31208","else__5346__auto__","G__31218","cljs.core/Keyword","__extmap","this__5363__auto__","f__5364__auto__","init__5365__auto__","cljs.core.reduce","ret__5366__auto__","p__31219","vec__31220","k__5367__auto__","cljs.core.nth","v__5368__auto__","cljs.core/PROTOCOL_SENTINEL","this__5358__auto__","writer__5359__auto__","opts__5360__auto__","pr-pair__5361__auto__","keyval__5362__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__31207","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__5341__auto__","__meta","this__5338__auto__","__hash","this__5347__auto__","cljs.core/count","this__5339__auto__","h__5154__auto__","coll__5340__auto__","cljs.core/hash-unordered-coll","this31209","other31210","this__5353__auto__","k__5354__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__5350__auto__","G__31235","this__5351__auto__","k__5352__auto__","pred__31239","cljs.core/keyword-identical?","expr__31240","cljs.core.assoc","this__5356__auto__","cljs.core/seq","cljs.core/MapEntry","this__5342__auto__","this__5348__auto__","entry__5349__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","rewrite-clj.node.keyword/KeywordNode","this__5389__auto__","cljs.core/List","writer__5390__auto__","cljs.core/-write","G__31212","extmap__5385__auto__","G__31247","cljs.core/record?","rewrite-clj.node.keyword/->KeywordNode","rewrite-clj.node.keyword/map->KeywordNode","_node","opts","c","temp__5802__auto__","nspace","cljs.core.pr_str","node","rewrite-clj.node.protocols/make-printable!","rewrite-clj.node.keyword/keyword-node?","n","rewrite-clj.node.protocols/node-type","var_args","G__31262","rewrite-clj.node.keyword/keyword-node","js/Error","rewrite_clj.node.keyword.keyword_node"]],"~:used-vars",["^U",["~$cljs.core/--destructure-map","~$rewrite-clj.node.keyword/->KeywordNode","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/keyword","~$rewrite-clj.node.keyword/KeywordNode","~$rewrite-clj.node.protocols/make-printable!","~$cljs.core/pr-sequential-writer","~$cljs.core/vector?","~$cljs.core/=","~$cljs.core/-assoc","~$cljs.core/-write","~$cljs.core/-iterator","~$rewrite-clj.node.keyword/choose-qualifier","~$cljs.core/count","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/Keyword","~$cljs.core/MapEntry","~$cljs.core/dissoc","~$cljs.core/keyword-identical?","~$cljs.core/-with-meta","~$cljs.core/concat","~$cljs.core/pr-str","~$rewrite-clj.node.keyword/keyword-node?","~$rewrite-clj.node.protocols/default-auto-resolve","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/-conj","~$cljs.core/namespace","~$cljs.core/PersistentVector","~$cljs.core/List","~$cljs.core/get","~$rewrite-clj.node.protocols/node-type","~$cljs.core/-nth","~$cljs.core/not-empty","~$rewrite-clj.node.keyword/keyword-sexpr","~$cljs.core/symbol","~$cljs.core/record?","~$cljs.core/-lookup","~$cljs.core/nth","~$cljs.core/nil-iter","~$rewrite-clj.node.keyword/map->KeywordNode","~$rewrite-clj.node.keyword/keyword-node","~$cljs.core/RecordIter","~$rewrite-clj.node.protocols/string","~$cljs.core/not","~$rewrite-clj.node.keyword/kw-qualifier","~$cljs.core/assoc","~$cljs.core/hash-unordered-coll","~$cljs.core/name","~$js/Error"]]],"~:cache-keys",["~#cmap",[["^1A","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^U",[]],"~:deps-syms",["^14","~$goog.dom.HtmlElement"]]],["^1A","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14"]]],["^1A","goog/string/stringformat.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","~$goog.string"]]],["^1A","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^1A","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^33"]]],["^1A","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^34"]]],["^1A","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14"]]],["^1A","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14"]]],["^1A","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14"]]],["^1A","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14"]]],["^1A","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^34"]]],"~:SHADOW-TIMESTAMP",[1666857604000,1666857604000,1666857293000],["^1A","rewrite_clj/node/keyword.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^13","^11"]]],["^1A","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^34","~$goog.reflect"]]],["^1A","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^34","~$goog.fs.blob","^35","~$goog.html.SafeScript","~$goog.html.trustedtypes","^37","^38","^39","^3:"]]],["^1A","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14"]]],["^1A","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14"]]],["^1A","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^39","~$goog.html.SafeUrl","^3:","^34","^33"]]],["^1A","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^34","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^3>","~$goog.html.SafeStyle","^3@","^36","~$goog.html.uncheckedconversions","^39","^33"]]],["^1A","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^39","^37","^38","^3>","^3D","~$goog.html.SafeStyleSheet","^3@","~$goog.dom.TagName","^36","^3:","^34","~$goog.labs.userAgent.browser","^30","^31","^33","~$goog.dom.tags","^3?"]]],["^1A","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^31"]]],["^1A","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14"]]],["^1A","rewrite_clj/node/protocols.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^13","~$clojure.string","~$rewrite-clj.interop"]]],["^1A","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1A","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^30","^34","~$goog.collections.maps","^2[","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1A","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14"]]],["^1A","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14"]]],["^1A","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14"]]],["^1A","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",[]]],["^1A","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^30","^31"]]],["^1A","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^13","^2[","~$goog.string.StringBuffer"]]],["^1A","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","~$goog.dom.safe","^3E","^39","^33"]]],["^1A","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14"]]],["^1A","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","~$goog.labs.userAgent","^33"]]],["^1A","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14"]]],["^1A","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14"]]],["^1A","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^34","^3C","^3>","^3D","^3F","^3@","^36","^39","^33","^37"]]],["^1A","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14"]]],["^1A","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","~$goog.math.Long","~$goog.math.Integer","^2[","^31","^30","~$goog.Uri","^3S"]]],["^1A","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^39","^3:","^3?","^34"]]],["^1A","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^39","^3D","^3:","^31","^34","^33"]]],["^1A","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^3<"]]],["^1A","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^34","^2["]]],["^1A","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^34","^3:"]]],["^1A","rewrite_clj/interop.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2V",["^ ","^2W",null,"^2X",["^U",[]],"^2Y",["^14","^13","^2[","~$goog.string.format"]]]]],"~:clj-info",["^ ","jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1666857314000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1666857293000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/node/keyword.cljc","^7",1,"^8",14,"^9",1,"^:",38,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^O","^P","^Q","^R"],"^S",null,"^T",["^U",[]],"^V","^W","^X",["^ "],"^[",null,"^10",["^ ","^11","^11","^12","^11","^13","^13","^14","^14"],"^15",["^U",["^16"]],"~:shadow/js-access-global",["^U",["Error"]],"^17",null,"~:defs",["^ ","~$choose-qualifier",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/node/keyword.cljc","^7",8,"^8",8,"^9",8,"^:",24,"~:private",true,"~:arglists",["^1:",["~$quote",["^1:",[["~$map-qualifier","~$kw-qualifier"]]]]]],"^4R",true,"^V","^1Y","^6","rewrite_clj/node/keyword.cljc","^:",24,"~:method-params",["^1:",[["^4U","^4V"]]],"~:protocol-impl",null,"~:arglists-meta",["^1:",[null,null]],"^8",1,"~:variadic?",false,"^7",8,"~:ret-tag",["^U",[null,"~$clj-nil"]],"^9",8,"~:max-fixed-arity",2,"~:fn-var",true,"^4S",["^1:",["^4T",["^1:",[["^4U","^4V"]]]]]],"^4V",["^ ","^4Q",null,"^5",["^ ","^6","rewrite_clj/node/keyword.cljc","^7",12,"^8",7,"^9",12,"^:",19,"^4S",["^1:",["^4T",["^1:",[["~$k","~$auto-resolved?"]]]]]],"^V","^2O","^6","rewrite_clj/node/keyword.cljc","^:",19,"^4W",["^1:",[["~$k","^53"]]],"^4X",null,"^4Y",["^1:",[null,null]],"^8",1,"^4Z",false,"^7",12,"^4[",["^U",["~$cljs.core/IMap","^50"]],"^9",12,"^51",2,"^52",true,"^4S",["^1:",["^4T",["^1:",[["~$k","^53"]]]]]],"~$keyword-sexpr",["^ ","^4Q",null,"^5",["^ ","^6","rewrite_clj/node/keyword.cljc","^7",17,"^8",7,"^9",17,"^:",20,"^4S",["^1:",["^4T",["^1:",[["~$kw","~$kw-auto-resolved?","^4U",["^ ","~:keys",["~$auto-resolve"]]]]]]]],"^V","^2D","^6","rewrite_clj/node/keyword.cljc","^:",20,"^4W",["^1:",[["^56","^57","^4U","~$p__31194"]]],"^4X",null,"^4Y",["^1:",[null,null]],"^8",1,"^4Z",false,"^7",17,"^4[","^21","^9",17,"^51",4,"^52",true,"^4S",["^1:",["^4T",["^1:",[["^56","^57","^4U",["^ ","^58",["^59"]]]]]]]],"~$KeywordNode",["^ ","~:num-fields",3,"~:protocols",["^U",["~$cljs.core/IRecord","~$rewrite-clj.node.protocols/MapQualifiable","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/Object","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$rewrite-clj.node.protocols/Node","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","^54","~$cljs.core/ILookup"]],"^V","^1Q","^6","rewrite_clj/node/keyword.cljc","^:",23,"~:type",true,"^8",12,"~:internal-ctor",true,"^7",27,"~:record",true,"^9",27,"~:tag","~$function","~:skip-protocol-flag",["^U",["^5>","^5@","^5A","^5B","^5C","^5E","^5F","^5G","^5H","^5I","^5J","^5L","^5M","^54","^5N"]]],"~$->KeywordNode",["^ ","^4Q",null,"^5",["^ ","^6","rewrite_clj/node/keyword.cljc","^:",23,"^8",12,"^5P",true,"~:factory","~:positional","^7",27,"^9",27,"^4S",["^1:",["^4T",["^1:",[["~$k","^53","^4U"]]]]],"~:doc","Positional factory function for rewrite-clj.node.keyword/KeywordNode."],"^V","^1N","^6","rewrite_clj/node/keyword.cljc","^:",23,"^4W",["^1:",[["~$k","^53","^4U"]]],"^4X",null,"^4Y",["^1:",[null,null]],"^8",1,"^5P",true,"^4Z",false,"^5V","^5W","^7",27,"^4[","^1Q","^9",27,"^51",3,"^52",true,"^4S",["^1:",["^4T",["^1:",[["~$k","^53","^4U"]]]]],"^5X","Positional factory function for rewrite-clj.node.keyword/KeywordNode."],"~$map->KeywordNode",["^ ","^4Q",null,"^5",["^ ","^6","rewrite_clj/node/keyword.cljc","^:",23,"^8",12,"^5P",true,"^5V","~:map","^7",27,"^9",27,"^4S",["^1:",["^4T",["^1:",[["~$G__31212"]]]]],"^5X","Factory function for rewrite-clj.node.keyword/KeywordNode, taking a map of keywords to field values."],"^V","^2J","^6","rewrite_clj/node/keyword.cljc","^:",23,"^4W",["^1:",[["^5["]]],"^4X",null,"^4Y",["^1:",[null,null]],"^8",1,"^5P",true,"^4Z",false,"^5V","^5Z","^7",27,"^4[","^1Q","^9",27,"^51",1,"^52",true,"^4S",["^1:",["^4T",["^1:",[["^5["]]]]],"^5X","Factory function for rewrite-clj.node.keyword/KeywordNode, taking a map of keywords to field values."],"~$keyword-node?",["^ ","^4Q",null,"^5",["^ ","^6","rewrite_clj/node/keyword.cljc","^7",57,"^8",7,"^9",57,"^:",20,"^4S",["^1:",["^4T",["^1:",[["~$n"]]]]],"^5X","Returns true if `n` is a node representing a keyword."],"^V","^28","^6","rewrite_clj/node/keyword.cljc","^:",20,"^4W",["^1:",[["~$n"]]],"^4X",null,"^4Y",["^1:",[null,null]],"^8",1,"^4Z",false,"^7",57,"^4[","~$boolean","^9",57,"^51",1,"^52",true,"^4S",["^1:",["^4T",["^1:",[["~$n"]]]]],"^5X","Returns true if `n` is a node representing a keyword."],"~$keyword-node",["^ ","^4Q",null,"^5",["^ ","^6","rewrite_clj/node/keyword.cljc","^7",64,"^8",7,"^9",64,"^:",19,"^4S",["^1:",["^4T",["^1:",[["~$k","^53"],["~$k"]]]]],"^5X","Create a node representing a keyword `k`. \n\n   Optionally include `auto-resolved?`, which defaults to `false`.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n]) \n\n   ;; unqualified keyword\n   (-> (n/keyword-node :kw)\n       n/string)\n   ;; => \":kw\"\n\n   ;; qualified keyword\n   (-> (n/keyword-node :my-prefix/kw)\n       n/string)\n   ;; => \":my-prefix/kw\"\n\n   ;; keyword auto-resolved to current ns\n   (-> (n/keyword-node :kw true)\n       n/string)\n   ;; => \"::kw\"\n\n   ;; keyword auto-resolved to a namespace with given alias\n   (-> (n/keyword-node :ns-alias/kw true)\n       n/string)\n   ;; => \"::ns-alias/kw\"\n   ```","~:top-fn",["^ ","^4Z",false,"~:fixed-arity",2,"^51",2,"^4W",[["~$k","^53"],["~$k"]],"^4S",["^1:",[["~$k","^53"],["~$k"]]],"^4Y",["^1:",[null,null]]]],"^V","^2K","^6","rewrite_clj/node/keyword.cljc","^:",19,"^63",["^ ","^4Z",false,"^64",2,"^51",2,"^4W",[["~$k","^53"],["~$k"]],"^4S",["^1:",[["~$k","^53"],["~$k"]]],"^4Y",["^1:",[null,null]]],"^4W",[["~$k","^53"],["~$k"]],"^4X",null,"^64",2,"^4Y",["^1:",[null,null]],"^8",1,"^4Z",false,"~:methods",[["^ ","^64",2,"^4Z",false,"^5R","^1Q"],["^ ","^64",1,"^4Z",false,"^5R","^1Q"]],"^7",64,"^9",64,"^51",2,"^52",true,"^4S",["^1:",[["~$k","^53"],["~$k"]]],"^5X","Create a node representing a keyword `k`. \n\n   Optionally include `auto-resolved?`, which defaults to `false`.\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n]) \n\n   ;; unqualified keyword\n   (-> (n/keyword-node :kw)\n       n/string)\n   ;; => \":kw\"\n\n   ;; qualified keyword\n   (-> (n/keyword-node :my-prefix/kw)\n       n/string)\n   ;; => \":my-prefix/kw\"\n\n   ;; keyword auto-resolved to current ns\n   (-> (n/keyword-node :kw true)\n       n/string)\n   ;; => \"::kw\"\n\n   ;; keyword auto-resolved to a namespace with given alias\n   (-> (n/keyword-node :ns-alias/kw true)\n       n/string)\n   ;; => \"::ns-alias/kw\"\n   ```"]],"^18",["^ ","^13","^13"],"~:cljs.analyzer/constants",["^ ","^15",["^U",["~:auto-resolved?","~:map-qualifier","^53","~:k","^4U","~:prefix","~:token","~:keyword","~:current","~$k","~:auto-resolve"]],"~:order",["^69","^67","^6=","^6<","^68","~:k","^6:","^6;","~$k","^53","^4U"]],"^1=",["^ ","^16",["^U",[]]],"^1>",["^ "],"^1?",["^14","^13","^11"]],"^Z","^W","~:ns-specs",["^ "],"~:ns-spec-vars",["^U",[]],"~:compiler-options",["^2U",[["^6A","~:static-fns"],true,["^6A","~:shadow-tweaks"],null,["^6A","~:source-map-inline"],null,["^6A","~:elide-asserts"],false,["^6A","~:optimize-constants"],null,["^6A","^1D"],null,["^6A","~:external-config"],null,["^6A","~:tooling-config"],null,["^6A","~:emit-constants"],null,["^6A","~:load-tests"],null,["^6A","~:form-size-threshold"],null,["^6A","~:global-goog-object&array"],null,["^6A","~:data-readers"],null,["^6A","~:infer-externs"],"~:auto",["^6A","^1F"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6A","~:fn-invoke-direct"],null,["^6A","~:source-map"],"/dev/null"]]]