["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.node.meta');\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {rewrite_clj.node.protocols.InnerNode}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {rewrite_clj.node.protocols.Node}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\nrewrite_clj.node.meta.MetaNode = (function (tag,prefix,children,__meta,__extmap,__hash){\nthis.tag = tag;\nthis.prefix = prefix;\nthis.children = children;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(rewrite_clj.node.meta.MetaNode.prototype.toString = (function (){\nvar self__ = this;\nvar node = this;\nreturn node.rewrite_clj$node$protocols$Node$string$arity$1(null);\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__5343__auto__,k__5344__auto__){\nvar self__ = this;\nvar this__5343__auto____$1 = this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__5345__auto__,k32084,else__5346__auto__){\nvar self__ = this;\nvar this__5345__auto____$1 = this;\nvar G__32109 = k32084;\nvar G__32109__$1 = (((G__32109 instanceof cljs.core.Keyword))?G__32109.fqn:null);\nswitch (G__32109__$1) {\ncase \"tag\":\nreturn self__.tag;\n\nbreak;\ncase \"prefix\":\nreturn self__.prefix;\n\nbreak;\ncase \"children\":\nreturn self__.children;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k32084,else__5346__auto__);\n\n}\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ = this;\nvar this__5363__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__32110){\nvar vec__32111 = p__32110;\nvar k__5367__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32111,(0),null);\nvar v__5368__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32111,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ = this;\nvar this__5358__auto____$1 = this;\nvar pr_pair__5361__auto__ = (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\"#rewrite-clj.node.meta.MetaNode{\",\", \",\"}\",opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),self__.tag],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),self__.prefix],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"children\",\"children\",-940561982),self__.children],null))], null),self__.__extmap));\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__32083){\nvar self__ = this;\nvar G__32083__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__32083__$1,3,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__5341__auto__){\nvar self__ = this;\nvar this__5341__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__5338__auto__){\nvar self__ = this;\nvar this__5338__auto____$1 = this;\nreturn (new rewrite_clj.node.meta.MetaNode(self__.tag,self__.prefix,self__.children,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__5347__auto__){\nvar self__ = this;\nvar this__5347__auto____$1 = this;\nreturn (3 + cljs.core.count(self__.__extmap));\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__5339__auto__){\nvar self__ = this;\nvar this__5339__auto____$1 = this;\nvar h__5154__auto__ = self__.__hash;\nif((!((h__5154__auto__ == null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 = (function (coll__5340__auto__){\nreturn (1501447658 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash = h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this32085,other32086){\nvar self__ = this;\nvar this32085__$1 = this;\nreturn (((!((other32086 == null)))) && ((((this32085__$1.constructor === other32086.constructor)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this32085__$1.tag,other32086.tag)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this32085__$1.prefix,other32086.prefix)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this32085__$1.children,other32086.children)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this32085__$1.__extmap,other32086.__extmap)))))))))));\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn self__.tag;\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$node_type$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964);\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn false;\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$sexpr_STAR_$arity$2 = (function (_node,opts){\nvar self__ = this;\nvar _node__$1 = this;\nvar vec__32120 = rewrite_clj.node.protocols.sexprs.cljs$core$IFn$_invoke$arity$2(self__.children,opts);\nvar mta = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32120,(0),null);\nvar data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32120,(1),null);\nif(rewrite_clj.interop.meta_available_QMARK_(data)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"cannot attach metadata to: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([data], 0))].join(''),\"\\n\",\"(interop/meta-available? data)\"].join('')));\n}\n\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(data,cljs.core.merge,((cljs.core.map_QMARK_(mta))?mta:cljs.core.PersistentArrayMap.createAsIfByAssoc([mta,true])));\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn (cljs.core.count(self__.prefix) + rewrite_clj.node.protocols.sum_lengths(self__.children));\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.prefix),cljs.core.str.cljs$core$IFn$_invoke$arity$1(rewrite_clj.node.protocols.concat_strings(self__.children))].join('');\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__5353__auto__,k__5354__auto__){\nvar self__ = this;\nvar this__5353__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),null,new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),null,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new rewrite_clj.node.meta.MetaNode(self__.tag,self__.prefix,self__.children,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$InnerNode$ = cljs.core.PROTOCOL_SENTINEL);\n\n(rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn true;\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn self__.children;\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = (function (this$,children_SINGLEQUOTE_){\nvar self__ = this;\nvar this$__$1 = this;\nrewrite_clj.node.protocols.assert_sexpr_count(children_SINGLEQUOTE_,(2));\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this$__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children_SINGLEQUOTE_);\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$InnerNode$leader_length$arity$1 = (function (_node){\nvar self__ = this;\nvar _node__$1 = this;\nreturn cljs.core.count(self__.prefix);\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (this__5350__auto__,k32084){\nvar self__ = this;\nvar this__5350__auto____$1 = this;\nvar G__32125 = k32084;\nvar G__32125__$1 = (((G__32125 instanceof cljs.core.Keyword))?G__32125.fqn:null);\nswitch (G__32125__$1) {\ncase \"tag\":\ncase \"prefix\":\ncase \"children\":\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k32084);\n\n}\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__5351__auto__,k__5352__auto__,G__32083){\nvar self__ = this;\nvar this__5351__auto____$1 = this;\nvar pred__32126 = cljs.core.keyword_identical_QMARK_;\nvar expr__32127 = k__5352__auto__;\nif(cljs.core.truth_((pred__32126.cljs$core$IFn$_invoke$arity$2 ? pred__32126.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),expr__32127) : pred__32126.call(null,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),expr__32127)))){\nreturn (new rewrite_clj.node.meta.MetaNode(G__32083,self__.prefix,self__.children,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__32126.cljs$core$IFn$_invoke$arity$2 ? pred__32126.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),expr__32127) : pred__32126.call(null,new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),expr__32127)))){\nreturn (new rewrite_clj.node.meta.MetaNode(self__.tag,G__32083,self__.children,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__32126.cljs$core$IFn$_invoke$arity$2 ? pred__32126.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),expr__32127) : pred__32126.call(null,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),expr__32127)))){\nreturn (new rewrite_clj.node.meta.MetaNode(self__.tag,self__.prefix,G__32083,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new rewrite_clj.node.meta.MetaNode(self__.tag,self__.prefix,self__.children,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__32083),null));\n}\n}\n}\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__5356__auto__){\nvar self__ = this;\nvar this__5356__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),self__.tag,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),self__.prefix,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),self__.children,null))], null),self__.__extmap));\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__5342__auto__,G__32083){\nvar self__ = this;\nvar this__5342__auto____$1 = this;\nreturn (new rewrite_clj.node.meta.MetaNode(self__.tag,self__.prefix,self__.children,G__32083,self__.__extmap,self__.__hash));\n}));\n\n(rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__5348__auto__,entry__5349__auto__){\nvar self__ = this;\nvar this__5348__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(rewrite_clj.node.meta.MetaNode.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"prefix\",\"prefix\",1374623062,null),new cljs.core.Symbol(null,\"children\",\"children\",699969545,null)], null);\n}));\n\n(rewrite_clj.node.meta.MetaNode.cljs$lang$type = true);\n\n(rewrite_clj.node.meta.MetaNode.cljs$lang$ctorPrSeq = (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\"rewrite-clj.node.meta/MetaNode\",null,(1),null));\n}));\n\n(rewrite_clj.node.meta.MetaNode.cljs$lang$ctorPrWriter = (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\"rewrite-clj.node.meta/MetaNode\");\n}));\n\n/**\n * Positional factory function for rewrite-clj.node.meta/MetaNode.\n */\nrewrite_clj.node.meta.__GT_MetaNode = (function rewrite_clj$node$meta$__GT_MetaNode(tag,prefix,children){\nreturn (new rewrite_clj.node.meta.MetaNode(tag,prefix,children,null,null,null));\n});\n\n/**\n * Factory function for rewrite-clj.node.meta/MetaNode, taking a map of keywords to field values.\n */\nrewrite_clj.node.meta.map__GT_MetaNode = (function rewrite_clj$node$meta$map__GT_MetaNode(G__32097){\nvar extmap__5385__auto__ = (function (){var G__32132 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__32097,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], 0));\nif(cljs.core.record_QMARK_(G__32097)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__32132);\n} else {\nreturn G__32132;\n}\n})();\nreturn (new rewrite_clj.node.meta.MetaNode(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(G__32097),new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(G__32097),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(G__32097),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\nrewrite_clj.node.protocols.make_printable_BANG_(rewrite_clj.node.meta.MetaNode);\n/**\n * Create a node representing a form with metadata.\n * \n * When creating manually, you can specify `metadata` and `data` and spacing between the 2 elems will be included: \n * \n * ```Clojure\n * (require '[rewrite-clj.node :as n]) \n * \n * (-> (n/meta-node (n/keyword-node :foo)\n *                  (n/vector-node [(n/token-node 1)]))\n *     n/string)\n * ;; => \"^:foo [1]\"\n * \n * (-> (n/meta-node (n/map-node [:foo (n/spaces 1) 42])\n *                  (n/vector-node [(n/token-node 1)]))\n *     n/string)\n * ;; => \"^{:foo 42} [1]\"\n * ```\n * When specifying a sequence of `children`, spacing is explicit:\n * \n * ```Clojure\n * (-> (n/meta-node [(n/keyword-node :foo)\n *                   (n/spaces 1)\n *                   (n/vector-node [(n/token-node 1)])])\n *     n/string)\n * ;; => \"^:foo [1]\"\n * ```\n * See also: [[raw-meta-node]]\n */\nrewrite_clj.node.meta.meta_node = (function rewrite_clj$node$meta$meta_node(var_args){\nvar G__32135 = arguments.length;\nswitch (G__32135) {\ncase 1:\nreturn rewrite_clj.node.meta.meta_node.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.node.meta.meta_node.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.node.meta.meta_node.cljs$core$IFn$_invoke$arity$1 = (function (children){\nrewrite_clj.node.protocols.assert_sexpr_count(children,(2));\n\nreturn rewrite_clj.node.meta.__GT_MetaNode(new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),\"^\",children);\n}));\n\n(rewrite_clj.node.meta.meta_node.cljs$core$IFn$_invoke$arity$2 = (function (metadata,data){\nreturn rewrite_clj.node.meta.meta_node.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [metadata,rewrite_clj.node.whitespace.spaces((1)),data], null));\n}));\n\n(rewrite_clj.node.meta.meta_node.cljs$lang$maxFixedArity = 2);\n\n/**\n * Create a node representing a form with metadata that renders to the reader syntax.\n * \n * When creating manually, you can specify `metadata` and `data` and spacing between the 2 elems will be included: \n * \n * ```Clojure\n * (require '[rewrite-clj.node :as n]) \n * \n * (-> (n/raw-meta-node (n/keyword-node :foo)\n *                      (n/vector-node [(n/token-node 2)]))\n *      n/string)\n * ;; => \"#^:foo [2]\"\n * \n * (-> (n/raw-meta-node (n/map-node [:foo (n/spaces 1) 42])\n *                      (n/vector-node [(n/token-node 2)]))\n *     n/string)\n * ;; => \"#^{:foo 42} [2]\"\n * ``` \n * When specifying a sequence of `children`, spacing is explicit:\n * \n * ```Clojure\n * (require '[rewrite-clj.node :as n]) \n * \n * (-> (n/raw-meta-node [(n/keyword-node :foo)\n *                       (n/spaces 1)\n *                       (n/vector-node [(n/token-node 2)])])\n *     n/string)\n * ;; => \"#^:foo [2]\"\n * ```\n * See also: [[meta-node]]\n */\nrewrite_clj.node.meta.raw_meta_node = (function rewrite_clj$node$meta$raw_meta_node(var_args){\nvar G__32146 = arguments.length;\nswitch (G__32146) {\ncase 1:\nreturn rewrite_clj.node.meta.raw_meta_node.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.node.meta.raw_meta_node.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.node.meta.raw_meta_node.cljs$core$IFn$_invoke$arity$1 = (function (children){\nrewrite_clj.node.protocols.assert_sexpr_count(children,(2));\n\nreturn rewrite_clj.node.meta.__GT_MetaNode(new cljs.core.Keyword(null,\"meta*\",\"meta*\",-949431606),\"#^\",children);\n}));\n\n(rewrite_clj.node.meta.raw_meta_node.cljs$core$IFn$_invoke$arity$2 = (function (metadata,data){\nreturn rewrite_clj.node.meta.raw_meta_node.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [metadata,rewrite_clj.node.whitespace.spaces((1)),data], null));\n}));\n\n(rewrite_clj.node.meta.raw_meta_node.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/node/meta.cljc","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",35,"~:no-doc",true],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.tools.reader.impl.utils","~$cljs.tools.reader.impl.utils","~$cljs.loader","~$shadow.loader","~$clojure.tools.reader.impl.commons","~$cljs.tools.reader.impl.commons","~$clojure.tools.reader.impl.errors","~$cljs.tools.reader.impl.errors","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.tools.reader.edn","~$cljs.tools.reader.edn","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.node.meta","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.interop","^11","~$interop","^11","~$rewrite-clj.node.protocols","^13","~$node","^13","~$rewrite-clj.node.whitespace","^15","~$ws","^15","~$cljs.core","^17","~$goog","^18"],"~:seen",["^U",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^17","^17","^15","^15","^16","^15"],"~:form",["~#list",["~$ns","^W",["^1>",["^1:",["^11","~:as","^12"],["^13","^1@","^14"],["^15","^1@","^16"]]]]],"~:flags",["^ ","^1:",["^U",[]]],"~:js-deps",["^ "],"~:deps",["^18","^17","^11","^13","^15"]],"^Z","^W","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/node/meta.cljc"],"~:compiled-at",1666857663735,"^X",["^ ","^11","^11","^12","^11","^13","^13","^14","^13","^15","^15","^16","^15","^17","^17","^18","^18"],"~:resource-name","rewrite_clj/node/meta.cljc","~:warnings",[],"~:source","(ns ^:no-doc rewrite-clj.node.meta\n  (:require [rewrite-clj.interop :as interop]\n            [rewrite-clj.node.protocols :as node]\n            [rewrite-clj.node.whitespace :as ws]))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n;; ## Node\n\n(defrecord MetaNode [tag prefix children]\n  node/Node\n  (tag [_node] tag)\n  (node-type [_node] :meta)\n  (printable-only? [_node] false)\n  (sexpr* [_node opts]\n    (let [[mta data] (node/sexprs children opts)]\n      (assert (interop/meta-available? data)\n              (str \"cannot attach metadata to: \" (pr-str data)))\n      (vary-meta data merge (if (map? mta) mta {mta true}))))\n  (length [_node]\n    (+ (count prefix) (node/sum-lengths children)))\n  (string [_node]\n    (str prefix (node/concat-strings children)))\n\n  node/InnerNode\n  (inner? [_node] true)\n  (children [_node] children)\n  (replace-children [this children']\n    (node/assert-sexpr-count children' 2)\n    (assoc this :children children'))\n  (leader-length [_node]\n    (count prefix))\n\n  Object\n  (toString [node]\n    (node/string node)))\n\n(node/make-printable! MetaNode)\n\n;; ## Constructor\n\n(defn meta-node\n  \"Create a node representing a form with metadata.\n\n   When creating manually, you can specify `metadata` and `data` and spacing between the 2 elems will be included: \n\n   ```Clojure\n   (require '[rewrite-clj.node :as n]) \n\n   (-> (n/meta-node (n/keyword-node :foo)\n                    (n/vector-node [(n/token-node 1)]))\n       n/string)\n   ;; => \\\"^:foo [1]\\\"\n\n   (-> (n/meta-node (n/map-node [:foo (n/spaces 1) 42])\n                    (n/vector-node [(n/token-node 1)]))\n       n/string)\n   ;; => \\\"^{:foo 42} [1]\\\"\n   ```\n   When specifying a sequence of `children`, spacing is explicit:\n\n   ```Clojure\n   (-> (n/meta-node [(n/keyword-node :foo)\n                     (n/spaces 1)\n                     (n/vector-node [(n/token-node 1)])])\n       n/string)\n   ;; => \\\"^:foo [1]\\\"\n   ```\n   See also: [[raw-meta-node]]\"\n  ([children]\n   (node/assert-sexpr-count children 2)\n   (->MetaNode :meta \"^\" children))\n  ([metadata data]\n   (meta-node [metadata (ws/spaces 1) data])))\n\n(defn raw-meta-node\n  \"Create a node representing a form with metadata that renders to the reader syntax.\n   \n   When creating manually, you can specify `metadata` and `data` and spacing between the 2 elems will be included: \n\n   ```Clojure\n   (require '[rewrite-clj.node :as n]) \n\n   (-> (n/raw-meta-node (n/keyword-node :foo)\n                        (n/vector-node [(n/token-node 2)]))\n        n/string)\n   ;; => \\\"#^:foo [2]\\\"\n   \n   (-> (n/raw-meta-node (n/map-node [:foo (n/spaces 1) 42])\n                        (n/vector-node [(n/token-node 2)]))\n       n/string)\n   ;; => \\\"#^{:foo 42} [2]\\\"\n   ``` \n   When specifying a sequence of `children`, spacing is explicit:\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n]) \n   \n   (-> (n/raw-meta-node [(n/keyword-node :foo)\n                         (n/spaces 1)\n                         (n/vector-node [(n/token-node 2)])])\n       n/string)\n   ;; => \\\"#^:foo [2]\\\"\n   ```\n   See also: [[meta-node]]\"\n  ([children]\n   (node/assert-sexpr-count children 2)\n   (->MetaNode :meta* \"#^\" children))\n  ([metadata data]\n   (raw-meta-node [metadata (ws/spaces 1) data])))\n","~:reader-features",["^U",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AASA,AAAA,AAAA,AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,oDAAA,pDAAWwE;;AAAX,AAAA,WAAA,PAyBa4B;AAzBb,AA0BI,OAAaA;;;AA1BjB,CAAA,AAAA,6EAAA,WAAApG,mBAAAC,3GAAWuE;;AAAX,AAAA,IAAAxE,yBAAA;AAAA,AAAA,OAAAA,8DAAAC,gBAAA;;;AAAA,CAAA,AAAA,6EAAA,WAAAC,mBAAAC,OAAAC,lHAAWoE;;AAAX,AAAA,IAAAtE,yBAAA;AAAA,AAAA,IAAAG,WAAAF;IAAAE,eAAA,EAAA,CAAAA,oBAAAC,oBAAA,AAAAD,aAAA;AAAA,AAAA,QAAAA;KAAA;AAAAE;;;KAAA;AAAAC;;;KAAA;AAAAC;;;;AAAA,OAAAC,4CAAAC,gBAAAR,OAAAC;;;;;AAAA,CAAA,AAAA,kFAAA,WAAAQ,mBAAAC,gBAAAC,hIAAW0D;;AAAX,AAAA,IAAA5D,yBAAA;AAAA,AAAA,OAAAG,+CAAA,WAAAC,kBAAAC;AAAA,AAAA,IAAAC,aAAAD;IAAAE,kBAAA,AAAAC,4CAAAF,WAAA,IAAA;IAAAG,kBAAA,AAAAD,4CAAAF,WAAA,IAAA;AAAA,AAAA,QAAAL,gDAAAA,8CAAAG,kBAAAG,gBAAAE,mBAAAR,0BAAAG,kBAAAG,gBAAAE;GAAAP,mBAAAF;;;AAAA,CAAA,AAAA,yFAAA,WAAAU,mBAAAC,qBAAAC,5IAAWgD;;AAAX,AAAA,IAAAlD,yBAAA;AAAA,AAAA,IAAAG,wBAAA,WAAAC;AAAA,AAAA,OAAAC,+BAAAJ,qBAAA,oBAAA,GAAA,IAAA,GAAAC,mBAAAE;;AAAA,AAAA,OAAAC,+BAAAJ,qBAAAE,sBAAA,mCAAA,KAAA,IAAAD,mBAAA,AAAAI,+CAAA,mFAAA,KAAAC,2BAAA,KAAA,EAAA,IAAA,AAAAA,sCAAA,CAAA,oDAAAtB,YAAA,OAAA,KAAAsB,2BAAA,KAAA,EAAA,IAAA,AAAAA,sCAAA,CAAA,yDAAArB,eAAA,OAAA,KAAAqB,2BAAA,KAAA,EAAA,IAAA,AAAAA,sCAAA,CAAA,6DAAApB,iBAAA,eAAAE;;;AAAA,CAAA,AAAA,iFAAA,WAAAmB,5FAAW0C;;AAAX,AAAA,IAAA1C,eAAA;AAAA,AAAA,YAAAC,qBAAA,IAAAD,aAAA,EAAA,mFAAA,oDAAA,yDAAA,qEAAA,kBAAAnB,iBAAA,AAAAqB,oBAAArB,iBAAA,AAAAsB;;;AAAA,CAAA,AAAA,yEAAA,WAAAC,pFAAWsC;;AAAX,AAAA,IAAAtC,yBAAA;AAAA,AAAAC;;;AAAA,CAAA,AAAA,+EAAA,WAAAC,1FAAWoC;;AAAX,AAAA,IAAApC,yBAAA;AAAA,AAAA,2CAAA7B,WAAAC,cAAAC,gBAAA0B,cAAAxB,gBAAA0B,tGAAWmC;;;AAAX,CAAA,AAAA,6EAAA,WAAAlC,xFAAWkC;;AAAX,AAAA,IAAAlC,yBAAA;AAAA,AAAA,QAAA,IAAA,AAAAC,gBAAA5B;;;AAAA,CAAA,AAAA,yEAAA,WAAA6B,pFAAWgC;;AAAX,AAAA,IAAAhC,yBAAA;AAAA,AAAA,IAAAC,kBAAAJ;AAAA,AAAA,GAAA,GAAA,CAAAI,mBAAA;AAAAA;;AAAA,IAAAA,sBAAA,AAAA,WAAAC;AAAA,AAAA,QAAA,aAAA,AAAAC,8BAAAD;GAAAF;AAAA,AAAA,CAAAH,gBAAAI;;AAAAA;;;;AAAA,CAAA,AAAA,2EAAA,WAAAG,UAAAC,hGAAW2B;;AAAX,AAAA,IAAA5B,gBAAA;AAAA,AAAA,SAAA,GAAA,CAAAC,cAAA,aAAA,EAAA,CAAA,AAAAD,8BAAA,AAAAC,6BAAA,EAAA,AAAAC,6CAAA,AAAAF,kBAAA,AAAAC,qBAAA,EAAA,AAAAC,6CAAA,AAAAF,qBAAA,AAAAC,wBAAA,EAAA,AAAAC,6CAAA,AAAAF,uBAAA,AAAAC,0BAAA,AAAAC,6CAAA,AAAAF,uBAAA,AAAAC;;;AAAA,CAAA,AAAA,4EAAAE,5EAAWyB;;AAAX,CAAA,AAAA,uFAAA,vFAAWA,kGAEHW;;AAFR,AAAA,gBAAA,ZAEQA;AAFR,AAEe5E;;;AAFf,CAAA,AAAA,6FAAA,7FAAWiE,wGAGGW;;AAHd,AAAA,gBAAA,ZAGcA;AAHd,AAAA;;;AAAA,CAAA,AAAA,yGAAA,zGAAWX,oHAISW;;AAJpB,AAAA,gBAAA,ZAIoBA;AAJpB,AAAA;;;AAAA,CAAA,AAAA,+FAAA,/FAAWX,0GAKAW,MAAMC;;AALjB,AAAA,gBAAA,ZAKWD;AALX,AAMI,IAAAE,aAAiB,AAACG,gEAAY/E,gBAAS2E;UAAvC,AAAAhE,4CAAAiE,WAAA,IAAA,jEAAOC;WAAP,AAAAlE,4CAAAiE,WAAA,IAAA,lEAAWE;AAAX,AACE,GAAQ,AAACG,0CAAwBH;AAAjC;AAAA,AAAA,MAAA,KAAAE,MAAA,CAAA,8KAAA,KAAA,jKACQ,CAAA,8BAAmC,AAACE,wGAAOJ;;;AACnD,OAACK,kDAAUL,KAAKM,gBAAM,iCAAA,oDAAA,nFAAI,AAACC,qBAAKR,MAAKA,oDAAKA;;;AAThD,CAAA,AAAA,0FAAA,1FAAWd,qGAUAW;;AAVX,AAAA,gBAAA,ZAUWA;AAVX,AAWI,QAAG,AAAC5C,gBAAM/B,iBAAQ,AAACuF,uCAAiBtF;;;AAXxC,CAAA,AAAA,0FAAA,1FAAW+D,qGAYAW;;AAZX,AAAA,gBAAA,ZAYWA;AAZX,AAaI,oDAAK3E,2DAAO,AAACwF,0CAAoBvF;;;AAbrC,CAAA,AAAA,0EAAA,WAAAuC,mBAAAC,xGAAWuB;;AAAX,AAAA,IAAAxB,yBAAA;AAAA,AAAA,GAAA,AAAAE,0BAAA,iFAAA,kEAAA,8DAAA,wEAAAD;AAAA,OAAAE,+CAAA,AAAAC,qBAAA,AAAAC,6CAAA,mCAAAL,wBAAAb,eAAAc;;AAAA,2CAAA1C,WAAAC,cAAAC,gBAAA0B,cAAA,AAAAmB,oBAAA,AAAAH,+CAAAxC,gBAAAsC,kBAAA,3LAAWuB;;;;AAAX,CAAA,AAAA,iFAAAzB,jFAAWyB;;AAAX,CAAA,AAAA,qGAAA,rGAAWA,gHAgBAW;;AAhBX,AAAA,gBAAA,ZAgBWA;AAhBX,AAAA;;;AAAA,CAAA,AAAA,iGAAA,jGAAWX,4GAiBEW;;AAjBb,AAAA,gBAAA,ZAiBaA;AAjBb,AAiBoB1E;;;AAjBpB,CAAA,AAAA,yGAAA,zGAAW+D,oHAkBUyB,MAAKC;;AAlB1B,AAAA,gBAAA,ZAkBqBD;AAlBrB,AAmBI,oEAAA,pEAACE,8CAAwBD;;AACzB,+DAAA,xDAACpC,8CAAMmC,uEAAeC;;;AApB1B,CAAA,AAAA,sGAAA,tGAAW1B,iHAqBOW;;AArBlB,AAAA,gBAAA,ZAqBkBA;AArBlB,AAsBI,OAAC5C,gBAAM/B;;;AAtBX,CAAA,AAAA,+FAAA,WAAA+C,mBAAApD,7HAAWqE;;AAAX,AAAA,IAAAjB,yBAAA;AAAA,AAAA,IAAAC,WAAArD;IAAAqD,eAAA,EAAA,CAAAA,oBAAAlD,oBAAA,AAAAkD,aAAA;AAAA,AAAA,QAAAA;KAAA;KAAA;KAAA;AAAA;;;;AAAA,OAAAN,0BAAAvC,gBAAAR;;;;;AAAA,CAAA,AAAA,iFAAA,WAAAsD,mBAAAC,gBAAA5B,/HAAW0C;;AAAX,AAAA,IAAAf,yBAAA;AAAA,AAAA,IAAAE,cAAAC;IAAAC,cAAAH;AAAA,AAAA,oBAAA,CAAAC,4CAAAA,0CAAA,oDAAAE,eAAAF,sBAAA,oDAAAE;AAAA,2CAAA/B,SAAAtB,cAAAC,gBAAA0B,cAAAxB,gBAAA,pGAAW6D;;AAAX,oBAAA,CAAAb,4CAAAA,0CAAA,yDAAAE,eAAAF,sBAAA,yDAAAE;AAAA,2CAAAtD,WAAAuB,SAAArB,gBAAA0B,cAAAxB,gBAAA,jGAAW6D;;AAAX,oBAAA,CAAAb,4CAAAA,0CAAA,6DAAAE,eAAAF,sBAAA,6DAAAE;AAAA,2CAAAtD,WAAAC,cAAAsB,SAAAK,cAAAxB,gBAAA,/FAAW6D;;AAAX,2CAAAjE,WAAAC,cAAAC,gBAAA0B,cAAA,AAAA2B,8CAAAnD,gBAAA+C,gBAAA5B,UAAA,9KAAW0C;;;;;;AAAX,CAAA,AAAA,2EAAA,WAAAT,tFAAWS;;AAAX,AAAA,IAAAT,yBAAA;AAAA,AAAA,OAAAC,cAAA,AAAApC,+CAAA,mFAAA,KAAAqC,mBAAA,oDAAA1D,WAAA,OAAA,KAAA0D,mBAAA,yDAAAzD,cAAA,OAAA,KAAAyD,mBAAA,6DAAAxD,gBAAA,eAAAE;;;AAAA,CAAA,AAAA,kFAAA,WAAAuD,mBAAApC,hHAAW0C;;AAAX,AAAA,IAAAN,yBAAA;AAAA,AAAA,2CAAA3D,WAAAC,cAAAC,gBAAAqB,SAAAnB,gBAAA0B,jGAAWmC;;;AAAX,CAAA,AAAA,+EAAA,WAAAL,mBAAAC,7GAAWI;;AAAX,AAAA,IAAAL,yBAAA;AAAA,AAAA,GAAA,AAAAE,wBAAAD;AAAA,OAAAD,kEAAA,AAAAG,eAAAF,oBAAA,KAAA,AAAAE,eAAAF,oBAAA;;AAAA,OAAArD,+CAAAwD,gBAAAJ,uBAAAC;;;;AAAA,CAAA,AAAAI,0CAAA;AAAA,AAAA,AAAA;;;AAAA,CAAA,AAAAA,gDAAA;;AAAA,CAAA,AAAAA,qDAAA,WAAAC;AAAA,AAAA,YAAAC,eAAA,KAAA,iCAAA,KAAA,IAAA;;;AAAA,CAAA,AAAAF,wDAAA,WAAAC,mBAAAE;AAAA,AAAA,OAAAC,iBAAAD,qBAAA;;;AAAA;;;sCAAA,tCAAWM,oFAAU1E,IAAIC,OAAOC;AAAhC,AAAA,YAAA+D,mDAAA,KAAA,KAAA,9BAAqBjE,IAAIC,OAAOC;;;AAAhC;;;yCAAA,iDAAAoE,1FAAWK;AAAX,AAAA,IAAAJ,uBAAA,iBAAAC,WAAA,AAAA5B,sDAAA0B,SAAA,sGAAA,yDAAA;AAAA,AAAA,GAAA,AAAAG,wBAAAH;AAAA,OAAAxB,6CAAA,mCAAA0B;;AAAAA;;;AAAA,AAAA,YAAAP,+BAAA,AAAA,kFAAAK,UAAA,AAAA,uFAAAA,UAAA,AAAA,2FAAAA,UAAA,KAAA,AAAAvB,oBAAAwB,sBAAA;;;AAAAN,AA4BA,AAAC6B,gDAAqB7B;AAItB,AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAA,0CAAA8B,5EAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,8DAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,8DAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAf,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,gEAAA,hEAAMe,2EA4BF/F;AA5BJ,AA6BG,uDAAA,vDAAC0F,8CAAwB1F;;AACzB,2CAAA,qDAAA,zFAACwE,6FAAqBxE;;;AA9BzB,CAAA,gEAAA,hEAAM+F,2EA+BFC,SAASlB;AA/Bb,AAgCG,qEAAA,9DAACmB,iJAAWD,SAAS,mCAAA,nCAACE,wCAAapB;;;AAhCtC,CAAA,0DAAA,1DAAMiB;;AAAN,AAkCA,AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAAA,8CAAAF,pFAAMO;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,kEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,kEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAApB,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,oEAAA,pEAAMoB,+EA8BFpG;AA9BJ,AA+BG,uDAAA,vDAAC0F,8CAAwB1F;;AACzB,2CAAA,uDAAA,3FAACwE,gGAAuBxE;;;AAhC3B,CAAA,oEAAA,pEAAMoG,+EAiCFJ,SAASlB;AAjCb,AAkCG,yEAAA,lEAACuB,qJAAeL,SAAS,mCAAA,nCAACE,wCAAapB;;;AAlC1C,CAAA,8DAAA,9DAAMsB;;AAAN","names",["this__5343__auto__","k__5344__auto__","this__5345__auto__","k32084","else__5346__auto__","G__32109","cljs.core/Keyword","tag","prefix","children","cljs.core.get","__extmap","this__5363__auto__","f__5364__auto__","init__5365__auto__","cljs.core.reduce","ret__5366__auto__","p__32110","vec__32111","k__5367__auto__","cljs.core.nth","v__5368__auto__","this__5358__auto__","writer__5359__auto__","opts__5360__auto__","pr-pair__5361__auto__","keyval__5362__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__32083","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__5341__auto__","__meta","this__5338__auto__","__hash","this__5347__auto__","cljs.core/count","this__5339__auto__","h__5154__auto__","coll__5340__auto__","cljs.core/hash-unordered-coll","this32085","other32086","cljs.core._EQ_","cljs.core/PROTOCOL_SENTINEL","this__5353__auto__","k__5354__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__5350__auto__","G__32125","this__5351__auto__","k__5352__auto__","pred__32126","cljs.core/keyword-identical?","expr__32127","cljs.core.assoc","this__5356__auto__","cljs.core/seq","cljs.core/MapEntry","this__5342__auto__","this__5348__auto__","entry__5349__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","rewrite-clj.node.meta/MetaNode","this__5389__auto__","cljs.core/List","writer__5390__auto__","cljs.core/-write","G__32097","extmap__5385__auto__","G__32132","cljs.core/record?","rewrite-clj.node.meta/->MetaNode","rewrite-clj.node.meta/map->MetaNode","_node","opts","vec__32120","mta","data","rewrite_clj.node.protocols.sexprs","js/Error","rewrite-clj.interop/meta-available?","cljs.core.pr_str","cljs.core.vary_meta","cljs.core/merge","cljs.core/map?","rewrite-clj.node.protocols/sum-lengths","rewrite-clj.node.protocols/concat-strings","this","children'","rewrite-clj.node.protocols/assert-sexpr-count","node","rewrite-clj.node.protocols/make-printable!","var_args","G__32135","rewrite-clj.node.meta/meta-node","metadata","rewrite_clj.node.meta.meta_node","rewrite-clj.node.whitespace/spaces","G__32146","rewrite-clj.node.meta/raw-meta-node","rewrite_clj.node.meta.raw_meta_node"]],"~:used-vars",["^U",["~$cljs.core/PROTOCOL_SENTINEL","~$rewrite-clj.node.whitespace/spaces","~$rewrite-clj.node.protocols/make-printable!","~$cljs.core/pr-sequential-writer","~$cljs.core/vector?","~$cljs.core/=","~$cljs.core/-assoc","~$cljs.core/-write","~$rewrite-clj.interop/meta-available?","~$cljs.core/-iterator","~$cljs.core/count","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/Keyword","~$rewrite-clj.node.protocols/assert-sexpr-count","~$rewrite-clj.node.protocols/concat-strings","~$cljs.core/MapEntry","~$cljs.core/dissoc","~$cljs.core/keyword-identical?","~$cljs.core/-with-meta","~$cljs.core/concat","~$rewrite-clj.node.protocols/sexprs","~$cljs.core/pr-str","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/map?","~$cljs.core/vary-meta","~$cljs.core/-conj","~$rewrite-clj.node.meta/meta-node","~$cljs.core/PersistentVector","~$cljs.core/List","~$cljs.core/get","~$rewrite-clj.node.meta/->MetaNode","~$cljs.core/-nth","~$cljs.core/not-empty","~$cljs.core/record?","~$cljs.core/-lookup","~$cljs.core/nth","~$cljs.core/nil-iter","~$rewrite-clj.node.meta/map->MetaNode","~$cljs.core/RecordIter","~$rewrite-clj.node.meta/MetaNode","~$rewrite-clj.node.protocols/string","~$cljs.core/not","~$cljs.core/assoc","~$rewrite-clj.node.protocols/sum-lengths","~$cljs.core/hash-unordered-coll","~$cljs.core/merge","~$js/Error","~$rewrite-clj.node.meta/raw-meta-node"]]],"~:cache-keys",["~#cmap",[["^1E","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^U",[]],"~:deps-syms",["^18","~$goog.dom.HtmlElement"]]],["^1E","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^17","~$clojure.string","~$goog.string"]]],["^1E","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18"]]],["^1E","goog/string/stringformat.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^33"]]],["^1E","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^1E","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^37"]]],["^1E","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^38"]]],["^1E","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18"]]],["^1E","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^17","^F","^J","^@","^D","~$cljs.tools.reader","^33","~$goog.string.StringBuffer"]]],["^1E","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18"]]],["^1E","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^17"]]],["^1E","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^17","^J","^@","^D","^F","^34","^33","^3@"]]],["^1E","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18"]]],["^1E","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18"]]],["^1E","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^38"]]],"~:SHADOW-TIMESTAMP",[1666857604000,1666857604000,1666857293000],["^1E","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^38","~$goog.reflect"]]],["^1E","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^38","~$goog.fs.blob","^39","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3;","^3<","^3=","^3>"]]],["^1E","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18"]]],["^1E","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18"]]],["^1E","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^3=","~$goog.html.SafeUrl","^3>","^38","^37"]]],["^1E","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^38","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^3D","~$goog.html.SafeStyle","^3F","^3:","~$goog.html.uncheckedconversions","^3=","^37"]]],["^1E","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^3=","^3;","^3<","^3D","^3J","~$goog.html.SafeStyleSheet","^3F","~$goog.dom.TagName","^3:","^3>","^38","~$goog.labs.userAgent.browser","^34","^35","^37","~$goog.dom.tags","^3E"]]],["^1E","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^35"]]],["^1E","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18"]]],["^1E","rewrite_clj/node/protocols.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^17","^32","^11"]]],["^1E","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1E","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^34","^38","~$goog.collections.maps","^33","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1E","rewrite_clj/node/meta.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^17","^11","^13","^15"]]],["^1E","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18"]]],["^1E","rewrite_clj/node/whitespace.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^17","^13","~$rewrite-clj.reader"]]],["^1E","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18"]]],["^1E","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18"]]],["^1E","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",[]]],["^1E","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^34","^35"]]],["^1E","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^17","^J","^32","~$cljs.tools.reader.impl.inspect"]]],["^1E","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^17","^33","^3@"]]],["^1E","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","~$goog.dom.safe","^3K","^3=","^37"]]],["^1E","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18"]]],["^1E","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","~$goog.labs.userAgent","^37"]]],["^1E","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18"]]],["^1E","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^17","^@","^33","^3@"]]],["^1E","rewrite_clj/reader.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^17","^L","^D","^F","^@","^J","^11","^3@"]]],["^1E","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18"]]],["^1E","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^38","^3I","^3D","^3J","^3L","^3F","^3:","^3=","^37","^3;"]]],["^1E","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^17","^F","^J","^@"]]],["^1E","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18"]]],["^1E","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","~$goog.math.Long","~$goog.math.Integer","^33","^35","^34","~$goog.Uri","^3@"]]],["^1E","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^3=","^3>","^3E","^38"]]],["^1E","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^3=","^3J","^3>","^35","^38","^37"]]],["^1E","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^3B"]]],["^1E","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^38","^33"]]],["^1E","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^38","^3>"]]],["^1E","rewrite_clj/interop.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2Y",["^ ","^2Z",null,"^2[",["^U",[]],"^30",["^18","^17","^33","~$goog.string.format"]]]]],"~:clj-info",["^ ","jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/rewrite-clj/rewrite-clj/1.0.699-alpha/rewrite-clj-1.0.699-alpha.jar!/rewrite_clj/reader.cljc",1666857316000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/edn.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/rewrite-clj/rewrite-clj/1.0.699-alpha/rewrite-clj-1.0.699-alpha.jar!/rewrite_clj/node/protocols.cljc",1666857316000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/rewrite-clj/rewrite-clj/1.0.699-alpha/rewrite-clj-1.0.699-alpha.jar!/rewrite_clj/interop.cljc",1666857316000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/utils.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/commons.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1666857314000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/rewrite-clj/rewrite-clj/1.0.699-alpha/rewrite-clj-1.0.699-alpha.jar!/rewrite_clj/node/whitespace.cljc",1666857316000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1666857280000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/node/meta.cljc","^7",1,"^8",14,"^9",1,"^:",35,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^O","^P","^Q","^R"],"^S",null,"^T",["^U",[]],"^V","^W","^X",["^ "],"^[",null,"^10",["^ ","^11","^11","^12","^11","^13","^13","^14","^13","^15","^15","^16","^15","^17","^17","^18","^18"],"^19",["^U",["^1:"]],"~:shadow/js-access-global",["^U",["Error"]],"^1;",null,"~:defs",["^ ","~$MetaNode",["^ ","~:num-fields",3,"~:protocols",["^U",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/Object","~$cljs.core/ICounted","~$rewrite-clj.node.protocols/InnerNode","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$rewrite-clj.node.protocols/Node","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^V","^2N","^6","rewrite_clj/node/meta.cljc","^:",20,"~:type",true,"^8",12,"~:internal-ctor",true,"^7",10,"~:record",true,"^9",10,"~:tag","~$function","~:skip-protocol-flag",["^U",["^57","^58","^59","^5:","^5;","^5=","^5?","^5@","^5A","^5B","^5C","^5E","^5F","^5G","^5H"]]],"~$->MetaNode",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/node/meta.cljc","^:",20,"^8",12,"^5J",true,"~:factory","~:positional","^7",10,"^9",10,"~:arglists",["^1>",["~$quote",["^1>",[["~$tag","~$prefix","~$children"]]]]],"~:doc","Positional factory function for rewrite-clj.node.meta/MetaNode."],"^V","^2E","^6","rewrite_clj/node/meta.cljc","^:",20,"~:method-params",["^1>",[["^5U","^5V","^5W"]]],"~:protocol-impl",null,"~:arglists-meta",["^1>",[null,null]],"^8",1,"^5J",true,"~:variadic?",false,"^5Q","^5R","^7",10,"~:ret-tag","^2N","^9",10,"~:max-fixed-arity",3,"~:fn-var",true,"^5S",["^1>",["^5T",["^1>",[["^5U","^5V","^5W"]]]]],"^5X","Positional factory function for rewrite-clj.node.meta/MetaNode."],"~$map->MetaNode",["^ ","^5P",null,"^5",["^ ","^6","rewrite_clj/node/meta.cljc","^:",20,"^8",12,"^5J",true,"^5Q","~:map","^7",10,"^9",10,"^5S",["^1>",["^5T",["^1>",[["~$G__32097"]]]]],"^5X","Factory function for rewrite-clj.node.meta/MetaNode, taking a map of keywords to field values."],"^V","^2L","^6","rewrite_clj/node/meta.cljc","^:",20,"^5Y",["^1>",[["^66"]]],"^5Z",null,"^5[",["^1>",[null,null]],"^8",1,"^5J",true,"^60",false,"^5Q","^65","^7",10,"^61","^2N","^9",10,"^62",1,"^63",true,"^5S",["^1>",["^5T",["^1>",[["^66"]]]]],"^5X","Factory function for rewrite-clj.node.meta/MetaNode, taking a map of keywords to field values."],"~$meta-node",["^ ","^5P",null,"^5",["^ ","^6","rewrite_clj/node/meta.cljc","^7",42,"^8",7,"^9",42,"^:",16,"^5S",["^1>",["^5T",["^1>",[["^5W"],["~$metadata","~$data"]]]]],"^5X","Create a node representing a form with metadata.\n\n   When creating manually, you can specify `metadata` and `data` and spacing between the 2 elems will be included: \n\n   ```Clojure\n   (require '[rewrite-clj.node :as n]) \n\n   (-> (n/meta-node (n/keyword-node :foo)\n                    (n/vector-node [(n/token-node 1)]))\n       n/string)\n   ;; => \"^:foo [1]\"\n\n   (-> (n/meta-node (n/map-node [:foo (n/spaces 1) 42])\n                    (n/vector-node [(n/token-node 1)]))\n       n/string)\n   ;; => \"^{:foo 42} [1]\"\n   ```\n   When specifying a sequence of `children`, spacing is explicit:\n\n   ```Clojure\n   (-> (n/meta-node [(n/keyword-node :foo)\n                     (n/spaces 1)\n                     (n/vector-node [(n/token-node 1)])])\n       n/string)\n   ;; => \"^:foo [1]\"\n   ```\n   See also: [[raw-meta-node]]","~:top-fn",["^ ","^60",false,"~:fixed-arity",2,"^62",2,"^5Y",[["^5W"],["^68","^69"]],"^5S",["^1>",[["^5W"],["^68","^69"]]],"^5[",["^1>",[null,null]]]],"^V","^2A","^6","rewrite_clj/node/meta.cljc","^:",16,"^6:",["^ ","^60",false,"^6;",2,"^62",2,"^5Y",[["^5W"],["^68","^69"]],"^5S",["^1>",[["^5W"],["^68","^69"]]],"^5[",["^1>",[null,null]]],"^5Y",[["^5W"],["^68","^69"]],"^5Z",null,"^6;",2,"^5[",["^1>",[null,null]],"^8",1,"^60",false,"~:methods",[["^ ","^6;",1,"^60",false,"^5L","^2N"],["^ ","^6;",2,"^60",false,"^5L","^2N"]],"^7",42,"^9",42,"^62",2,"^63",true,"^5S",["^1>",[["^5W"],["^68","^69"]]],"^5X","Create a node representing a form with metadata.\n\n   When creating manually, you can specify `metadata` and `data` and spacing between the 2 elems will be included: \n\n   ```Clojure\n   (require '[rewrite-clj.node :as n]) \n\n   (-> (n/meta-node (n/keyword-node :foo)\n                    (n/vector-node [(n/token-node 1)]))\n       n/string)\n   ;; => \"^:foo [1]\"\n\n   (-> (n/meta-node (n/map-node [:foo (n/spaces 1) 42])\n                    (n/vector-node [(n/token-node 1)]))\n       n/string)\n   ;; => \"^{:foo 42} [1]\"\n   ```\n   When specifying a sequence of `children`, spacing is explicit:\n\n   ```Clojure\n   (-> (n/meta-node [(n/keyword-node :foo)\n                     (n/spaces 1)\n                     (n/vector-node [(n/token-node 1)])])\n       n/string)\n   ;; => \"^:foo [1]\"\n   ```\n   See also: [[raw-meta-node]]"],"~$raw-meta-node",["^ ","^5P",null,"^5",["^ ","^6","rewrite_clj/node/meta.cljc","^7",76,"^8",7,"^9",76,"^:",20,"^5S",["^1>",["^5T",["^1>",[["^5W"],["^68","^69"]]]]],"^5X","Create a node representing a form with metadata that renders to the reader syntax.\n   \n   When creating manually, you can specify `metadata` and `data` and spacing between the 2 elems will be included: \n\n   ```Clojure\n   (require '[rewrite-clj.node :as n]) \n\n   (-> (n/raw-meta-node (n/keyword-node :foo)\n                        (n/vector-node [(n/token-node 2)]))\n        n/string)\n   ;; => \"#^:foo [2]\"\n   \n   (-> (n/raw-meta-node (n/map-node [:foo (n/spaces 1) 42])\n                        (n/vector-node [(n/token-node 2)]))\n       n/string)\n   ;; => \"#^{:foo 42} [2]\"\n   ``` \n   When specifying a sequence of `children`, spacing is explicit:\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n]) \n   \n   (-> (n/raw-meta-node [(n/keyword-node :foo)\n                         (n/spaces 1)\n                         (n/vector-node [(n/token-node 2)])])\n       n/string)\n   ;; => \"#^:foo [2]\"\n   ```\n   See also: [[meta-node]]","^6:",["^ ","^60",false,"^6;",2,"^62",2,"^5Y",[["^5W"],["^68","^69"]],"^5S",["^1>",[["^5W"],["^68","^69"]]],"^5[",["^1>",[null,null]]]],"^V","^2V","^6","rewrite_clj/node/meta.cljc","^:",20,"^6:",["^ ","^60",false,"^6;",2,"^62",2,"^5Y",[["^5W"],["^68","^69"]],"^5S",["^1>",[["^5W"],["^68","^69"]]],"^5[",["^1>",[null,null]]],"^5Y",[["^5W"],["^68","^69"]],"^5Z",null,"^6;",2,"^5[",["^1>",[null,null]],"^8",1,"^60",false,"^6<",[["^ ","^6;",1,"^60",false,"^5L","^2N"],["^ ","^6;",2,"^60",false,"^5L","^2N"]],"^7",76,"^9",76,"^62",2,"^63",true,"^5S",["^1>",[["^5W"],["^68","^69"]]],"^5X","Create a node representing a form with metadata that renders to the reader syntax.\n   \n   When creating manually, you can specify `metadata` and `data` and spacing between the 2 elems will be included: \n\n   ```Clojure\n   (require '[rewrite-clj.node :as n]) \n\n   (-> (n/raw-meta-node (n/keyword-node :foo)\n                        (n/vector-node [(n/token-node 2)]))\n        n/string)\n   ;; => \"#^:foo [2]\"\n   \n   (-> (n/raw-meta-node (n/map-node [:foo (n/spaces 1) 42])\n                        (n/vector-node [(n/token-node 2)]))\n       n/string)\n   ;; => \"#^{:foo 42} [2]\"\n   ``` \n   When specifying a sequence of `children`, spacing is explicit:\n\n   ```Clojure\n   (require '[rewrite-clj.node :as n]) \n   \n   (-> (n/raw-meta-node [(n/keyword-node :foo)\n                         (n/spaces 1)\n                         (n/vector-node [(n/token-node 2)])])\n       n/string)\n   ;; => \"#^:foo [2]\"\n   ```\n   See also: [[meta-node]]"]],"^1<",["^ ","^17","^17","^15","^15","^16","^15"],"~:cljs.analyzer/constants",["^ ","^19",["^U",["^5U","~:children","^5","^5W","~:meta*","~:prefix","^5V","^5L"]],"~:order",["^5L","^6A","^6?","^5","^5U","^5V","^5W","^6@"]],"^1A",["^ ","^1:",["^U",[]]],"^1B",["^ "],"^1C",["^18","^17","^11","^13","^15"]],"^Z","^W","~:ns-specs",["^ "],"~:ns-spec-vars",["^U",[]],"~:compiler-options",["^2X",[["^6E","~:static-fns"],true,["^6E","~:shadow-tweaks"],null,["^6E","~:source-map-inline"],null,["^6E","~:elide-asserts"],false,["^6E","~:optimize-constants"],null,["^6E","^1H"],null,["^6E","~:external-config"],null,["^6E","~:tooling-config"],null,["^6E","~:emit-constants"],null,["^6E","~:load-tests"],null,["^6E","~:form-size-threshold"],null,["^6E","~:global-goog-object&array"],null,["^6E","~:data-readers"],null,["^6E","~:infer-externs"],"~:auto",["^6E","^1J"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6E","~:fn-invoke-direct"],null,["^6E","~:source-map"],"/dev/null"]]]