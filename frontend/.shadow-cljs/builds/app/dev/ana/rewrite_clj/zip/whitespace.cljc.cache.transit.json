["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.zip.whitespace');\n/**\n * Returns true when the current the node in `zloc` is a Clojure whitespace (which includes the comma).\n */\nrewrite_clj.zip.whitespace.whitespace_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_QMARK_(zloc){\nvar G__32360 = zloc;\nvar G__32360__$1 = (((G__32360 == null))?null:rewrite_clj.custom_zipper.core.node(G__32360));\nif((G__32360__$1 == null)){\nreturn null;\n} else {\nreturn rewrite_clj.node.whitespace.whitespace_QMARK_(G__32360__$1);\n}\n});\n/**\n * Returns true when the current node in `zloc` is a linebreak.\n */\nrewrite_clj.zip.whitespace.linebreak_QMARK_ = (function rewrite_clj$zip$whitespace$linebreak_QMARK_(zloc){\nvar G__32364 = zloc;\nvar G__32364__$1 = (((G__32364 == null))?null:rewrite_clj.custom_zipper.core.node(G__32364));\nif((G__32364__$1 == null)){\nreturn null;\n} else {\nreturn rewrite_clj.node.whitespace.linebreak_QMARK_(G__32364__$1);\n}\n});\n/**\n * Returns true when the current node in `zloc` is a comment.\n */\nrewrite_clj.zip.whitespace.comment_QMARK_ = (function rewrite_clj$zip$whitespace$comment_QMARK_(zloc){\nvar G__32368 = zloc;\nvar G__32368__$1 = (((G__32368 == null))?null:rewrite_clj.custom_zipper.core.node(G__32368));\nif((G__32368__$1 == null)){\nreturn null;\n} else {\nreturn rewrite_clj.node.comment.comment_QMARK_(G__32368__$1);\n}\n});\n/**\n * Returns true when current node in `zloc` is a whitespace but not a linebreak.\n */\nrewrite_clj.zip.whitespace.whitespace_not_linebreak_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_not_linebreak_QMARK_(zloc){\nvar and__5043__auto__ = rewrite_clj.zip.whitespace.whitespace_QMARK_(zloc);\nif(cljs.core.truth_(and__5043__auto__)){\nreturn cljs.core.not(rewrite_clj.zip.whitespace.linebreak_QMARK_(zloc));\n} else {\nreturn and__5043__auto__;\n}\n});\n/**\n * Returns true when current node in `zloc` is whitespace or a comment.\n */\nrewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_ = (function rewrite_clj$zip$whitespace$whitespace_or_comment_QMARK_(zloc){\nvar G__32378 = zloc;\nvar G__32378__$1 = (((G__32378 == null))?null:rewrite_clj.custom_zipper.core.node(G__32378));\nif((G__32378__$1 == null)){\nreturn null;\n} else {\nreturn rewrite_clj.node.extras.whitespace_or_comment_QMARK_(G__32378__$1);\n}\n});\n/**\n * Return zipper with location moved to first location not satisfying predicate `p?` starting from the node in\n * `zloc` and traversing by function `f`.\n */\nrewrite_clj.zip.whitespace.skip = (function rewrite_clj$zip$whitespace$skip(f,p_QMARK_,zloc){\nreturn cljs.core.first(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(p_QMARK_,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(rewrite_clj.custom_zipper.core.end_QMARK_),cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,cljs.core.iterate(f,zloc)))));\n});\n/**\n * Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc`\n * and traversing by function `f`.\n * \n * `f` defaults to [[rewrite-clj.zip/right]]\n */\nrewrite_clj.zip.whitespace.skip_whitespace = (function rewrite_clj$zip$whitespace$skip_whitespace(var_args){\nvar G__32384 = arguments.length;\nswitch (G__32384) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(rewrite_clj.custom_zipper.core.right,zloc);\n}));\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2 = (function (f,zloc){\nreturn rewrite_clj.zip.whitespace.skip(f,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_,zloc);\n}));\n\n(rewrite_clj.zip.whitespace.skip_whitespace.cljs$lang$maxFixedArity = 2);\n\n/**\n * Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc` traversing left.\n */\nrewrite_clj.zip.whitespace.skip_whitespace_left = (function rewrite_clj$zip$whitespace$skip_whitespace_left(zloc){\nreturn rewrite_clj.zip.whitespace.skip_whitespace.cljs$core$IFn$_invoke$arity$2(rewrite_clj.custom_zipper.core.left,zloc);\n});\n/**\n * Return zipper with `n` space whitespace node inserted to the left of the current node in `zloc`, without moving location.\n * `n` defaults to 1.\n */\nrewrite_clj.zip.whitespace.insert_space_left = (function rewrite_clj$zip$whitespace$insert_space_left(var_args){\nvar G__32397 = arguments.length;\nswitch (G__32397) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.insert_space_left.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.insert_space_left.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.insert_space_left.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.insert_space_left.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.insert_space_left.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nif((n >= (0))){\n} else {\nthrow (new Error(\"Assert failed: (>= n 0)\"));\n}\n\nif((n > (0))){\nreturn rewrite_clj.custom_zipper.core.insert_left(zloc,rewrite_clj.node.whitespace.spaces(n));\n} else {\nreturn zloc;\n}\n}));\n\n(rewrite_clj.zip.whitespace.insert_space_left.cljs$lang$maxFixedArity = 2);\n\n/**\n * Return zipper with `n` space whitespace node inserted to the right of the current node in `zloc`, without moving location.\n * `n` defaults to 1.\n */\nrewrite_clj.zip.whitespace.insert_space_right = (function rewrite_clj$zip$whitespace$insert_space_right(var_args){\nvar G__32402 = arguments.length;\nswitch (G__32402) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.insert_space_right.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.insert_space_right.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.insert_space_right.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.insert_space_right.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.insert_space_right.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nif((n >= (0))){\n} else {\nthrow (new Error(\"Assert failed: (>= n 0)\"));\n}\n\nif((n > (0))){\nreturn rewrite_clj.custom_zipper.core.insert_right(zloc,rewrite_clj.node.whitespace.spaces(n));\n} else {\nreturn zloc;\n}\n}));\n\n(rewrite_clj.zip.whitespace.insert_space_right.cljs$lang$maxFixedArity = 2);\n\n/**\n * Return zipper with `n` newlines node inserted to the left of the current node in `zloc`, without moving location.\n * `n` defaults to 1.\n */\nrewrite_clj.zip.whitespace.insert_newline_left = (function rewrite_clj$zip$whitespace$insert_newline_left(var_args){\nvar G__32406 = arguments.length;\nswitch (G__32406) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.insert_newline_left.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.insert_newline_left.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.insert_newline_left.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.insert_newline_left.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.insert_newline_left.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn rewrite_clj.custom_zipper.core.insert_left(zloc,rewrite_clj.node.whitespace.newlines(n));\n}));\n\n(rewrite_clj.zip.whitespace.insert_newline_left.cljs$lang$maxFixedArity = 2);\n\n/**\n * Return zipper with `n` newlines node inserted to the right of the current node in `zloc`, without moving location.\n * `n` defaults to 1.\n */\nrewrite_clj.zip.whitespace.insert_newline_right = (function rewrite_clj$zip$whitespace$insert_newline_right(var_args){\nvar G__32408 = arguments.length;\nswitch (G__32408) {\ncase 1:\nreturn rewrite_clj.zip.whitespace.insert_newline_right.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rewrite_clj.zip.whitespace.insert_newline_right.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.insert_newline_right.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.insert_newline_right.cljs$core$IFn$_invoke$arity$2(zloc,(1));\n}));\n\n(rewrite_clj.zip.whitespace.insert_newline_right.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn rewrite_clj.custom_zipper.core.insert_right(zloc,rewrite_clj.node.whitespace.newlines(n));\n}));\n\n(rewrite_clj.zip.whitespace.insert_newline_right.cljs$lang$maxFixedArity = 2);\n\n/**\n * DEPRECATED: renamed to [[insert-space-left]].\n */\nrewrite_clj.zip.whitespace.prepend_space = (function rewrite_clj$zip$whitespace$prepend_space(var_args){\nvar G__32410 = arguments.length;\nswitch (G__32410) {\ncase 2:\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 1:\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn rewrite_clj.zip.whitespace.insert_space_left.cljs$core$IFn$_invoke$arity$2(zloc,(function (){var or__5045__auto__ = n;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (1);\n}\n})());\n}));\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.prepend_space.cljs$core$IFn$_invoke$arity$2(zloc,null);\n}));\n\n(rewrite_clj.zip.whitespace.prepend_space.cljs$lang$maxFixedArity = 2);\n\n/**\n * DEPRECATED: renamed to [[insert-space-right]].\n */\nrewrite_clj.zip.whitespace.append_space = (function rewrite_clj$zip$whitespace$append_space(var_args){\nvar G__32412 = arguments.length;\nswitch (G__32412) {\ncase 2:\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 1:\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn rewrite_clj.zip.whitespace.insert_space_right.cljs$core$IFn$_invoke$arity$2(zloc,(function (){var or__5045__auto__ = n;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (1);\n}\n})());\n}));\n\n(rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.append_space.cljs$core$IFn$_invoke$arity$2(zloc,null);\n}));\n\n(rewrite_clj.zip.whitespace.append_space.cljs$lang$maxFixedArity = 2);\n\n/**\n * DEPRECATED: renamed to [[insert-newline-left]].\n */\nrewrite_clj.zip.whitespace.prepend_newline = (function rewrite_clj$zip$whitespace$prepend_newline(var_args){\nvar G__32414 = arguments.length;\nswitch (G__32414) {\ncase 2:\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 1:\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn rewrite_clj.zip.whitespace.insert_newline_left.cljs$core$IFn$_invoke$arity$2(zloc,(function (){var or__5045__auto__ = n;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (1);\n}\n})());\n}));\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.prepend_newline.cljs$core$IFn$_invoke$arity$2(zloc,null);\n}));\n\n(rewrite_clj.zip.whitespace.prepend_newline.cljs$lang$maxFixedArity = 2);\n\n/**\n * DEPRECATED: renamed to [[insert-newline-right]].\n */\nrewrite_clj.zip.whitespace.append_newline = (function rewrite_clj$zip$whitespace$append_newline(var_args){\nvar G__32416 = arguments.length;\nswitch (G__32416) {\ncase 2:\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 1:\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2 = (function (zloc,n){\nreturn rewrite_clj.zip.whitespace.insert_newline_right.cljs$core$IFn$_invoke$arity$2(zloc,(function (){var or__5045__auto__ = n;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (1);\n}\n})());\n}));\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$1 = (function (zloc){\nreturn rewrite_clj.zip.whitespace.append_newline.cljs$core$IFn$_invoke$arity$2(zloc,null);\n}));\n\n(rewrite_clj.zip.whitespace.append_newline.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/zip/whitespace.cljc","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",40,"~:no-doc",true],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.tools.reader.impl.utils","~$cljs.tools.reader.impl.utils","~$cljs.loader","~$shadow.loader","~$clojure.tools.reader.impl.commons","~$cljs.tools.reader.impl.commons","~$clojure.tools.reader.impl.errors","~$cljs.tools.reader.impl.errors","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.tools.reader.edn","~$cljs.tools.reader.edn","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.zip.whitespace","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$ncomment","~$rewrite-clj.node.comment","~$rewrite-clj.node.extras","^13","~$rewrite-clj.custom-zipper.core","^14","~$cljs.core","^15","~$goog","^16","^12","^12","~$nextras","^13","~$zraw","^14","~$rewrite-clj.node.whitespace","^19","~$nwhitespace","^19"],"~:seen",["^U",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^15","^15","^19","^19","^1:","^19"],"~:form",["~#list",["~$ns","^W",["^1@",["^1<",["^14","~:as","^18"],["^12","^1B","^11"],["^13","^1B","^17"],["^19","^1B","^1:"]]]]],"~:flags",["^ ","^1<",["^U",[]]],"~:js-deps",["^ "],"~:deps",["^16","^15","^14","^12","^13","^19"]],"^Z","^W","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/zip/whitespace.cljc"],"~:compiled-at",1666857663934,"^X",["^ ","^11","^12","^13","^13","^14","^14","^15","^15","^16","^16","^12","^12","^17","^13","^18","^14","^19","^19","^1:","^19"],"~:resource-name","rewrite_clj/zip/whitespace.cljc","~:warnings",[],"~:source","(ns ^:no-doc rewrite-clj.zip.whitespace\n  (:require [rewrite-clj.custom-zipper.core :as zraw]\n            [rewrite-clj.node.comment :as ncomment]\n            [rewrite-clj.node.extras :as nextras]\n            [rewrite-clj.node.whitespace :as nwhitespace]))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n;; ## Predicates\n\n(defn whitespace?\n  \"Returns true when the current the node in `zloc` is a Clojure whitespace (which includes the comma).\"\n  [zloc]\n  (some-> zloc zraw/node nwhitespace/whitespace?))\n\n(defn linebreak?\n  \"Returns true when the current node in `zloc` is a linebreak.\"\n  [zloc]\n  (some-> zloc zraw/node nwhitespace/linebreak?))\n\n(defn comment?\n  \"Returns true when the current node in `zloc` is a comment.\"\n  [zloc]\n  (some-> zloc zraw/node ncomment/comment?))\n\n(defn whitespace-not-linebreak?\n  \"Returns true when current node in `zloc` is a whitespace but not a linebreak.\"\n  [zloc]\n  (and\n   (whitespace? zloc)\n   (not (linebreak? zloc))))\n\n(defn whitespace-or-comment?\n  \"Returns true when current node in `zloc` is whitespace or a comment.\"\n  [zloc]\n  (some-> zloc zraw/node nextras/whitespace-or-comment?))\n\n;; ## Movement\n\n(defn skip\n  \"Return zipper with location moved to first location not satisfying predicate `p?` starting from the node in\n   `zloc` and traversing by function `f`.\"\n  [f p? zloc]\n  (->> (iterate f zloc)\n       (take-while identity)\n       (take-while (complement zraw/end?))\n       (drop-while p?)\n       (first)))\n\n(defn skip-whitespace\n  \"Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc`\n   and traversing by function `f`.\n\n   `f` defaults to [[rewrite-clj.zip/right]]\"\n  ([zloc] (skip-whitespace zraw/right zloc))\n  ([f zloc] (skip f whitespace-or-comment? zloc)))\n\n(defn skip-whitespace-left\n  \"Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc` traversing left.\"\n  [zloc]\n  (skip-whitespace zraw/left zloc))\n\n;; ## Insertion\n\n(defn insert-space-left\n  \"Return zipper with `n` space whitespace node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1.\"\n  ([zloc] (insert-space-left zloc 1))\n  ([zloc n]\n   {:pre [(>= n 0)]}\n   (if (pos? n)\n     (zraw/insert-left zloc (nwhitespace/spaces n))\n     zloc)))\n\n(defn insert-space-right\n  \"Return zipper with `n` space whitespace node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1.\"\n  ([zloc] (insert-space-right zloc 1))\n  ([zloc n]\n   {:pre [(>= n 0)]}\n   (if (pos? n)\n     (zraw/insert-right zloc (nwhitespace/spaces n))\n     zloc)))\n\n(defn insert-newline-left\n  \"Return zipper with `n` newlines node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1.\"\n  ([zloc] (insert-newline-left zloc 1))\n  ([zloc n]\n   (zraw/insert-left zloc (nwhitespace/newlines n))))\n\n(defn insert-newline-right\n  \"Return zipper with `n` newlines node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1.\"\n  ([zloc] (insert-newline-right zloc 1))\n  ([zloc n]\n   (zraw/insert-right zloc (nwhitespace/newlines n))))\n\n;; ## Deprecated Functions\n\n(defn prepend-space\n   \"DEPRECATED: renamed to [[insert-space-left]].\"\n  ([zloc n]\n   (insert-space-left zloc (or n 1)))\n  ([zloc]\n   (prepend-space zloc nil)))\n\n(defn append-space\n   \"DEPRECATED: renamed to [[insert-space-right]].\"\n  ([zloc n]\n   (insert-space-right zloc (or n 1)))\n  ([zloc]\n   (append-space zloc nil)))\n\n(defn prepend-newline\n   \"DEPRECATED: renamed to [[insert-newline-left]].\"\n  ([zloc n]\n   (insert-newline-left zloc (or n 1)))\n  ([zloc]\n   (prepend-newline zloc nil)))\n\n(defn append-newline\n   \"DEPRECATED: renamed to [[insert-newline-right]].\"\n  ([zloc n]\n   (insert-newline-right zloc (or n 1)))\n  ([zloc]\n   (append-newline zloc nil)))\n","~:reader-features",["^U",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAUA;;;+CAAA,/CAAMA,sGAEHC;AAFH,AAGE,IAAAC,WAAQD;IAARC,eAAA,EAAA,CAAAA,YAAA,OAAA,KAAA,oCAAAA,pCAAaC;AAAb,AAAA,GAAA,CAAAD,gBAAA;AAAA;;AAAA,qDAAAA,9CAAuBE;;;AAEzB;;;8CAAA,9CAAMC,oGAEHJ;AAFH,AAGE,IAAAK,WAAQL;IAARK,eAAA,EAAA,CAAAA,YAAA,OAAA,KAAA,oCAAAA,pCAAaH;AAAb,AAAA,GAAA,CAAAG,gBAAA;AAAA;;AAAA,oDAAAA,7CAAuBC;;;AAEzB;;;4CAAA,5CAAMC,gGAEHP;AAFH,AAGE,IAAAQ,WAAQR;IAARQ,eAAA,EAAA,CAAAA,YAAA,OAAA,KAAA,oCAAAA,pCAAaN;AAAb,AAAA,GAAA,CAAAM,gBAAA;AAAA;;AAAA,+CAAAA,xCAAuBC;;;AAEzB;;;6DAAA,7DAAMC,kIAEHV;AAFH,AAGE,IAAAW,oBACC,AAACZ,6CAAYC;AADd,AAAA,oBAAAW;AAEC,OAACC,cAAI,AAACR,4CAAWJ;;AAFlBW;;;AAIF;;;0DAAA,1DAAME,4HAEHb;AAFH,AAGE,IAAAc,WAAQd;IAARc,eAAA,EAAA,CAAAA,YAAA,OAAA,KAAA,oCAAAA,pCAAaZ;AAAb,AAAA,GAAA,CAAAY,gBAAA;AAAA;;AAAA,4DAAAA,rDAAuBC;;;AAIzB;;;;kCAAA,lCAAMC,4EAGHC,EAAEC,SAAGlB;AAHR,4QAIO,AAACmB,kBAAQF,EAAEjB,1FACX,AAACoB,mDAAWC,tKACZ,AAACD,mDAAW,AAACE,qBAAWC,pIACxB,AAACC,mDAAWN,1EACZ,OAACO;;AAER,AAAA;;;;;;6CAAA,qDAAAC,lGAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,yEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,yEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,2EAAA,3EAAMD,sFAKF5B;AALJ,AAKU,OAAC8B,yEAAgBC,qCAAW/B;;;AALtC,CAAA,2EAAA,3EAAM4B,sFAMFX,EAAEjB;AANN,AAMY,OAACgB,gCAAKC,EAAEJ,wDAAuBb;;;AAN3C,CAAA,qEAAA,rEAAM4B;;AAAN,AAQA;;;kDAAA,lDAAMI,4GAEHhC;AAFH,AAGE,OAAC8B,yEAAgBG,oCAAUjC;;AAI7B,AAAA;;;;+CAAA,uDAAA0B,tGAAMS;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,2EAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,2EAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAN,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,6EAAA,7EAAMM,wFAGFnC;AAHJ,AAGU,uFAAA,hFAACoC,2EAAkBpC;;;AAH7B,CAAA,6EAAA,7EAAMmC,wFAIFnC,KAAKqC;AAJT,AAAA,GAKU,MAAA,LAAIA;AALd;AAAA,AAAA,MAAA,KAAAR,MAAA;;;AAMG,GAAI,KAAA,JAAMQ;AACR,OAACC,2CAAiBtC,KAAK,AAACuC,mCAAmBF;;AAC3CrC;;;;AARL,CAAA,uEAAA,vEAAMmC;;AAAN,AAUA,AAAA;;;;gDAAA,wDAAAT,xGAAMe;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,4EAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,4EAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAZ,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,8EAAA,9EAAMY,yFAGFzC;AAHJ,AAGU,wFAAA,jFAAC0C,4EAAmB1C;;;AAH9B,CAAA,8EAAA,9EAAMyC,yFAIFzC,KAAKqC;AAJT,AAAA,GAKU,MAAA,LAAIA;AALd;AAAA,AAAA,MAAA,KAAAR,MAAA;;;AAMG,GAAI,KAAA,JAAMQ;AACR,OAACM,4CAAkB3C,KAAK,AAACuC,mCAAmBF;;AAC5CrC;;;;AARL,CAAA,wEAAA,xEAAMyC;;AAAN,AAUA,AAAA;;;;iDAAA,yDAAAf,1GAAMmB;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,6EAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,6EAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAhB,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,+EAAA,/EAAMgB,0FAGF7C;AAHJ,AAGU,yFAAA,lFAAC8C,6EAAoB9C;;;AAH/B,CAAA,+EAAA,/EAAM6C,0FAIF7C,KAAKqC;AAJT,AAKG,OAACC,2CAAiBtC,KAAK,AAAC+C,qCAAqBV;;;AALhD,CAAA,yEAAA,zEAAMQ;;AAAN,AAOA,AAAA;;;;kDAAA,0DAAAnB,5GAAMuB;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,8EAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,8EAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAApB,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,gFAAA,hFAAMoB,2FAGFjD;AAHJ,AAGU,0FAAA,nFAACkD,8EAAqBlD;;;AAHhC,CAAA,gFAAA,hFAAMiD,2FAIFjD,KAAKqC;AAJT,AAKG,OAACM,4CAAkB3C,KAAK,AAAC+C,qCAAqBV;;;AALjD,CAAA,0EAAA,1EAAMY;;AAAN,AASA,AAAA;;;2CAAA,mDAAAvB,9FAAM0B;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,uEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,uEAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAvB,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,yEAAA,zEAAMuB,oFAEFpD,KAAKqC;AAFT,AAGG,OAACD,2EAAkBpC,KAAK,iBAAAqD,mBAAIhB;AAAJ,AAAA,oBAAAgB;AAAAA;;AAAA;;;;;AAH3B,CAAA,yEAAA,zEAAMD,oFAIFpD;AAJJ,AAKG,mFAAA,5EAACsD,uEAActD;;;AALlB,CAAA,mEAAA,nEAAMoD;;AAAN,AAOA,AAAA;;;0CAAA,kDAAA1B,5FAAM8B;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,sEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sEAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAA3B,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,wEAAA,xEAAM2B,mFAEFxD,KAAKqC;AAFT,AAGG,OAACK,4EAAmB1C,KAAK,iBAAAqD,mBAAIhB;AAAJ,AAAA,oBAAAgB;AAAAA;;AAAA;;;;;AAH5B,CAAA,wEAAA,xEAAMG,mFAIFxD;AAJJ,AAKG,kFAAA,3EAACyD,sEAAazD;;;AALjB,CAAA,kEAAA,lEAAMwD;;AAAN,AAOA,AAAA;;;6CAAA,qDAAA9B,lGAAMiC;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,yEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,yEAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAA9B,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,2EAAA,3EAAM8B,sFAEF3D,KAAKqC;AAFT,AAGG,OAACS,6EAAoB9C,KAAK,iBAAAqD,mBAAIhB;AAAJ,AAAA,oBAAAgB;AAAAA;;AAAA;;;;;AAH7B,CAAA,2EAAA,3EAAMM,sFAIF3D;AAJJ,AAKG,qFAAA,9EAAC4D,yEAAgB5D;;;AALpB,CAAA,qEAAA,rEAAM2D;;AAAN,AAOA,AAAA;;;4CAAA,oDAAAjC,hGAAMoC;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,wEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,wEAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAjC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,0EAAA,1EAAMiC,qFAEF9D,KAAKqC;AAFT,AAGG,OAACa,8EAAqBlD,KAAK,iBAAAqD,mBAAIhB;AAAJ,AAAA,oBAAAgB;AAAAA;;AAAA;;;;;AAH9B,CAAA,0EAAA,1EAAMS,qFAIF9D;AAJJ,AAKG,oFAAA,7EAAC+D,wEAAe/D;;;AALnB,CAAA,oEAAA,pEAAM8D;;AAAN","names",["rewrite-clj.zip.whitespace/whitespace?","zloc","G__32360","rewrite-clj.custom-zipper.core/node","rewrite-clj.node.whitespace/whitespace?","rewrite-clj.zip.whitespace/linebreak?","G__32364","rewrite-clj.node.whitespace/linebreak?","rewrite-clj.zip.whitespace/comment?","G__32368","rewrite-clj.node.comment/comment?","rewrite-clj.zip.whitespace/whitespace-not-linebreak?","and__5043__auto__","cljs.core/not","rewrite-clj.zip.whitespace/whitespace-or-comment?","G__32378","rewrite-clj.node.extras/whitespace-or-comment?","rewrite-clj.zip.whitespace/skip","f","p?","cljs.core/iterate","cljs.core.take_while","cljs.core/identity","cljs.core/complement","rewrite-clj.custom-zipper.core/end?","cljs.core.drop_while","cljs.core/first","var_args","G__32384","rewrite-clj.zip.whitespace/skip-whitespace","js/Error","rewrite_clj.zip.whitespace.skip_whitespace","rewrite-clj.custom-zipper.core/right","rewrite-clj.zip.whitespace/skip-whitespace-left","rewrite-clj.custom-zipper.core/left","G__32397","rewrite-clj.zip.whitespace/insert-space-left","rewrite_clj.zip.whitespace.insert_space_left","n","rewrite-clj.custom-zipper.core/insert-left","rewrite-clj.node.whitespace/spaces","G__32402","rewrite-clj.zip.whitespace/insert-space-right","rewrite_clj.zip.whitespace.insert_space_right","rewrite-clj.custom-zipper.core/insert-right","G__32406","rewrite-clj.zip.whitespace/insert-newline-left","rewrite_clj.zip.whitespace.insert_newline_left","rewrite-clj.node.whitespace/newlines","G__32408","rewrite-clj.zip.whitespace/insert-newline-right","rewrite_clj.zip.whitespace.insert_newline_right","G__32410","rewrite-clj.zip.whitespace/prepend-space","or__5045__auto__","rewrite_clj.zip.whitespace.prepend_space","G__32412","rewrite-clj.zip.whitespace/append-space","rewrite_clj.zip.whitespace.append_space","G__32414","rewrite-clj.zip.whitespace/prepend-newline","rewrite_clj.zip.whitespace.prepend_newline","G__32416","rewrite-clj.zip.whitespace/append-newline","rewrite_clj.zip.whitespace.append_newline"]],"~:used-vars",["^U",["~$rewrite-clj.custom-zipper.core/insert-left","~$rewrite-clj.zip.whitespace/prepend-space","~$rewrite-clj.zip.whitespace/comment?","~$rewrite-clj.node.whitespace/spaces","~$rewrite-clj.zip.whitespace/whitespace-not-linebreak?","~$rewrite-clj.zip.whitespace/append-newline","~$rewrite-clj.zip.whitespace/insert-newline-right","~$rewrite-clj.custom-zipper.core/right","~$rewrite-clj.zip.whitespace/prepend-newline","~$cljs.core/take-while","~$cljs.core/drop-while","~$rewrite-clj.zip.whitespace/append-space","~$rewrite-clj.zip.whitespace/whitespace-or-comment?","~$cljs.core/identity","~$rewrite-clj.zip.whitespace/insert-space-left","~$cljs.core/iterate","~$rewrite-clj.custom-zipper.core/end?","~$rewrite-clj.zip.whitespace/whitespace?","~$rewrite-clj.custom-zipper.core/left","~$rewrite-clj.zip.whitespace/insert-newline-left","~$rewrite-clj.zip.whitespace/skip-whitespace-left","~$rewrite-clj.node.whitespace/whitespace?","~$rewrite-clj.zip.whitespace/skip","~$rewrite-clj.zip.whitespace/insert-space-right","~$rewrite-clj.node.extras/whitespace-or-comment?","~$rewrite-clj.node.whitespace/newlines","~$rewrite-clj.custom-zipper.core/node","~$cljs.core/not","~$cljs.core/complement","~$rewrite-clj.custom-zipper.core/insert-right","~$rewrite-clj.node.whitespace/linebreak?","~$rewrite-clj.zip.whitespace/linebreak?","~$cljs.core/first","~$js/Error","~$rewrite-clj.node.comment/comment?","~$rewrite-clj.zip.whitespace/skip-whitespace"]]],"~:cache-keys",["~#cmap",[["^1G","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^U",[]],"~:deps-syms",["^16","~$goog.dom.HtmlElement"]]],["^1G","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15","~$clojure.string","~$goog.string"]]],["^1G","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16"]]],["^1G","goog/string/stringformat.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^2S"]]],["^1G","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^1G","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2W"]]],["^1G","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^2X"]]],["^1G","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16"]]],["^1G","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15","^F","^J","^@","^D","~$cljs.tools.reader","^2S","~$goog.string.StringBuffer"]]],["^1G","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16"]]],["^1G","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15"]]],["^1G","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15","^J","^@","^D","^F","^2T","^2S","^34"]]],["^1G","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16"]]],["^1G","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16"]]],["^1G","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^2X"]]],"~:SHADOW-TIMESTAMP",[1666857604000,1666857604000,1666857293000],["^1G","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^2X","~$goog.reflect"]]],["^1G","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^2X","~$goog.fs.blob","^2Y","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2[","^30","^31","^32"]]],["^1G","rewrite_clj/node/comment.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15","~$rewrite-clj.node.protocols"]]],["^1G","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16"]]],["^1G","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16"]]],["^1G","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^31","~$goog.html.SafeUrl","^32","^2X","^2W"]]],["^1G","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^2X","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^38","~$goog.html.SafeStyle","^3;","^2Z","~$goog.html.uncheckedconversions","^31","^2W"]]],["^1G","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^31","^2[","^30","^38","^3?","~$goog.html.SafeStyleSheet","^3;","~$goog.dom.TagName","^2Z","^32","^2X","~$goog.labs.userAgent.browser","^2T","^2U","^2W","~$goog.dom.tags","^39"]]],["^1G","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^2U"]]],["^1G","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16"]]],["^1G","rewrite_clj/node/protocols.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15","^2R","~$rewrite-clj.interop"]]],["^1G","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1G","rewrite_clj/zip/whitespace.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15","^14","^12","^13","^19"]]],["^1G","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^2T","^2X","~$goog.collections.maps","^2S","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1G","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16"]]],["^1G","rewrite_clj/node/whitespace.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15","^3:","~$rewrite-clj.reader"]]],["^1G","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16"]]],["^1G","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16"]]],["^1G","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",[]]],["^1G","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^2T","^2U"]]],["^1G","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15","^J","^2R","~$cljs.tools.reader.impl.inspect"]]],["^1G","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15","^2S","^34"]]],["^1G","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","~$goog.dom.safe","^3@","^31","^2W"]]],["^1G","rewrite_clj/custom_zipper/core.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15","~$clojure.zip","~$rewrite-clj.custom-zipper.switchable","^3:"]]],["^1G","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16"]]],["^1G","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","~$goog.labs.userAgent","^2W"]]],["^1G","clojure/zip.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15"]]],["^1G","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16"]]],["^1G","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15","^@","^2S","^34"]]],["^1G","rewrite_clj/reader.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15","^L","^D","^F","^@","^J","^3E","^34"]]],["^1G","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16"]]],["^1G","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^2X","^3>","^38","^3?","^3A","^3;","^2Z","^31","^2W","^2["]]],["^1G","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15","^F","^J","^@"]]],["^1G","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16"]]],["^1G","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","~$goog.math.Long","~$goog.math.Integer","^2S","^2U","^2T","~$goog.Uri","^34"]]],["^1G","rewrite_clj/custom_zipper/switchable.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15"]]],["^1G","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^31","^32","^39","^2X"]]],["^1G","rewrite_clj/node/extras.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15","^12","^19"]]],["^1G","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^31","^3?","^32","^2U","^2X","^2W"]]],["^1G","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^36"]]],["^1G","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^2X","^2S"]]],["^1G","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^2X","^32"]]],["^1G","rewrite_clj/interop.cljc"],["3744f553562a31e10c2a7cd37758888e3b691f01","^2M",["^ ","^2N",null,"^2O",["^U",[]],"^2P",["^16","^15","^2S","~$goog.string.format"]]]]],"~:clj-info",["^ ","jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/rewrite-clj/rewrite-clj/1.0.699-alpha/rewrite-clj-1.0.699-alpha.jar!/rewrite_clj/reader.cljc",1666857316000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/edn.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/rewrite-clj/rewrite-clj/1.0.699-alpha/rewrite-clj-1.0.699-alpha.jar!/rewrite_clj/node/protocols.cljc",1666857316000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/rewrite-clj/rewrite-clj/1.0.699-alpha/rewrite-clj-1.0.699-alpha.jar!/rewrite_clj/interop.cljc",1666857316000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/utils.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/commons.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1666857314000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/rewrite-clj/rewrite-clj/1.0.699-alpha/rewrite-clj-1.0.699-alpha.jar!/rewrite_clj/node/whitespace.cljc",1666857316000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/rewrite-clj/rewrite-clj/1.0.699-alpha/rewrite-clj-1.0.699-alpha.jar!/rewrite_clj/custom_zipper/switchable.cljc",1666857316000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1666857280000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1666857280000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",1,"^8",14,"^9",1,"^:",40,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^O","^P","^Q","^R"],"^S",null,"^T",["^U",[]],"^V","^W","^X",["^ "],"^[",null,"^10",["^ ","^11","^12","^13","^13","^14","^14","^15","^15","^16","^16","^12","^12","^17","^13","^18","^14","^19","^19","^1:","^19"],"^1;",["^U",["^1<"]],"~:shadow/js-access-global",["^U",["Error"]],"^1=",null,"~:defs",["^ ","~$insert-space-left",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",65,"^8",7,"^9",65,"^:",24,"~:arglists",["^1@",["~$quote",["^1@",[["~$zloc"],["^51","~$n"]]]]],"~:doc","Return zipper with `n` space whitespace node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1.","~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["^51"],["^51","~$n"]],"^4[",["^1@",[["^51"],["^51","~$n"]]],"~:arglists-meta",["^1@",[null,null]]]],"^V","^25","^6","rewrite_clj/zip/whitespace.cljc","^:",24,"^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51"],["^51","~$n"]],"^4[",["^1@",[["^51"],["^51","~$n"]]],"^58",["^1@",[null,null]]],"^57",[["^51"],["^51","~$n"]],"~:protocol-impl",null,"^55",2,"^58",["^1@",[null,null]],"^8",1,"^54",false,"~:methods",[["^ ","^55",1,"^54",false,"~:tag","~$any"],["^ ","^55",2,"^54",false,"^5;",["^U",[null,"~$clj","^5<","~$cljs.core/MetaFn","~$clj-nil"]]]],"^7",65,"^9",65,"^56",2,"~:fn-var",true,"^4[",["^1@",[["^51"],["^51","~$n"]]],"^52","Return zipper with `n` space whitespace node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],"~$whitespace?",["^ ","^4Z",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",11,"^8",7,"^9",11,"^:",18,"^4[",["^1@",["^50",["^1@",[["^51"]]]]],"^52","Returns true when the current the node in `zloc` is a Clojure whitespace (which includes the comma)."],"^V","^28","^6","rewrite_clj/zip/whitespace.cljc","^:",18,"^57",["^1@",[["^51"]]],"^59",null,"^58",["^1@",[null,null]],"^8",1,"^54",false,"^7",11,"~:ret-tag",["^U",["~$boolean","^5?"]],"^9",11,"^56",1,"^5@",true,"^4[",["^1@",["^50",["^1@",[["^51"]]]]],"^52","Returns true when the current the node in `zloc` is a Clojure whitespace (which includes the comma)."],"~$insert-newline-left",["^ ","^4Z",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",85,"^8",7,"^9",85,"^:",26,"^4[",["^1@",["^50",["^1@",[["^51"],["^51","~$n"]]]]],"^52","Return zipper with `n` newlines node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1.","^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51"],["^51","~$n"]],"^4[",["^1@",[["^51"],["^51","~$n"]]],"^58",["^1@",[null,null]]]],"^V","^2:","^6","rewrite_clj/zip/whitespace.cljc","^:",26,"^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51"],["^51","~$n"]],"^4[",["^1@",[["^51"],["^51","~$n"]]],"^58",["^1@",[null,null]]],"^57",[["^51"],["^51","~$n"]],"^59",null,"^55",2,"^58",["^1@",[null,null]],"^8",1,"^54",false,"^5:",[["^ ","^55",1,"^54",false,"^5;","^5<"],["^ ","^55",2,"^54",false,"^5;",["^U",["^5=","^5<","^5>","^5?"]]]],"^7",85,"^9",85,"^56",2,"^5@",true,"^4[",["^1@",[["^51"],["^51","~$n"]]],"^52","Return zipper with `n` newlines node inserted to the left of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],"~$linebreak?",["^ ","^4Z",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",16,"^8",7,"^9",16,"^:",17,"^4[",["^1@",["^50",["^1@",[["^51"]]]]],"^52","Returns true when the current node in `zloc` is a linebreak."],"^V","^2F","^6","rewrite_clj/zip/whitespace.cljc","^:",17,"^57",["^1@",[["^51"]]],"^59",null,"^58",["^1@",[null,null]],"^8",1,"^54",false,"^7",16,"^5B",["^U",["^5C","^5?"]],"^9",16,"^56",1,"^5@",true,"^4[",["^1@",["^50",["^1@",[["^51"]]]]],"^52","Returns true when the current node in `zloc` is a linebreak."],"~$skip",["^ ","^4Z",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",40,"^8",7,"^9",40,"^:",11,"^4[",["^1@",["^50",["^1@",[["~$f","~$p?","^51"]]]]],"^52","Return zipper with location moved to first location not satisfying predicate `p?` starting from the node in\n   `zloc` and traversing by function `f`."],"^V","^2=","^6","rewrite_clj/zip/whitespace.cljc","^:",11,"^57",["^1@",[["~$f","^5G","^51"]]],"^59",null,"^58",["^1@",[null,null]],"^8",1,"^54",false,"^7",40,"^5B",["^U",["^5<","^5?"]],"^9",40,"^56",3,"^5@",true,"^4[",["^1@",["^50",["^1@",[["~$f","^5G","^51"]]]]],"^52","Return zipper with location moved to first location not satisfying predicate `p?` starting from the node in\n   `zloc` and traversing by function `f`."],"~$prepend-space",["^ ","^4Z",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",101,"^8",7,"^9",101,"^:",20,"^4[",["^1@",["^50",["^1@",[["^51","~$n"],["^51"]]]]],"^52","DEPRECATED: renamed to [[insert-space-left]].","^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51","~$n"],["^51"]],"^4[",["^1@",[["^51","~$n"],["^51"]]],"^58",["^1@",[null,null]]]],"^V","^1T","^6","rewrite_clj/zip/whitespace.cljc","^:",20,"^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51","~$n"],["^51"]],"^4[",["^1@",[["^51","~$n"],["^51"]]],"^58",["^1@",[null,null]]],"^57",[["^51","~$n"],["^51"]],"^59",null,"^55",2,"^58",["^1@",[null,null]],"^8",1,"^54",false,"^5:",[["^ ","^55",2,"^54",false,"^5;",["^U",[null,"^5=","^5<","^5>","^5?"]]],["^ ","^55",1,"^54",false,"^5;",["^U",[null,"^5=","^5<","^5>","^5?"]]]],"^7",101,"^9",101,"^56",2,"^5@",true,"^4[",["^1@",[["^51","~$n"],["^51"]]],"^52","DEPRECATED: renamed to [[insert-space-left]]."],"~$append-newline",["^ ","^4Z",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",122,"^8",7,"^9",122,"^:",21,"^4[",["^1@",["^50",["^1@",[["^51","~$n"],["^51"]]]]],"^52","DEPRECATED: renamed to [[insert-newline-right]].","^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51","~$n"],["^51"]],"^4[",["^1@",[["^51","~$n"],["^51"]]],"^58",["^1@",[null,null]]]],"^V","^1X","^6","rewrite_clj/zip/whitespace.cljc","^:",21,"^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51","~$n"],["^51"]],"^4[",["^1@",[["^51","~$n"],["^51"]]],"^58",["^1@",[null,null]]],"^57",[["^51","~$n"],["^51"]],"^59",null,"^55",2,"^58",["^1@",[null,null]],"^8",1,"^54",false,"^5:",[["^ ","^55",2,"^54",false,"^5;",["^U",["^5=","^5<","^5>","^5?"]]],["^ ","^55",1,"^54",false,"^5;",["^U",["^5=","^5<","^5>","^5?"]]]],"^7",122,"^9",122,"^56",2,"^5@",true,"^4[",["^1@",[["^51","~$n"],["^51"]]],"^52","DEPRECATED: renamed to [[insert-newline-right]]."],"~$prepend-newline",["^ ","^4Z",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",115,"^8",7,"^9",115,"^:",22,"^4[",["^1@",["^50",["^1@",[["^51","~$n"],["^51"]]]]],"^52","DEPRECATED: renamed to [[insert-newline-left]].","^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51","~$n"],["^51"]],"^4[",["^1@",[["^51","~$n"],["^51"]]],"^58",["^1@",[null,null]]]],"^V","^1[","^6","rewrite_clj/zip/whitespace.cljc","^:",22,"^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51","~$n"],["^51"]],"^4[",["^1@",[["^51","~$n"],["^51"]]],"^58",["^1@",[null,null]]],"^57",[["^51","~$n"],["^51"]],"^59",null,"^55",2,"^58",["^1@",[null,null]],"^8",1,"^54",false,"^5:",[["^ ","^55",2,"^54",false,"^5;",["^U",["^5=","^5<","^5>","^5?"]]],["^ ","^55",1,"^54",false,"^5;",["^U",["^5=","^5<","^5>","^5?"]]]],"^7",115,"^9",115,"^56",2,"^5@",true,"^4[",["^1@",[["^51","~$n"],["^51"]]],"^52","DEPRECATED: renamed to [[insert-newline-left]]."],"~$append-space",["^ ","^4Z",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",108,"^8",7,"^9",108,"^:",19,"^4[",["^1@",["^50",["^1@",[["^51","~$n"],["^51"]]]]],"^52","DEPRECATED: renamed to [[insert-space-right]].","^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51","~$n"],["^51"]],"^4[",["^1@",[["^51","~$n"],["^51"]]],"^58",["^1@",[null,null]]]],"^V","^22","^6","rewrite_clj/zip/whitespace.cljc","^:",19,"^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51","~$n"],["^51"]],"^4[",["^1@",[["^51","~$n"],["^51"]]],"^58",["^1@",[null,null]]],"^57",[["^51","~$n"],["^51"]],"^59",null,"^55",2,"^58",["^1@",[null,null]],"^8",1,"^54",false,"^5:",[["^ ","^55",2,"^54",false,"^5;",["^U",[null,"^5=","^5<","^5>","^5?"]]],["^ ","^55",1,"^54",false,"^5;",["^U",[null,"^5=","^5<","^5>","^5?"]]]],"^7",108,"^9",108,"^56",2,"^5@",true,"^4[",["^1@",[["^51","~$n"],["^51"]]],"^52","DEPRECATED: renamed to [[insert-space-right]]."],"~$skip-whitespace-left",["^ ","^4Z",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",58,"^8",7,"^9",58,"^:",27,"^4[",["^1@",["^50",["^1@",[["^51"]]]]],"^52","Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc` traversing left."],"^V","^2;","^6","rewrite_clj/zip/whitespace.cljc","^:",27,"^57",["^1@",[["^51"]]],"^59",null,"^58",["^1@",[null,null]],"^8",1,"^54",false,"^7",58,"^5B",["^U",["^5<","^5?"]],"^9",58,"^56",1,"^5@",true,"^4[",["^1@",["^50",["^1@",[["^51"]]]]],"^52","Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc` traversing left."],"~$insert-space-right",["^ ","^4Z",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",75,"^8",7,"^9",75,"^:",25,"^4[",["^1@",["^50",["^1@",[["^51"],["^51","~$n"]]]]],"^52","Return zipper with `n` space whitespace node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1.","^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51"],["^51","~$n"]],"^4[",["^1@",[["^51"],["^51","~$n"]]],"^58",["^1@",[null,null]]]],"^V","^2>","^6","rewrite_clj/zip/whitespace.cljc","^:",25,"^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51"],["^51","~$n"]],"^4[",["^1@",[["^51"],["^51","~$n"]]],"^58",["^1@",[null,null]]],"^57",[["^51"],["^51","~$n"]],"^59",null,"^55",2,"^58",["^1@",[null,null]],"^8",1,"^54",false,"^5:",[["^ ","^55",1,"^54",false,"^5;","^5<"],["^ ","^55",2,"^54",false,"^5;",["^U",[null,"^5=","^5<","^5>","^5?"]]]],"^7",75,"^9",75,"^56",2,"^5@",true,"^4[",["^1@",[["^51"],["^51","~$n"]]],"^52","Return zipper with `n` space whitespace node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],"~$skip-whitespace",["^ ","^4Z",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",50,"^8",7,"^9",50,"^:",22,"^4[",["^1@",["^50",["^1@",[["^51"],["~$f","^51"]]]]],"^52","Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc`\n   and traversing by function `f`.\n\n   `f` defaults to [[rewrite-clj.zip/right]]","^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51"],["~$f","^51"]],"^4[",["^1@",[["^51"],["~$f","^51"]]],"^58",["^1@",[null,null]]]],"^V","^2J","^6","rewrite_clj/zip/whitespace.cljc","^:",22,"^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51"],["~$f","^51"]],"^4[",["^1@",[["^51"],["~$f","^51"]]],"^58",["^1@",[null,null]]],"^57",[["^51"],["~$f","^51"]],"^59",null,"^55",2,"^58",["^1@",[null,null]],"^8",1,"^54",false,"^5:",[["^ ","^55",1,"^54",false,"^5;","^5<"],["^ ","^55",2,"^54",false,"^5;",["^U",["^5<","^5?"]]]],"^7",50,"^9",50,"^56",2,"^5@",true,"^4[",["^1@",[["^51"],["~$f","^51"]]],"^52","Return zipper with location moved to first non-whitespace/non-comment starting from current node in `zloc`\n   and traversing by function `f`.\n\n   `f` defaults to [[rewrite-clj.zip/right]]"],"~$comment?",["^ ","^4Z",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",21,"^8",7,"^9",21,"^:",15,"^4[",["^1@",["^50",["^1@",[["^51"]]]]],"^52","Returns true when the current node in `zloc` is a comment."],"^V","^1U","^6","rewrite_clj/zip/whitespace.cljc","^:",15,"^57",["^1@",[["^51"]]],"^59",null,"^58",["^1@",[null,null]],"^8",1,"^54",false,"^7",21,"^5B",["^U",["^5C","^5?"]],"^9",21,"^56",1,"^5@",true,"^4[",["^1@",["^50",["^1@",[["^51"]]]]],"^52","Returns true when the current node in `zloc` is a comment."],"~$whitespace-not-linebreak?",["^ ","^4Z",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",26,"^8",7,"^9",26,"^:",32,"^4[",["^1@",["^50",["^1@",[["^51"]]]]],"^52","Returns true when current node in `zloc` is a whitespace but not a linebreak."],"^V","^1W","^6","rewrite_clj/zip/whitespace.cljc","^:",32,"^57",["^1@",[["^51"]]],"^59",null,"^58",["^1@",[null,null]],"^8",1,"^54",false,"^7",26,"^5B",["^U",["^5C","^5?"]],"^9",26,"^56",1,"^5@",true,"^4[",["^1@",["^50",["^1@",[["^51"]]]]],"^52","Returns true when current node in `zloc` is a whitespace but not a linebreak."],"~$insert-newline-right",["^ ","^4Z",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",92,"^8",7,"^9",92,"^:",27,"^4[",["^1@",["^50",["^1@",[["^51"],["^51","~$n"]]]]],"^52","Return zipper with `n` newlines node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1.","^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51"],["^51","~$n"]],"^4[",["^1@",[["^51"],["^51","~$n"]]],"^58",["^1@",[null,null]]]],"^V","^1Y","^6","rewrite_clj/zip/whitespace.cljc","^:",27,"^53",["^ ","^54",false,"^55",2,"^56",2,"^57",[["^51"],["^51","~$n"]],"^4[",["^1@",[["^51"],["^51","~$n"]]],"^58",["^1@",[null,null]]],"^57",[["^51"],["^51","~$n"]],"^59",null,"^55",2,"^58",["^1@",[null,null]],"^8",1,"^54",false,"^5:",[["^ ","^55",1,"^54",false,"^5;","^5<"],["^ ","^55",2,"^54",false,"^5;",["^U",["^5=","^5<","^5>","^5?"]]]],"^7",92,"^9",92,"^56",2,"^5@",true,"^4[",["^1@",[["^51"],["^51","~$n"]]],"^52","Return zipper with `n` newlines node inserted to the right of the current node in `zloc`, without moving location.\n   `n` defaults to 1."],"~$whitespace-or-comment?",["^ ","^4Z",null,"^5",["^ ","^6","rewrite_clj/zip/whitespace.cljc","^7",33,"^8",7,"^9",33,"^:",29,"^4[",["^1@",["^50",["^1@",[["^51"]]]]],"^52","Returns true when current node in `zloc` is whitespace or a comment."],"^V","^23","^6","rewrite_clj/zip/whitespace.cljc","^:",29,"^57",["^1@",[["^51"]]],"^59",null,"^58",["^1@",[null,null]],"^8",1,"^54",false,"^7",33,"^5B",["^U",["^5C","^5?"]],"^9",33,"^56",1,"^5@",true,"^4[",["^1@",["^50",["^1@",[["^51"]]]]],"^52","Returns true when current node in `zloc` is whitespace or a comment."]],"^1>",["^ ","^15","^15","^19","^19","^1:","^19"],"^1C",["^ ","^1<",["^U",[]]],"^1D",["^ "],"^1E",["^16","^15","^14","^12","^13","^19"]],"^Z","^W","~:ns-specs",["^ "],"~:ns-spec-vars",["^U",[]],"~:compiler-options",["^2L",[["^5U","~:static-fns"],true,["^5U","~:shadow-tweaks"],null,["^5U","~:source-map-inline"],null,["^5U","~:elide-asserts"],false,["^5U","~:optimize-constants"],null,["^5U","^1J"],null,["^5U","~:external-config"],null,["^5U","~:tooling-config"],null,["^5U","~:emit-constants"],null,["^5U","~:load-tests"],null,["^5U","~:form-size-threshold"],null,["^5U","~:global-goog-object&array"],null,["^5U","~:data-readers"],null,["^5U","~:infer-externs"],"~:auto",["^5U","^1L"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5U","~:fn-invoke-direct"],null,["^5U","~:source-map"],"/dev/null"]]]