["^ ","~:output",["^ ","~:js","goog.provide('sci.impl.parser');\nsci.impl.parser.eof = new cljs.core.Keyword(\"sci.impl.parser.edamame\",\"eof\",\"sci.impl.parser.edamame/eof\",-917261517);\nsci.impl.parser.read_eval = sci.impl.vars.new_var.cljs$core$IFn$_invoke$arity$3(new cljs.core.Symbol(null,\"*read-eval\",\"*read-eval\",-538712777,null),true,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),sci.impl.vars.clojure_core_ns,new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null));\nsci.impl.parser.data_readers = sci.impl.vars.new_var.cljs$core$IFn$_invoke$arity$3(new cljs.core.Symbol(null,\"*default-data-reader-fn*\",\"*default-data-reader-fn*\",758795499,null),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),sci.impl.vars.clojure_core_ns,new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null));\nsci.impl.parser.default_data_reader_fn = sci.impl.vars.new_var.cljs$core$IFn$_invoke$arity$3(new cljs.core.Symbol(null,\"*default-data-reader-fn*\",\"*default-data-reader-fn*\",758795499,null),null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),sci.impl.vars.clojure_core_ns,new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null));\nsci.impl.parser.reader_resolver = sci.impl.vars.new_var.cljs$core$IFn$_invoke$arity$3(new cljs.core.Symbol(null,\"*reader-resolver*\",\"*reader-resolver*\",309718590,null),null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),sci.impl.vars.clojure_core_ns,new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null));\nsci.impl.parser.default_opts = edamame.core.normalize_opts(new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"all\",\"all\",892129742),true,new cljs.core.Keyword(null,\"read-eval\",\"read-eval\",1788733932),false,new cljs.core.Keyword(null,\"row-key\",\"row-key\",-1189010712),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"col-key\",\"col-key\",-2009675766),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"read-cond\",\"read-cond\",1056899244),new cljs.core.Keyword(null,\"allow\",\"allow\",-1857325745),new cljs.core.Keyword(null,\"location?\",\"location?\",425878086),(function (obj){\nreturn (((obj instanceof cljs.core.Symbol)) || (cljs.core.seq_QMARK_(obj)));\n}),new cljs.core.Keyword(null,\"end-location\",\"end-location\",-1199449467),false], null));\nsci.impl.parser.var__GT_sym = (function sci$impl$parser$var__GT_sym(v){\nvar temp__5804__auto__ = cljs.core.meta(v);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar m = temp__5804__auto__;\nvar temp__5804__auto____$1 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(m);\nif(cljs.core.truth_(temp__5804__auto____$1)){\nvar var_name = temp__5804__auto____$1;\nvar temp__5804__auto____$2 = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(m);\nif(cljs.core.truth_(temp__5804__auto____$2)){\nvar ns = temp__5804__auto____$2;\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sci.impl.vars.getName(ns)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(var_name));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\nsci.impl.parser.fully_qualify = (function sci$impl$parser$fully_qualify(ctx,sym){\nvar env = cljs.core.deref(new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(ctx));\nvar sym_ns = (function (){var temp__5804__auto__ = cljs.core.namespace(sym);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar n = temp__5804__auto__;\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(n);\n} else {\nreturn null;\n}\n})();\nvar sym_name_str = cljs.core.name(sym);\nvar current_ns = sci.impl.vars.current_ns_name();\nvar current_ns_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns);\nvar namespaces = cljs.core.get.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"namespaces\",\"namespaces\",-1444157469));\nvar the_current_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(namespaces,current_ns);\nvar aliases = new cljs.core.Keyword(null,\"aliases\",\"aliases\",1346874714).cljs$core$IFn$_invoke$arity$1(the_current_ns);\nvar ret = ((cljs.core.not(sym_ns))?(function (){var or__5045__auto__ = (function (){var temp__5804__auto__ = new cljs.core.Keyword(null,\"refers\",\"refers\",158076809).cljs$core$IFn$_invoke$arity$1(the_current_ns);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar refers = temp__5804__auto__;\nvar temp__5804__auto____$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(refers,sym);\nif(cljs.core.truth_(temp__5804__auto____$1)){\nvar v = temp__5804__auto____$1;\nreturn sci.impl.parser.var__GT_sym(v);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n})();\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 = (function (){var temp__5804__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(the_current_ns,sym);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar v = temp__5804__auto__;\nreturn sci.impl.parser.var__GT_sym(v);\n} else {\nreturn null;\n}\n})();\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nvar or__5045__auto____$2 = ((((((cljs.core.contains_QMARK_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.Symbol(null,\"clojure.core\",\"clojure.core\",-189332625,null)),sym)) && (cljs.core.not((function (){var G__49734 = the_current_ns;\nvar G__49734__$1 = (((G__49734 == null))?null:new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553).cljs$core$IFn$_invoke$arity$1(G__49734));\nvar G__49734__$2 = (((G__49734__$1 == null))?null:cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__49734__$1,new cljs.core.Symbol(null,\"clojure.core\",\"clojure.core\",-189332625,null)));\nvar G__49734__$3 = (((G__49734__$2 == null))?null:new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334).cljs$core$IFn$_invoke$arity$1(G__49734__$2));\nif((G__49734__$3 == null)){\nreturn null;\n} else {\nreturn cljs.core.contains_QMARK_(G__49734__$3,sym);\n}\n})())))) || (cljs.core.contains_QMARK_(sci.impl.utils.ana_macros,sym))))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"clojure.core\",sym_name_str):null);\nif(cljs.core.truth_(or__5045__auto____$2)){\nreturn or__5045__auto____$2;\n} else {\nvar or__5045__auto____$3 = sci.impl.interop.fully_qualify_class(ctx,sym);\nif(cljs.core.truth_(or__5045__auto____$3)){\nreturn or__5045__auto____$3;\n} else {\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(current_ns_str,sym_name_str);\n}\n}\n}\n}\n})():(cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"namespaces\",\"namespaces\",-1444157469),sym_ns], null)))?sym:(function (){var temp__5802__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(aliases,sym_ns);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar ns = temp__5802__auto__;\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),sym_name_str);\n} else {\nreturn sym;\n}\n})()));\nreturn ret;\n});\nsci.impl.parser.throw_eval_read = (function sci$impl$parser$throw_eval_read(_){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"EvalReader not allowed when *read-eval* is false.\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(\"sci.error\",\"parse\",\"sci.error/parse\",-264338844)], null));\n});\nsci.impl.parser.auto_resolve = (function sci$impl$parser$auto_resolve(ctx,opts){\nvar or__5045__auto__ = new cljs.core.Keyword(null,\"auto-resolve\",\"auto-resolve\",1851201983).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar env = new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(ctx);\nvar env_val = cljs.core.deref(env);\nvar current_ns = sci.impl.vars.current_ns_name();\nvar the_current_ns = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env_val,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"namespaces\",\"namespaces\",-1444157469),current_ns], null));\nvar aliases = new cljs.core.Keyword(null,\"aliases\",\"aliases\",1346874714).cljs$core$IFn$_invoke$arity$1(the_current_ns);\nvar auto_resolve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(aliases,new cljs.core.Keyword(null,\"current\",\"current\",-1088038603),current_ns);\nreturn auto_resolve;\n}\n});\nsci.impl.parser.parse_next = (function sci$impl$parser$parse_next(var_args){\nvar G__49737 = arguments.length;\nswitch (G__49737) {\ncase 2:\nreturn sci.impl.parser.parse_next.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn sci.impl.parser.parse_next.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(sci.impl.parser.parse_next.cljs$core$IFn$_invoke$arity$2 = (function (ctx,r){\nreturn sci.impl.parser.parse_next.cljs$core$IFn$_invoke$arity$3(ctx,r,null);\n}));\n\n(sci.impl.parser.parse_next.cljs$core$IFn$_invoke$arity$3 = (function (ctx,r,opts){\nvar features = new cljs.core.Keyword(null,\"features\",\"features\",-1146962336).cljs$core$IFn$_invoke$arity$1(ctx);\nvar readers = new cljs.core.Keyword(null,\"readers\",\"readers\",-2118263030).cljs$core$IFn$_invoke$arity$1(ctx);\nvar readers__$1 = ((sci.impl.vars.var_QMARK_(readers))?cljs.core.deref(readers):readers);\nvar auto_resolve = sci.impl.parser.auto_resolve(ctx,opts);\nvar parse_opts = (function (){var G__49738 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(sci.impl.parser.default_opts,new cljs.core.Keyword(null,\"features\",\"features\",-1146962336),features,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"auto-resolve\",\"auto-resolve\",1851201983),auto_resolve,new cljs.core.Keyword(null,\"syntax-quote\",\"syntax-quote\",-1233164847),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"resolve-symbol\",\"resolve-symbol\",-319166964),(function (p1__49735_SHARP_){\nreturn sci.impl.parser.fully_qualify(ctx,p1__49735_SHARP_);\n})], null),new cljs.core.Keyword(null,\"readers\",\"readers\",-2118263030),(function (t){\nvar or__5045__auto__ = (function (){var and__5043__auto__ = readers__$1;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (readers__$1.cljs$core$IFn$_invoke$arity$1 ? readers__$1.cljs$core$IFn$_invoke$arity$1(t) : readers__$1.call(null,t));\n} else {\nreturn and__5043__auto__;\n}\n})();\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 = (function (){var fexpr__49739 = cljs.core.deref(sci.impl.parser.data_readers);\nreturn (fexpr__49739.cljs$core$IFn$_invoke$arity$1 ? fexpr__49739.cljs$core$IFn$_invoke$arity$1(t) : fexpr__49739.call(null,t));\n})();\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nvar or__5045__auto____$2 = (function (){var G__49740 = (function (){var G__49742 = ctx;\nvar G__49743 = cljs.core.PersistentArrayMap.EMPTY;\nvar G__49744 = t;\nvar fexpr__49741 = cljs.core.deref(sci.impl.utils.eval_resolve_state);\nreturn (fexpr__49741.cljs$core$IFn$_invoke$arity$3 ? fexpr__49741.cljs$core$IFn$_invoke$arity$3(G__49742,G__49743,G__49744) : fexpr__49741.call(null,G__49742,G__49743,G__49744));\n})();\nvar G__49740__$1 = (((G__49740 == null))?null:cljs.core.meta(G__49740));\nif((G__49740__$1 == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(\"sci.impl.record\",\"map-constructor\",\"sci.impl.record/map-constructor\",1072184780).cljs$core$IFn$_invoke$arity$1(G__49740__$1);\n}\n})();\nif(cljs.core.truth_(or__5045__auto____$2)){\nreturn or__5045__auto____$2;\n} else {\nvar temp__5804__auto__ = cljs.core.deref(sci.impl.parser.default_data_reader_fn);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar f = temp__5804__auto__;\nreturn (function (form){\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(t,form) : f.call(null,t,form));\n});\n} else {\nreturn null;\n}\n}\n}\n}\n}),new cljs.core.Keyword(null,\"read-eval\",\"read-eval\",1788733932),(cljs.core.truth_(cljs.core.deref(sci.impl.parser.read_eval))?(function (x){\nreturn sci.impl.utils.eval(ctx,x);\n}):sci.impl.parser.throw_eval_read)], 0));\nif(cljs.core.truth_(opts)){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([G__49738,opts], 0));\n} else {\nreturn G__49738;\n}\n})();\nvar ret = (function (){try{var v = edamame.core.parse_next.cljs$core$IFn$_invoke$arity$2(r,parse_opts);\nif(cljs.core.truth_((sci.impl.utils.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2 ? sci.impl.utils.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2(v,new cljs.core.Keyword(\"edamame.core\",\"eof\",\"edamame.core/eof\",1855384188)) : sci.impl.utils.kw_identical_QMARK_.call(null,v,new cljs.core.Keyword(\"edamame.core\",\"eof\",\"edamame.core/eof\",1855384188))))){\nreturn new cljs.core.Keyword(\"sci.impl.parser.edamame\",\"eof\",\"sci.impl.parser.edamame/eof\",-917261517);\n} else {\nreturn v;\n}\n}catch (e49745){if((e49745 instanceof cljs.core.ExceptionInfo)){\nvar e = e49745;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(e.message,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.ex_data(e),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(\"sci.error\",\"parse\",\"sci.error/parse\",-264338844),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"phase\",\"phase\",575722892),\"parse\",new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),cljs.core.deref(sci.impl.vars.current_file)], 0)),e);\n} else {\nthrow e49745;\n\n}\n}})();\nreturn ret;\n}));\n\n(sci.impl.parser.parse_next.cljs$lang$maxFixedArity = 3);\n\nsci.impl.parser.reader = (function sci$impl$parser$reader(x){\nvar string_reader = cljs.tools.reader.reader_types.string_reader(x);\nvar buf_len = (1);\nvar pushback_reader = (new cljs.tools.reader.reader_types.PushbackReader(string_reader,cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(buf_len),buf_len,buf_len));\nreturn cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1(pushback_reader);\n});\nsci.impl.parser.get_line_number = (function sci$impl$parser$get_line_number(reader){\nreturn cljs.tools.reader.reader_types.get_line_number(reader);\n});\nsci.impl.parser.get_column_number = (function sci$impl$parser$get_column_number(reader){\nreturn cljs.tools.reader.reader_types.get_column_number(reader);\n});\nsci.impl.parser.parse_string = (function sci$impl$parser$parse_string(ctx,s){\nvar r = sci.impl.parser.reader(s);\nvar v = sci.impl.parser.parse_next.cljs$core$IFn$_invoke$arity$2(ctx,r);\nif(cljs.core.truth_((sci.impl.utils.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2 ? sci.impl.utils.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"sci.impl.parser.edamame\",\"eof\",\"sci.impl.parser.edamame/eof\",-917261517),v) : sci.impl.utils.kw_identical_QMARK_.call(null,new cljs.core.Keyword(\"sci.impl.parser.edamame\",\"eof\",\"sci.impl.parser.edamame/eof\",-917261517),v)))){\nreturn null;\n} else {\nreturn v;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:no-doc",true,"~:file","sci/impl/parser.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",20],"~:ns-aliases",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.tools.reader.impl.utils","~$cljs.tools.reader.impl.utils","~$cljs.loader","~$shadow.loader","~$clojure.tools.reader.impl.commons","~$cljs.tools.reader.impl.commons","~$clojure.tools.reader.impl.errors","~$cljs.tools.reader.impl.errors","~$react","~$module$node_modules$react$index","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.tools.reader.edn","~$cljs.tools.reader.edn","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.repl","~$cljs.repl"],"~:use-macros",null,"~:excludes",["~#set",["~$eval","~$read-string"]],"~:name","~$sci.impl.parser","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$vars","~$sci.impl.vars","~$edamame.core","^15","~$r","^J","~$cljs.core","^16","^I","^J","~$goog","^17","^J","^J","~$sci.impl.interop","^18","^14","^14","~$sci.impl.utils","^19","~$interop","^18","~$utils","^19","~$edamame","^15"],"~:seen",["^U",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^16","^16","^13","^14","^14","^14"],"~:form",["~#list",["~$ns","^Y",["^ ","^6",true],["^1B",["~:refer-clojure","~:exclude",["^W","^V"]]],["^1B",["^1>",["^I","~:as","~$r"],["^15","^1F","^1<"],["^18","^1F","^1:"],["^19","^1F","^1;"],["^14","^1F","^13"]]]]],"~:flags",["^ ","^1>",["^U",[]]],"~:js-deps",["^ "],"~:deps",["^17","^16","^J","^15","^18","^19","^14"]],"^10","^Y","~:resource-id",["~:shadow.build.classpath/resource","sci/impl/parser.cljc"],"~:compiled-at",1666857670388,"^Z",["^ ","^13","^14","^15","^15","~$r","^J","^16","^16","^I","^J","^17","^17","^J","^J","^18","^18","^14","^14","^19","^19","^1:","^18","^1;","^19","^1<","^15"],"~:resource-name","sci/impl/parser.cljc","~:warnings",[],"~:source","(ns sci.impl.parser\n  {:no-doc true}\n  (:refer-clojure :exclude [read-string eval])\n  (:require\n   [clojure.tools.reader.reader-types :as r]\n   [edamame.core :as edamame]\n   [sci.impl.interop :as interop]\n   [sci.impl.utils :as utils]\n   [sci.impl.vars :as vars]))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n(def ^:const eof :sci.impl.parser.edamame/eof)\n\n(def read-eval\n  (vars/new-var '*read-eval true {:ns vars/clojure-core-ns\n                                  :dynamic true}))\n\n(def data-readers\n  (vars/new-var '*default-data-reader-fn* {}\n                {:ns vars/clojure-core-ns\n                 :dynamic true}))\n\n(def default-data-reader-fn\n  (vars/new-var '*default-data-reader-fn* nil\n                {:ns vars/clojure-core-ns\n                 :dynamic true}))\n\n(def reader-resolver\n  (vars/new-var '*reader-resolver* nil\n                {:ns vars/clojure-core-ns\n                 :dynamic true}))\n\n(def default-opts\n  (edamame/normalize-opts\n   {:all true\n    :read-eval false\n    :row-key :line\n    :col-key :column\n    :read-cond :allow\n    :location? (fn [obj]\n                 (or\n                  ;; for fine-grained error messages during analysis we also add\n                  ;; locations to symbols. This adds about 10% to parse/analysis\n                  ;; time.\n\n                  ;; $ tmp/bb-only-seq-and-sym-locs tmp/meander.clj\n                  ;; \"Elapsed time: 120.448655 msecs\"\n\n                  ;; $ tmp/bb-only-seq-locs tmp/meander.clj\n                  ;; \"Elapsed time: 110.869661 msecs\"\n\n                  (symbol? obj)\n                  ;; same as clojure\n                  (seq? obj)))\n    :end-location false}))\n\n(defn var->sym [v]\n  (when-let [m (meta v)]\n    (when-let [var-name (:name m)]\n      (when-let [ns (:ns m)]\n        (symbol (str (vars/getName ns))\n                (str var-name))))))\n\n(defn fully-qualify [ctx sym]\n  (let [env @(:env ctx)\n        sym-ns (when-let [n (namespace sym)]\n                 (symbol n))\n        sym-name-str (name sym)\n        current-ns (vars/current-ns-name)\n        current-ns-str (str current-ns)\n        namespaces (get env :namespaces)\n        the-current-ns (get namespaces current-ns)\n        aliases (:aliases the-current-ns)\n        ret (if-not sym-ns\n              (or (when-let [refers (:refers the-current-ns)]\n                    (when-let [v (get refers sym)]\n                      (var->sym v)))\n                  (when-let [v (get the-current-ns sym)]\n                    (var->sym v))\n                  (when (or (and (contains? (get namespaces 'clojure.core) sym)\n                                 ;; only valid when the symbol isn't excluded\n                                 (not (some-> the-current-ns\n                                              :refer\n                                              (get 'clojure.core)\n                                              :exclude\n                                              (contains? sym ))))\n                            (contains? utils/ana-macros sym))\n                    (symbol \"clojure.core\" sym-name-str))\n                  (interop/fully-qualify-class ctx sym)\n                  ;; all unresolvable symbols all resolved in the current namespace\n                  (symbol current-ns-str sym-name-str))\n              (if (get-in env [:namespaces sym-ns])\n                sym\n                (if-let [ns (get aliases sym-ns)]\n                  (symbol (str ns) sym-name-str)\n                  sym)))]\n    ret))\n\n(defn throw-eval-read [_]\n  (throw (ex-info \"EvalReader not allowed when *read-eval* is false.\"\n                  {:type :sci.error/parse})))\n\n(defn auto-resolve [ctx opts]\n  (or (:auto-resolve opts)\n      (let [env (:env ctx)\n            env-val @env\n            current-ns (vars/current-ns-name)\n            the-current-ns (get-in env-val [:namespaces current-ns])\n            aliases (:aliases the-current-ns)\n            auto-resolve (assoc aliases :current current-ns)]\n        auto-resolve)))\n\n(defn parse-next\n  ([ctx r]\n   (parse-next ctx r nil))\n  ([ctx r opts]\n   (let [features (:features ctx)\n         readers (:readers ctx)\n         readers (if (vars/var? readers) @readers readers)\n         auto-resolve (auto-resolve ctx opts)\n         parse-opts (cond-> (assoc default-opts\n                                   :features features\n                                   :auto-resolve auto-resolve\n                                   :syntax-quote {:resolve-symbol #(fully-qualify ctx %)}\n                                   :readers (fn [t]\n                                              (or (and readers (readers t))\n                                                  (@data-readers t)\n                                                  (some-> (@utils/eval-resolve-state ctx {} t)\n                                                          meta\n                                                          :sci.impl.record/map-constructor)\n                                                  (when-let [f @default-data-reader-fn]\n                                                    (fn [form]\n                                                      (f t form)))))\n                                   :read-eval (if @read-eval\n                                                (fn [x]\n                                                  (utils/eval ctx x))\n                                                throw-eval-read))\n                      opts (merge opts))\n         ret (try (let [v (edamame/parse-next r parse-opts)]\n                    (if (utils/kw-identical? v :edamame.core/eof)\n                      eof\n                      v))\n                  (catch #?(:clj clojure.lang.ExceptionInfo\n                            :cljs cljs.core/ExceptionInfo) e\n                    (throw (ex-info #?(:clj (.getMessage e)\n                                       :cljs (.-message e))\n                                    (assoc (ex-data e)\n                                           :type :sci.error/parse\n                                           :phase \"parse\"\n                                           :file @vars/current-file)\n                                    e))))]\n     ret)))\n\n(defn reader [x]\n  #?(:clj (r/indexing-push-back-reader (r/push-back-reader x))\n     :cljs (let [string-reader (r/string-reader x)\n                 buf-len 1\n                 pushback-reader (r/PushbackReader. string-reader\n                                                    (object-array buf-len)\n                                                    buf-len buf-len)]\n             (r/indexing-push-back-reader pushback-reader))))\n\n(defn get-line-number [reader]\n  (r/get-line-number reader))\n\n(defn get-column-number [reader]\n  (r/get-column-number reader))\n\n(defn parse-string\n  ([ctx s]\n   (let [r (reader s)\n         v (parse-next ctx r)]\n     (if (utils/kw-identical? eof v) nil v))))\n\n;;;; Scratch\n\n(comment\n  )\n","~:reader-features",["^U",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAYA,sBAAA,tBAAaA;AAEb,AAAKC,4BACH,oDAAA,AAAA,qEAAA,KAAA,2CAAA,8EAAA,0DAAA,jTAACC,yNAAmCC;AAGtC,AAAKC,+BACH,oDAAA,AAAA,gGAAA,mCAAA,2CAAA,8EAAA,0DAAA,1WAACF,kRACkBC;AAGrB,AAAKE,yCACH,oDAAA,AAAA,gGAAA,KAAA,2CAAA,8EAAA,0DAAA,5UAACH,oPACkBC;AAGrB,AAAKG,kCACH,oDAAA,AAAA,kFAAA,KAAA,2CAAA,8EAAA,0DAAA,9TAACJ,sOACkBC;AAGrB,AAAKI,+BACH,4BAAA,2CAAA,kDAAA,KAAA,+DAAA,MAAA,4DAAA,oDAAA,4DAAA,yDAAA,+DAAA,wDAAA,/hBAACC,6lBAMY,WAAKC;AAAL,AACE,SAWC,gBAAAC,fAASD,sCAET,AAACE,qBAAKF;GApBtB,sEAAA;AAuBF,8BAAA,9BAAMG,oEAAUC;AAAhB,AACE,IAAAC,qBAAa,AAACE,eAAKH;AAAnB,AAAA,oBAAAC;AAAA,AAAA,QAAAA,JAAWC;AAAX,AACE,IAAAD,yBAAoB,AAAA,mFAAOC;AAA3B,AAAA,oBAAAD;AAAA,AAAA,eAAAA,XAAWG;AAAX,AACE,IAAAH,yBAAc,AAAA,8EAAKC;AAAnB,AAAA,oBAAAD;AAAA,AAAA,SAAAA,LAAWI;AAAX,AACE,OAACC,+CAAO,4CAAK,AAACC,sBAAaF,KACnB,4CAAKD;;AAFf;;;AADF;;;AADF;;;AAMF,gCAAA,hCAAMI,wEAAeC,IAAIC;AAAzB,AACE,UAAA,AAAAC,NAAMC,sBAAK,AAAA,kFAAMH;IACXI,SAAO,iBAAAZ,qBAAa,AAACc,oBAAUL;AAAxB,AAAA,oBAAAT;AAAA,AAAA,QAAAA,JAAWa;AAAX,AACE,OAACR,+CAAOQ;;AADV;;;IAEPE,eAAa,AAACC,eAAKP;IACnBQ,aAAW,AAACC;IACZC,iBAAe,4CAAKF;IACpBG,aAAW,gDAAA,hDAACC,4CAAIV;IAChBW,iBAAe,AAACD,4CAAID,WAAWH;IAC/BM,UAAQ,AAAA,yFAAUD;IAClBE,MAAI,EAAA,AAAAC,cAAQb,SACN,iBAAAc,mBAAI,iBAAA1B,qBAAkB,AAAA,sFAASsB;AAA3B,AAAA,oBAAAtB;AAAA,AAAA,aAAAA,TAAW2B;AAAX,AACE,IAAA3B,yBAAa,AAACqB,4CAAIM,OAAOlB;AAAzB,AAAA,oBAAAT;AAAA,AAAA,QAAAA,JAAWD;AAAX,AACE,OAACD,4BAASC;;AADZ;;;AADF;;;AAAJ,AAAA,oBAAA2B;AAAAA;;AAAA,IAAAA,uBAGI,iBAAA1B,qBAAa,AAACqB,4CAAIC,eAAeb;AAAjC,AAAA,oBAAAT;AAAA,AAAA,QAAAA,JAAWD;AAAX,AACE,OAACD,4BAASC;;AADZ;;;AAHJ,AAAA,oBAAA2B;AAAAA;;AAAA,IAAAA,uBAKI,EAAM,EAAI,EAAK,AAACE,0BAAU,uDAAA,AAAA,vDAACP,4CAAID,qFAA0BX,UAE1C,AAACgB,cAAI,iBAAAI,WAAQP;IAARO,eAAA,EAAA,CAAAA,YAAA,OAAA,KAAA,AAAA,qFAAAA;IAAAA,eAAA,EAAA,CAAAA,gBAAA,OAAA,KAEQ,4CAAAA,aAAA,AAAA,zDAACR;IAFTQ,eAAA,EAAA,CAAAA,gBAAA,OAAA,KAAA,AAAA,0FAAAA;AAAA,AAAA,GAAA,CAAAA,gBAAA;AAAA;;AAIQ,iCAAAA,1BAACD,uCAAUnB;;yEANvC,4EAAA,xIAOU,AAACmB,0BAAUE,0BAAiBrB,QACpC,+CAAA,/CAACJ,8DAAsBU;AAb7B,AAAA,oBAAAW;AAAAA;;AAAA,IAAAA,uBAcI,AAACK,qCAA4BvB,IAAIC;AAdrC,AAAA,oBAAAiB;AAAAA;;AAgBI,OAACrB,+CAAOc,eAAeJ;;;;;KAC3B,kBAAI,mDAAA,mFAAA,tIAACiB,+CAAOrB,yJAAiBC,iBAC3BH,IACA,iBAAAwB,qBAAY,AAACZ,4CAAIE,QAAQX;AAAzB,AAAA,oBAAAqB;AAAA,SAAAA,LAAS7B;AAAT,AACE,OAACC,+CAAO,4CAAKD,IAAIW;;AACjBN;;;AA/BhB,AAgCEe;;AAEJ,kCAAA,lCAAMU,4EAAiBC;AAAvB,AACE,MAAO,gDAAA,oDAAA,2CAAA,qDAAA,pMAACC;;AAGV,+BAAA,/BAAMC,sEAAc7B,IAAI8B;AAAxB,AACE,IAAAZ,mBAAI,AAAA,mGAAeY;AAAnB,AAAA,oBAAAZ;AAAAA;;AACI,IAAMf,MAAI,AAAA,kFAAMH;cAAhB,AAAAE,VACM6B,0BAAS5B;IACTM,aAAW,AAACC;IACZI,iBAAe,uDAAA,mFAAA,1IAACU,+CAAOO,6JAAqBtB;IAC5CM,UAAQ,AAAA,yFAAUD;IAClBkB,eAAa,sDAAA,tDAACC,8CAAMlB,oEAAiBN;AAL3C,AAMEuB;;;AAER,AAAA,6BAAA,qCAAAE,lEAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,yDAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,yDAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,2DAAA,3DAAMD,sEACFpC,IAAIsC;AADR,AAEG,sEAAA,/DAACC,yDAAWvC,IAAIsC;;;AAFnB,CAAA,2DAAA,3DAAMF,sEAGFpC,IAAIsC,EAAER;AAHV,AAIG,IAAMU,WAAS,AAAA,4FAAWxC;IACpByC,UAAQ,AAAA,0FAAUzC;IAClByC,cAAQ,qCAAA,AAAAvC,nCAAI,AAACwC,yBAAUD,0BAAUA,SAAQA;IACzCT,eAAa,AAACH,6BAAa7B,IAAI8B;IAC/Ba,aAAW,iBAAAC,WAAQ,kFAAA,yHAAA,kFAAA,sEAAA,2CAAA,yEAAA,WAAAC,leAACZ,qDAAMhD,2FACUuD,gIACIR;AAFrB,AAGuC,yCAAAa,lCAAC9C,8BAAcC;WAHtD,4DAIgB,WAAK8C;AAAL,AACE,IAAA5B,mBAAI,iBAAA6B,oBAAKN;AAAL,AAAA,oBAAAM;AAAa,QAACN,4CAAAA,+CAAAA,LAAQK,2BAAAA;;AAAtBC;;;AAAJ,AAAA,oBAAA7B;AAAAA;;AAAA,IAAAA,uBACI,iBAAA8B,eAAA,AAAA9C,gBAAEpB;AAAF,AAAA,QAAAkE,6CAAAA,gDAAAA,LAAeF,4BAAAA;;AADnB,AAAA,oBAAA5B;AAAAA;;AAAA,IAAAA,uBAEI,iBAAA+B,WAAQ,iBAAAC,WAA2BlD;IAA3BmD,WAAA;IAAAC,WAAkCN;IAAlCO,eAAA,AAAAnD,gBAAEoD;AAAF,AAAA,QAAAD,6CAAAA,2CAAAH,SAAAC,SAAAC,YAAAC,uBAAAH,SAAAC,SAAAC;;IAARH,eAAA,EAAA,CAAAA,YAAA,OAAA,KAAA,eAAAA,fACQvD;AADR,AAAA,GAAA,CAAAuD,gBAAA;AAAA;;AAAA,OAAA,sIAAAA;;;AAFJ,AAAA,oBAAA/B;AAAAA;;AAKI,IAAA1B,qBAAA,AAAAU,gBAAcnB;AAAd,AAAA,oBAAAS;AAAA,AAAA,QAAAA,JAAW+D;AAAX,AACE,kBAAKC;AAAL,AACE,QAACD,kCAAAA,0CAAAA,VAAET,sBAAAA,pBAAEU,sBAAAA;;;AAFT;;;;;GAVtB,+DAakB,kBAAA,AAAAtD,gBAAKvB,4BACH,WAAK8E;AAAL,AACE,OAACC,oBAAW1D,IAAIyD;GAClB/B;AAhB5B,AAAA,oBAiBEI;AAAK,8GAAAc,vGAACe,gHAAM7B;;AAjBdc;;;IAkBX5B,MAAI,iBAAA,AAAK,IAAMzB,IAAE,AAACsE,sDAAmBvB,EAAEK;AAA9B,AACE,oBAAI,uIAAA,4HAAA,lQAACmB,mEAAAA,gJAAAA,/EAAoBvE,4HAAAA;AACvBb,AAAA;;AACAa;;gBAHT,GAAA,CAAAqE,kBAKqBG;AALrB,QAAAH,JAK8CI;AAL9C,AAMO,MAAO,AAACpC,gDACiB,AAAWoC,UACpB,0EAAA,qDAAA,0HAAA,sDAAA,QAAA,sDAAA,AAAA9D,7WAAC+B,qDAAM,AAACgC,kBAAQD,sTAGFE,kCACdF;;AAZvB,AAAA,MAAAJ;;;;AAtBV,AAmCE5C;;;AAvCL,CAAA,qDAAA,rDAAMoB;;AAAN,AAyCA,yBAAA,zBAAM+B,0DAAQV;AAAd,AAEW,IAAMW,gBAAc,AAACC,6CAAgBZ;cAArC,VACMa;IACAC,kBAAgB,KAAAC,8CAAmBJ,cACA,AAACK,qDAAaH,SACdA,QAAQA;AAJjD,AAKE,OAACI,uFAA4BH;;AAE1C,kCAAA,lCAAMI,4EAAiBC;AAAvB,AACE,OAACC,+CAAkBD;;AAErB,oCAAA,pCAAME,gFAAmBF;AAAzB,AACE,OAACG,iDAAoBH;;AAEvB,+BAAA,/BAAMI,sEACFhF,IAAIiF;AADR,AAEG,IAAM3C,IAAE,AAAC6B,uBAAOc;IACV1F,IAAE,AAACgD,yDAAWvC,IAAIsC;AADxB,AAEE,oBAAI,CAACwB,mEAAAA,sKAAAA,rGAAoBpF,AAAA,kJAAAA,AAAA,lDAAIa,kJAAAA;AAA7B;;AAAoCA;;;AAIzC","names",["sci.impl.parser/eof","sci.impl.parser/read-eval","sci.impl.vars.new_var","sci.impl.vars/clojure-core-ns","sci.impl.parser/data-readers","sci.impl.parser/default-data-reader-fn","sci.impl.parser/reader-resolver","sci.impl.parser/default-opts","edamame.core/normalize-opts","obj","cljs.core/Symbol","cljs.core/seq?","sci.impl.parser/var->sym","v","temp__5804__auto__","m","cljs.core/meta","var-name","ns","cljs.core.symbol","sci.impl.vars/getName","sci.impl.parser/fully-qualify","ctx","sym","cljs.core/deref","env","sym-ns","n","cljs.core/namespace","sym-name-str","cljs.core/name","current-ns","sci.impl.vars/current-ns-name","current-ns-str","namespaces","cljs.core.get","the-current-ns","aliases","ret","cljs.core/not","or__5045__auto__","refers","cljs.core/contains?","G__49734","sci.impl.utils/ana-macros","sci.impl.interop/fully-qualify-class","cljs.core.get_in","temp__5802__auto__","sci.impl.parser/throw-eval-read","_","cljs.core.ex_info","sci.impl.parser/auto-resolve","opts","env-val","auto-resolve","cljs.core.assoc","var_args","G__49737","sci.impl.parser/parse-next","js/Error","r","sci.impl.parser.parse_next","features","readers","sci.impl.vars/var?","parse-opts","G__49738","p1__49735#","t","and__5043__auto__","fexpr__49739","G__49740","G__49742","G__49743","G__49744","fexpr__49741","sci.impl.utils/eval-resolve-state","f","form","x","sci.impl.utils/eval","cljs.core.merge","e49745","edamame.core.parse_next","sci.impl.utils/kw-identical?","cljs.core/ExceptionInfo","e","cljs.core/ex-data","sci.impl.vars/current-file","sci.impl.parser/reader","string-reader","cljs.tools.reader.reader-types/string-reader","buf-len","pushback-reader","cljs.tools.reader.reader-types/PushbackReader","cljs.core.object_array","cljs.tools.reader.reader_types.indexing_push_back_reader","sci.impl.parser/get-line-number","reader","cljs.tools.reader.reader-types/get-line-number","sci.impl.parser/get-column-number","cljs.tools.reader.reader-types/get-column-number","sci.impl.parser/parse-string","s"]],"~:used-vars",["^U",["~$sci.impl.parser/parse-next","~$sci.impl.vars/new-var","~$sci.impl.parser/default-opts","~$sci.impl.vars/clojure-core-ns","~$sci.impl.vars/getName","~$sci.impl.parser/default-data-reader-fn","~$cljs.tools.reader.reader-types/get-column-number","~$sci.impl.parser/get-line-number","~$cljs.core/deref","~$sci.impl.vars/current-file","~$cljs.core/object-array","~$sci.impl.parser/parse-string","~$sci.impl.parser/get-column-number","~$cljs.core/ExceptionInfo","~$edamame.core/normalize-opts","~$cljs.tools.reader.reader-types/indexing-push-back-reader","~$sci.impl.vars/var?","~$cljs.core/contains?","~$sci.impl.vars/current-ns-name","~$sci.impl.parser/auto-resolve","~$cljs.core/namespace","~$cljs.tools.reader.reader-types/string-reader","~$cljs.core/get-in","~$sci.impl.utils/ana-macros","~$cljs.core/get","~$sci.impl.parser/reader","~$cljs.core/symbol","~$sci.impl.parser/reader-resolver","~$cljs.tools.reader.reader-types/get-line-number","~$cljs.core/ex-info","~$cljs.core/meta","~$sci.impl.parser/data-readers","~$sci.impl.parser/fully-qualify","~$sci.impl.parser/var->sym","~$cljs.core/not","~$edamame.core/parse-next","~$cljs.core/assoc","~$sci.impl.parser/eof","~$cljs.core/Symbol","~$cljs.core/ex-data","~$sci.impl.parser/read-eval","~$sci.impl.utils/kw-identical?","~$sci.impl.parser/throw-eval-read","~$cljs.core/seq?","~$sci.impl.interop/fully-qualify-class","~$cljs.core/name","~$cljs.core/merge","~$js/Error","~$sci.impl.utils/eval-resolve-state","~$sci.impl.utils/eval","~$cljs.tools.reader.reader-types/PushbackReader"]]],"~:cache-keys",["~#cmap",[["^1K","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^U",[]],"~:deps-syms",["^17","~$goog.dom.HtmlElement"]]],["^1K","edamame/core.cljc"],["b54bd287c84a2627384be29d09c4652c7631d9fa","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16","^J","~$edamame.impl.parser"]]],["^1K","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16","~$clojure.string","~$goog.string"]]],["^1K","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17"]]],["^1K","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^1K","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3?"]]],["^1K","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^3@"]]],["^1K","sci/impl/unrestrict.cljc"],["cbcc4315d53fbc459974b9d4c5427cac9f667b74","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16"]]],["^1K","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17"]]],["^1K","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16","^F","^J","^@","^D","~$cljs.tools.reader","^3;","~$goog.string.StringBuffer"]]],["^1K","sci/impl/parser.cljc"],["cbcc4315d53fbc459974b9d4c5427cac9f667b74","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16","^J","^15","^18","^19","^14"]]],["^1K","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17"]]],["^1K","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16"]]],["^1K","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16","^J","^@","^D","^F","^3<","^3;","^3H"]]],["^1K","edamame/impl/parser.cljc"],["b54bd287c84a2627384be29d09c4652c7631d9fa","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16","^L","^J","~$cljs.tools.reader.impl.inspect","^@","^D","~$cljs.tagged-literals","^3:","~$edamame.impl.read-fn","~$edamame.impl.syntax-quote","^3H"]]],["^1K","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17"]]],["^1K","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17"]]],["^1K","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^3@"]]],["^1K","sci/impl/macros.cljc"],["cbcc4315d53fbc459974b9d4c5427cac9f667b74","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16"]]],"~:SHADOW-TIMESTAMP",[1666857604000,1666857604000,1666857293000],["^1K","edamame/impl/syntax_quote.cljc"],["b54bd287c84a2627384be29d09c4652c7631d9fa","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16","^3:"]]],["^1K","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^3@","~$goog.reflect"]]],["^1K","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^3@","~$goog.fs.blob","^3A","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3C","^3D","^3E","^3F"]]],["^1K","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17"]]],["^1K","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17"]]],["^1K","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^3E","~$goog.html.SafeUrl","^3F","^3@","^3?"]]],["^1K","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^3@","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^3P","~$goog.html.SafeStyle","^3R","^3B","~$goog.html.uncheckedconversions","^3E","^3?"]]],["^1K","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^3E","^3C","^3D","^3P","^3V","~$goog.html.SafeStyleSheet","^3R","~$goog.dom.TagName","^3B","^3F","^3@","~$goog.labs.userAgent.browser","^3<","^3=","^3?","~$goog.dom.tags","^3Q"]]],["^1K","sci/impl/types.cljc"],["cbcc4315d53fbc459974b9d4c5427cac9f667b74","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16"]]],["^1K","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^3="]]],["^1K","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17"]]],["^1K","cljs/reader.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16","^3=","^3G","^L","^3H"]]],["^1K","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1K","sci/impl/vars.cljc"],["cbcc4315d53fbc459974b9d4c5427cac9f667b74","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16","~$sci.impl.macros","~$sci.impl.types","~$sci.impl.unrestrict","~$sci.lang"]]],["^1K","cljs/tagged_literals.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16","~$cljs.reader"]]],["^1K","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^3<","^3@","~$goog.collections.maps","^3;","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1K","edamame/impl/read_fn.cljc"],["b54bd287c84a2627384be29d09c4652c7631d9fa","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16"]]],["^1K","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17"]]],["^1K","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17"]]],["^1K","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17"]]],["^1K","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",[]]],["^1K","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^3<","^3="]]],["^1K","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16","^J","^3:","^3I"]]],["^1K","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16","^3;","^3H"]]],["^1K","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","~$goog.dom.safe","^3W","^3E","^3?"]]],["^1K","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17"]]],["^1K","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","~$goog.labs.userAgent","^3?"]]],["^1K","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17"]]],["^1K","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16","^@","^3;","^3H"]]],["^1K","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17"]]],["^1K","sci/impl/utils.cljc"],["cbcc4315d53fbc459974b9d4c5427cac9f667b74","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16","^3:","^43","^14"]]],["^1K","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^3@","^3U","^3P","^3V","^3X","^3R","^3B","^3E","^3?","^3C"]]],["^1K","sci/lang.cljc"],["cbcc4315d53fbc459974b9d4c5427cac9f667b74","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16"]]],["^1K","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16","^F","^J","^@"]]],["^1K","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17"]]],["^1K","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","~$goog.math.Long","~$goog.math.Integer","^3;","^3=","^3<","~$goog.Uri","^3H"]]],["^1K","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^3E","^3F","^3Q","^3@"]]],["^1K","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^3E","^3V","^3F","^3=","^3@","^3?"]]],["^1K","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^3N"]]],["^1K","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^3@","^3;"]]],["^1K","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^3@","^3F"]]],["^1K","sci/impl/interop.cljc"],["cbcc4315d53fbc459974b9d4c5427cac9f667b74","^34",["^ ","^35",null,"^36",["^U",[]],"^37",["^17","^16","^3=","^3:","^14"]]]]],"~:clj-info",["^ ","jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/babashka/sci/0.2.8/sci-0.2.8.jar!/sci/impl/vars.cljc",1666857315000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/reader.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/babashka/sci/0.2.8/sci-0.2.8.jar!/sci/impl/macros.cljc",1666857315000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1666857314000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1663156501000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1666857293000,"jar:file:/Users/aleksey/.m2/repository/org/babashka/sci/0.2.8/sci-0.2.8.jar!/sci/impl/types.cljc",1666857315000,"jar:file:/Users/aleksey/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1666857280000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6",true,"^7","sci/impl/parser.cljc","^8",1,"^9",5,"^:",1,"^;",20],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^O","^P","^Q","^R"],"^S",null,"^T",["^U",["^V","^W"]],"^X","^Y","^Z",["^ "],"^11",null,"^12",["^ ","^13","^14","^15","^15","~$r","^J","^16","^16","^I","^J","^17","^17","^J","^J","^18","^18","^14","^14","^19","^19","^1:","^18","^1;","^19","^1<","^15"],"^1=",["^U",["^1>"]],"~:shadow/js-access-global",["^U",["Error"]],"^1?",null,"~:defs",["^ ","~$parse-string",["^ ","~:protocol-inline",null,"^5",["^ ","^7","sci/impl/parser.cljc","^8",170,"^9",7,"^:",170,"^;",19,"~:arglists",["^1B",["~$quote",["^1B",[["~$ctx","~$s"]]]]]],"^X","^26","^7","sci/impl/parser.cljc","^;",19,"~:method-params",["^1B",[["^5@","~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^1B",[null,null]],"^9",1,"~:variadic?",false,"^8",170,"~:ret-tag",["^U",["~$any","~$clj-nil"]],"^:",170,"~:max-fixed-arity",2,"~:fn-var",true,"^5>",["^1B",["^5?",["^1B",[["^5@","~$s"]]]]]],"~$eof",["^ ","^5",["^ ","^7","sci/impl/parser.cljc","^8",13,"^9",14,"^:",13,"^;",17,"~:const",true],"^X","^2P","^7","sci/impl/parser.cljc","^;",17,"~:const-expr",["^ ","^[","^5K","~:val","~:sci.impl.parser.edamame/eof","~:env",["^ ","~:context","~:expr"],"^1A","^5N","~:tag","~$cljs.core/Keyword"],"^9",1,"^5K",true,"^8",13,"^:",13,"^5R","^5S"],"~$auto-resolve",["^ ","^5=",null,"^5",["^ ","^7","sci/impl/parser.cljc","^8",104,"^9",7,"^:",104,"^;",19,"^5>",["^1B",["^5?",["^1B",[["^5@","~$opts"]]]]]],"^X","^2>","^7","sci/impl/parser.cljc","^;",19,"^5A",["^1B",[["^5@","^5U"]]],"^5B",null,"^5C",["^1B",[null,null]],"^9",1,"^5D",false,"^8",104,"^5E",["^U",["~$clj","^5F"]],"^:",104,"^5H",2,"^5I",true,"^5>",["^1B",["^5?",["^1B",[["^5@","^5U"]]]]]],"~$default-opts",["^ ","^X","^1Y","^7","sci/impl/parser.cljc","^8",34,"^9",1,"^:",34,"^;",18,"^5",["^ ","^7","sci/impl/parser.cljc","^8",34,"^9",6,"^:",34,"^;",18],"^5R","~$edamame.impl.parser/Options"],"~$fully-qualify",["^ ","^5=",null,"^5",["^ ","^7","sci/impl/parser.cljc","^8",65,"^9",7,"^:",65,"^;",20,"^5>",["^1B",["^5?",["^1B",[["^5@","~$sym"]]]]]],"^X","^2K","^7","sci/impl/parser.cljc","^;",20,"^5A",["^1B",[["^5@","^5Z"]]],"^5B",null,"^5C",["^1B",[null,null]],"^9",1,"^5D",false,"^8",65,"^5E",["^U",[null,"^5F","^2Q"]],"^:",65,"^5H",2,"^5I",true,"^5>",["^1B",["^5?",["^1B",[["^5@","^5Z"]]]]]],"~$data-readers",["^ ","^X","^2J","^7","sci/impl/parser.cljc","^8",19,"^9",1,"^:",19,"^;",18,"^5",["^ ","^7","sci/impl/parser.cljc","^8",19,"^9",6,"^:",19,"^;",18],"^5R","~$sci.impl.vars/SciVar"],"~$var->sym",["^ ","^5=",null,"^5",["^ ","^7","sci/impl/parser.cljc","^8",58,"^9",7,"^:",58,"^;",15,"^5>",["^1B",["^5?",["^1B",[["~$v"]]]]]],"^X","^2L","^7","sci/impl/parser.cljc","^;",15,"^5A",["^1B",[["~$v"]]],"^5B",null,"^5C",["^1B",[null,null]],"^9",1,"^5D",false,"^8",58,"^5E",["^U",["^2Q","^5G"]],"^:",58,"^5H",1,"^5I",true,"^5>",["^1B",["^5?",["^1B",[["~$v"]]]]]],"~$get-column-number",["^ ","^5=",null,"^5",["^ ","^7","sci/impl/parser.cljc","^8",167,"^9",7,"^:",167,"^;",24,"^5>",["^1B",["^5?",["^1B",[["~$reader"]]]]]],"^X","^27","^7","sci/impl/parser.cljc","^;",24,"^5A",["^1B",[["^63"]]],"^5B",null,"^5C",["^1B",[null,null]],"^9",1,"^5D",false,"^8",167,"^5E","^5F","^:",167,"^5H",1,"^5I",true,"^5>",["^1B",["^5?",["^1B",[["^63"]]]]]],"~$read-eval",["^ ","^X","^2S","^7","sci/impl/parser.cljc","^8",15,"^9",1,"^:",15,"^;",15,"^5",["^ ","^7","sci/impl/parser.cljc","^8",15,"^9",6,"^:",15,"^;",15],"^5R","^60"],"~$throw-eval-read",["^ ","^5=",null,"^5",["^ ","^7","sci/impl/parser.cljc","^8",100,"^9",7,"^:",100,"^;",22,"^5>",["^1B",["^5?",["^1B",[["~$_"]]]]]],"^X","^2U","^7","sci/impl/parser.cljc","^;",22,"^5A",["^1B",[["~$_"]]],"^5B",null,"^5C",["^1B",[null,null]],"^9",1,"^5D",false,"^8",100,"^5E","~$ignore","^:",100,"^5H",1,"^5I",true,"^5>",["^1B",["^5?",["^1B",[["~$_"]]]]]],"~$parse-next",["^ ","^5=",null,"^5",["^ ","^7","sci/impl/parser.cljc","^8",114,"^9",7,"^:",114,"^;",17,"^5>",["^1B",["^5?",["^1B",[["^5@","~$r"],["^5@","~$r","^5U"]]]]],"~:top-fn",["^ ","^5D",false,"~:fixed-arity",3,"^5H",3,"^5A",[["^5@","~$r"],["^5@","~$r","^5U"]],"^5>",["^1B",[["^5@","~$r"],["^5@","~$r","^5U"]]],"^5C",["^1B",[null,null]]]],"^X","^1W","^7","sci/impl/parser.cljc","^;",17,"^68",["^ ","^5D",false,"^69",3,"^5H",3,"^5A",[["^5@","~$r"],["^5@","~$r","^5U"]],"^5>",["^1B",[["^5@","~$r"],["^5@","~$r","^5U"]]],"^5C",["^1B",[null,null]]],"^5A",[["^5@","~$r"],["^5@","~$r","^5U"]],"^5B",null,"^69",3,"^5C",["^1B",[null,null]],"^9",1,"^5D",false,"~:methods",[["^ ","^69",2,"^5D",false,"^5R","^5F"],["^ ","^69",3,"^5D",false]],"^8",114,"^:",114,"^5H",3,"^5I",true,"^5>",["^1B",[["^5@","~$r"],["^5@","~$r","^5U"]]]],"~$reader-resolver",["^ ","^X","^2F","^7","sci/impl/parser.cljc","^8",29,"^9",1,"^:",29,"^;",21,"^5",["^ ","^7","sci/impl/parser.cljc","^8",29,"^9",6,"^:",29,"^;",21],"^5R","^60"],"~$default-data-reader-fn",["^ ","^X","^20","^7","sci/impl/parser.cljc","^8",24,"^9",1,"^:",24,"^;",28,"^5",["^ ","^7","sci/impl/parser.cljc","^8",24,"^9",6,"^:",24,"^;",28],"^5R","^60"],"^63",["^ ","^5=",null,"^5",["^ ","^7","sci/impl/parser.cljc","^8",155,"^9",7,"^:",155,"^;",13,"^5>",["^1B",["^5?",["^1B",[["~$x"]]]]]],"^X","^2D","^7","sci/impl/parser.cljc","^;",13,"^5A",["^1B",[["~$x"]]],"^5B",null,"^5C",["^1B",[null,null]],"^9",1,"^5D",false,"^8",155,"^5E","^5F","^:",155,"^5H",1,"^5I",true,"^5>",["^1B",["^5?",["^1B",[["~$x"]]]]]],"~$get-line-number",["^ ","^5=",null,"^5",["^ ","^7","sci/impl/parser.cljc","^8",164,"^9",7,"^:",164,"^;",22,"^5>",["^1B",["^5?",["^1B",[["^63"]]]]]],"^X","^22","^7","sci/impl/parser.cljc","^;",22,"^5A",["^1B",[["^63"]]],"^5B",null,"^5C",["^1B",[null,null]],"^9",1,"^5D",false,"^8",164,"^5E","^5F","^:",164,"^5H",1,"^5I",true,"^5>",["^1B",["^5?",["^1B",[["^63"]]]]]]],"^1@",["^ ","^16","^16","^13","^14","^14","^14"],"~:cljs.analyzer/constants",["^ ","^1=",["^U",["~:features","^1E","~:namespaces","~:sci.error/parse","~:end-location","~:else","~:location?","~:row-key","^10","^X","~:refers","~:col-key","^7","~:readers","~$*default-data-reader-fn*","~:read-cond","~:phase","~:type","~:sci.impl.record/map-constructor","~:read-eval","~:resolve-symbol","^5O","~:all","~:allow","^9","~$clojure.core","~:syntax-quote","~:dynamic","^8","^5N","~:current","~$*read-eval","~:aliases","~:edamame.core/eof","~$*reader-resolver*","~:refer","~:auto-resolve"]],"~:order",["^5N","^6V","^10","^6T","^6I","^6Y","^6P","^6N","^6E","^6G","^6J","^6D","^6B","^8","^9","^6Q","^X","^5O","^6@","^6W","^6F","^6R","^6Z","^1E","^6L","^6A","^6[","^6U","^6?","^6H","^6S","^6O","^6M","^6K","^7","^6C","^6X"]],"^1G",["^ ","^1>",["^U",[]]],"^1H",["^ "],"^1I",["^17","^16","^J","^15","^18","^19","^14"]],"^10","^Y","~:ns-specs",["^ "],"~:ns-spec-vars",["^U",[]],"~:compiler-options",["^33",[["^73","~:static-fns"],true,["^73","~:shadow-tweaks"],null,["^73","~:source-map-inline"],null,["^73","~:elide-asserts"],false,["^73","~:optimize-constants"],null,["^73","^1N"],null,["^73","~:external-config"],null,["^73","~:tooling-config"],null,["^73","~:emit-constants"],null,["^73","~:load-tests"],null,["^73","~:form-size-threshold"],null,["^73","~:global-goog-object&array"],null,["^73","~:data-readers"],null,["^73","~:infer-externs"],"~:auto",["^73","^1P"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^73","~:fn-invoke-direct"],null,["^73","~:source-map"],"/dev/null"]]]